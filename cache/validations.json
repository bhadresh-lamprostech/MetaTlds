{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "2b105bdc20d6814db31fe01710a20888d913de3671aca60505b374be005dfd7d",
          "withoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432",
          "linkedWithoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)2421_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2421_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "bfff8005515e93211243913b1635e557b99dd2b6e39ab207b206f1de3afe2b1c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "5d795c63839000421cb6ab57736db6a94c83e3422b481381b76b35bd47f4ae5f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "8e1d694a7fbe7793750cbc8995519ff6026e1d2510d6faa9dedf5ab5e986164f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fe25d14f6b0719fe70d1352af34ff59a1724c8810a5113ff50be0fd4a071fad5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "be2af50f58be2155126fb2ec3ce37b3e026cd3fd85749d6b464ae8677e1bfed4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4783",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)4783": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts\\access\\TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)4783",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)4783": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)4599",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)4599": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts\\admin\\SANN.sol:11",
        "version": {
          "withMetadata": "720480b139895df4906c8643c54ab992522c3955b2616be59979fb5d93184c1f",
          "withoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167",
          "linkedWithoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)4833_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)4833_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)4833_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts\\base\\Base.sol:13",
        "version": {
          "withMetadata": "5582c03aa6c12e3b6c114e17100165fc620c7add7c7b7007d2278a132bc8ed37",
          "withoutMetadata": "292d10064a0f6470bf744bce6bee056e833f4c49bf8be25dfa931796b1118fe4",
          "linkedWithoutMetadata": "292d10064a0f6470bf744bce6bee056e833f4c49bf8be25dfa931796b1118fe4"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts\\base\\Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts\\base\\Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)2421_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)4783",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:17"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IMetaTldsRegistry)11315",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IMetaTldsRegistry)11315": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4783": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2421_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts\\base\\IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts\\controller\\RegistrarController.sol:36",
        "version": {
          "withMetadata": "b90b59595e8bf65c2aacbd23d8899c6153b3645f97e46485e563023c90ee85b3",
          "withoutMetadata": "0a00e69342f749d19d102fa6cc268d0751af0fbc235d6bcfaca22323f179a15a",
          "linkedWithoutMetadata": "0a00e69342f749d19d102fa6cc268d0751af0fbc235d6bcfaca22323f179a15a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)4783",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)4599",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)6562_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)6584_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)10142)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)4633",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)10142",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)11178",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)4599": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)9808": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)4633": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)9847": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)10142": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)9882": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)9929": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)9968": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)10019": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)11178": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)10070": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4783": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)10142)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)6562_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)6584_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)6562_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)6584_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)9882",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)9847",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)9808",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)10070",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)9968",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)9929",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)10019",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "07465c9148e08bb7c5b15d668e64a477ec1983be57581d1ec75698b9974d9b0a",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)4783",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)10248_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)10142",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)10142": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4783": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)10248_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)10248_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)10248_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts\\registrar\\IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts\\resolvers\\ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts\\resolvers\\Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts\\resolvers\\ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts\\resolvers\\SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts\\resolvers\\profiles\\IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts\\resolvers\\profiles\\INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts\\resolvers\\profiles\\ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts\\resolvers\\profiles\\IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test\\controller\\mocks\\DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "3c9585458c6776bb76c09cc0aead3999b91bef6bbd2e01248a9c337512940b9e",
          "withoutMetadata": "74c8a20a0ee5f15bb96030bc8926889cc9b2512b8067481c4ed9b2d2d382d088",
          "linkedWithoutMetadata": "74c8a20a0ee5f15bb96030bc8926889cc9b2512b8067481c4ed9b2d2d382d088"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)4783",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)4599",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)6562_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)6584_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)10142)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)4633",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)10142",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)11178",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)4599": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)9808": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)4633": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)9847": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)10142": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)9882": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)9929": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)9968": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)10019": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)11178": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)10070": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4783": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)10142)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)6562_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)6584_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)6562_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)6584_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)9882",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)9847",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)9808",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)10070",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)9968",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)9929",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)10019",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "e15a14fdc91e0abfaf7d65744ee105995e6aca871c0621d4822fcdf1f954c914",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6648",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6648": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "fcdf5c6d55b7b5b6a4571cc0d77a6f535381d9140eea36229153f7a3739c8cc8",
          "withoutMetadata": "405f623de120ad0887987c292d9a0cac28ed3043a319a778ae3089daaf28b3fa",
          "linkedWithoutMetadata": "405f623de120ad0887987c292d9a0cac28ed3043a319a778ae3089daaf28b3fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6664",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:30"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:33"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2783",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:36"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6726",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:40"
            },
            {
              "label": "stakingContract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IStaking)7837",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)3331",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3069",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)7659",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3069": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3331": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6664": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6726": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2783": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IStaking)7837": {
              "label": "contract IStaking",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7659": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "7f3eed7d774b67f94476a076cac361603759bfb0d547275a22415be2cbf32d90",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6576",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3069",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6648",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3069": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6648": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6576": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "ebc0cea47a159d882cc27cf635ff3a4f98226c4f88191366967c3b97ceef9766",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6576",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6576": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "b41aedf8d3a28276cc2818e567f85435335b2cece09948d07a1a40c1dcc9ea92",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5300_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5286_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5305_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5305_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5300_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5286_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5286_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5305_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5300_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "07465c9148e08bb7c5b15d668e64a477ec1983be57581d1ec75698b9974d9b0a",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6832_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6648",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6648": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6832_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6832_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6832_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/IStaking.sol:IStaking": {
        "src": "contracts\\staking\\IStaking.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "hasStaked(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/Staking.sol:Staking": {
        "src": "contracts\\staking\\Staking.sol:6",
        "version": {
          "withMetadata": "ad6c742736c13db9a3055f4bf557d2fe65bd66004b1bc6bd103ae64c866c2477",
          "withoutMetadata": "1703da21e8ffa56fdd5ceeb57f03448d7243a7588bbe5ba403b990e1354719ae",
          "linkedWithoutMetadata": "1703da21e8ffa56fdd5ceeb57f03448d7243a7588bbe5ba403b990e1354719ae"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "hasStaked(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts\\staking\\Staking.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:9"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/Staking.sol:Staking": {
        "src": "contracts\\staking\\Staking.sol:6",
        "version": {
          "withMetadata": "099f2886c61ec3b60faf7540d3a7206d8e7e505294f038f4cdbcdef2d7af4ebf",
          "withoutMetadata": "2e0a60ca61adf37192883f054feb5a6a2bf365266328424a830a61b042c8b634",
          "linkedWithoutMetadata": "2e0a60ca61adf37192883f054feb5a6a2bf365266328424a830a61b042c8b634"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "hasStaked(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts\\staking\\Staking.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:9"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/Staking.sol:Staking": {
        "src": "contracts\\staking\\Staking.sol:6",
        "version": {
          "withMetadata": "2492c8f4a47138071797664706e076551522fdbc95d7e3546bc931bb703c9f8a",
          "withoutMetadata": "01c8a07304f1cae76b420cff4d1864f6b36aa59efead81e8e5c4b0cb778bdcc9",
          "linkedWithoutMetadata": "01c8a07304f1cae76b420cff4d1864f6b36aa59efead81e8e5c4b0cb778bdcc9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "hasStaked(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts\\staking\\Staking.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:9"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "e15a14fdc91e0abfaf7d65744ee105995e6aca871c0621d4822fcdf1f954c914",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6644",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "5059821c000844ca6bedbfa6a769cba7e73298589553eea160a4eb505611c8f7",
          "withoutMetadata": "01f1cadaf47527de61d388900212856fd6fe02dc7680b8e431d1f2557783ad38",
          "linkedWithoutMetadata": "01f1cadaf47527de61d388900212856fd6fe02dc7680b8e431d1f2557783ad38"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6660",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:30"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:33"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2779",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:36"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6722",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:40"
            },
            {
              "label": "stakingContract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IStaking)7831",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)3327",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3065",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)7655",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3065": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3327": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6660": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6722": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2779": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IStaking)7831": {
              "label": "contract IStaking",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7655": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "7f3eed7d774b67f94476a076cac361603759bfb0d547275a22415be2cbf32d90",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6572",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3065",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6644",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3065": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6572": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "ebc0cea47a159d882cc27cf635ff3a4f98226c4f88191366967c3b97ceef9766",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6572",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6572": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "b41aedf8d3a28276cc2818e567f85435335b2cece09948d07a1a40c1dcc9ea92",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5296_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5282_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5301_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5301_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5296_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5282_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5282_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5301_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5296_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "07465c9148e08bb7c5b15d668e64a477ec1983be57581d1ec75698b9974d9b0a",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6828_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6644",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6828_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6828_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6828_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/IStaking.sol:IStaking": {
        "src": "contracts\\staking\\IStaking.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "hasStaked()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/Staking.sol:Staking": {
        "src": "contracts\\staking\\Staking.sol:6",
        "version": {
          "withMetadata": "099f2886c61ec3b60faf7540d3a7206d8e7e505294f038f4cdbcdef2d7af4ebf",
          "withoutMetadata": "2e0a60ca61adf37192883f054feb5a6a2bf365266328424a830a61b042c8b634",
          "linkedWithoutMetadata": "2e0a60ca61adf37192883f054feb5a6a2bf365266328424a830a61b042c8b634"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "hasStaked(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts\\staking\\Staking.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:9"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "e15a14fdc91e0abfaf7d65744ee105995e6aca871c0621d4822fcdf1f954c914",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6644",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "287056f6496ab3dc1baf51d026c4bc234940cfa45518a2032f72c3e15ef65717",
          "withoutMetadata": "4fa8de43d9439d1c479ea01627fe1cdd1cdf44712067cb58554bbf9211cb56b1",
          "linkedWithoutMetadata": "4fa8de43d9439d1c479ea01627fe1cdd1cdf44712067cb58554bbf9211cb56b1"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6660",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:30"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:33"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2779",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:36"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6722",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:40"
            },
            {
              "label": "stakingContract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IStaking)7829",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)3327",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3065",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)7655",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3065": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3327": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6660": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6722": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2779": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IStaking)7829": {
              "label": "contract IStaking",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7655": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "7f3eed7d774b67f94476a076cac361603759bfb0d547275a22415be2cbf32d90",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6572",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3065",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6644",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3065": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6572": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "ebc0cea47a159d882cc27cf635ff3a4f98226c4f88191366967c3b97ceef9766",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6572",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6572": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "b41aedf8d3a28276cc2818e567f85435335b2cece09948d07a1a40c1dcc9ea92",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5296_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5282_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5301_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5301_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5296_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5282_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5282_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5301_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5296_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "07465c9148e08bb7c5b15d668e64a477ec1983be57581d1ec75698b9974d9b0a",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6828_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6644",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6828_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6828_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6828_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/IStaking.sol:IStaking": {
        "src": "contracts\\staking\\IStaking.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "hasStaked()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/Staking.sol:Staking": {
        "src": "contracts\\staking\\Staking.sol:6",
        "version": {
          "withMetadata": "12ac3eeafa72a013f283c06f0b90042ce488a434e1eb1b43ac02d2ed669447da",
          "withoutMetadata": "2e0a60ca61adf37192883f054feb5a6a2bf365266328424a830a61b042c8b634",
          "linkedWithoutMetadata": "2e0a60ca61adf37192883f054feb5a6a2bf365266328424a830a61b042c8b634"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "hasStaked(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts\\staking\\Staking.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:9"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestAnswer()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\security\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\security\\Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\security\\Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:20",
        "version": {
          "withMetadata": "26c5ddc301ce5c70ea2f80fe00c7b78bec200f87d8bb9e413b8ffaab5854e018",
          "withoutMetadata": "a57931f2848983428f1d0525011c931532695b14fd916005e6624bf6e9e1730e",
          "linkedWithoutMetadata": "a57931f2848983428f1d0525011c931532695b14fd916005e6624bf6e9e1730e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "2b105bdc20d6814db31fe01710a20888d913de3671aca60505b374be005dfd7d",
          "withoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432",
          "linkedWithoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)4020_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)4020_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)4020_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)4020_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "bfff8005515e93211243913b1635e557b99dd2b6e39ab207b206f1de3afe2b1c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "5d795c63839000421cb6ab57736db6a94c83e3422b481381b76b35bd47f4ae5f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "8e1d694a7fbe7793750cbc8995519ff6026e1d2510d6faa9dedf5ab5e986164f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fe25d14f6b0719fe70d1352af34ff59a1724c8810a5113ff50be0fd4a071fad5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "be2af50f58be2155126fb2ec3ce37b3e026cd3fd85749d6b464ae8677e1bfed4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts\\access\\TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6232",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6232": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6232",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6232": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PlatformConfig.sol:PlatformConfig": {
        "src": "contracts\\admin\\PlatformConfig.sol:9",
        "version": {
          "withMetadata": "f4025e14de10c53a811ded876876fbe7f90e89972510d0c4e5fa54fb3402d05b",
          "withoutMetadata": "7c5050c5d3fb55b6af25b7d5928f133f65e65c6e596860c7d6eb2ac7e3790bd1",
          "linkedWithoutMetadata": "7c5050c5d3fb55b6af25b7d5928f133f65e65c6e596860c7d6eb2ac7e3790bd1"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPlatformConfig.sol:IPlatformConfig"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(uint256,uint256,address)",
          "setDefaultMinPlatformFee(uint256)",
          "setDefaultRateBps(uint256)",
          "setPlatformFeeCollector(address)",
          "setCustomizedPlatformFee(uint256,uint256,uint256,bool)",
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PlatformConfig",
            "src": "contracts\\admin\\PlatformConfig.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "customizedConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(CustomizedConfig)6189_storage)",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:12"
            },
            {
              "label": "platformFeeCollector",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:14"
            },
            {
              "label": "defaultMinPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:16"
            },
            {
              "label": "defaultRateBps",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(CustomizedConfig)6189_storage)": {
              "label": "mapping(uint256 => struct IPlatformConfig.CustomizedConfig)",
              "numberOfBytes": "32"
            },
            "t_struct(CustomizedConfig)6189_storage": {
              "label": "struct IPlatformConfig.CustomizedConfig",
              "members": [
                {
                  "label": "minPlatformFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeRateBps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "e15a14fdc91e0abfaf7d65744ee105995e6aca871c0621d4822fcdf1f954c914",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6232",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)18664",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6232": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18664": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts\\admin\\SANN.sol:11",
        "version": {
          "withMetadata": "720480b139895df4906c8643c54ab992522c3955b2616be59979fb5d93184c1f",
          "withoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167",
          "linkedWithoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)6982_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)6982_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)6982_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "731d1ee32fafc95cc06b3823f35084d3efe57759abd5b0cfdc1047241c4cb2b0",
          "withoutMetadata": "4fa8de43d9439d1c479ea01627fe1cdd1cdf44712067cb58554bbf9211cb56b1",
          "linkedWithoutMetadata": "4fa8de43d9439d1c479ea01627fe1cdd1cdf44712067cb58554bbf9211cb56b1"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)19686",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:30"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:33"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)9893",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:36"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)19748",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:40"
            },
            {
              "label": "stakingContract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IStaking)23989",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)14769",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)14507",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)20884",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)6932",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)14507": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14769": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)19686": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)19748": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)9893": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IStaking)23989": {
              "label": "contract IStaking",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6932": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)20884": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts\\base\\Base.sol:13",
        "version": {
          "withMetadata": "5582c03aa6c12e3b6c114e17100165fc620c7add7c7b7007d2278a132bc8ed37",
          "withoutMetadata": "292d10064a0f6470bf744bce6bee056e833f4c49bf8be25dfa931796b1118fe4",
          "linkedWithoutMetadata": "292d10064a0f6470bf744bce6bee056e833f4c49bf8be25dfa931796b1118fe4"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts\\base\\Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts\\base\\Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)4020_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)4020_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:17"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IMetaTldsRegistry)21611",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IMetaTldsRegistry)21611": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)4020_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)4020_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts\\base\\IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts\\controller\\RegistrarController.sol:36",
        "version": {
          "withMetadata": "8626debfadc0fea32531bd3fecb8e732e1f623b9a947c64ac500a4ffe6e33f7e",
          "withoutMetadata": "0a00e69342f749d19d102fa6cc268d0751af0fbc235d6bcfaca22323f179a15a",
          "linkedWithoutMetadata": "0a00e69342f749d19d102fa6cc268d0751af0fbc235d6bcfaca22323f179a15a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6232",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)9514_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)9536_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18664)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6266",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18664",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)20987",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6232": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16479": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6266": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16518": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18664": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16553": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16600": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16639": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16690": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)20987": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16741": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18664)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)9514_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)9536_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)9514_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)9536_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16553",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16518",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16479",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16741",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16639",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16600",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16690",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/create2factory/Create2Factory.sol:Create2Factory": {
        "src": "contracts\\create2factory\\Create2Factory.sol:15",
        "version": {
          "withMetadata": "c7cac7a06f7a3f555aeba6a0a12031465ae58eb72eadee9b68bfd2ae6f475e09",
          "withoutMetadata": "20ffaac2d8f18b1f74935618136687e5054483368903cbe486d52742c85b07bd",
          "linkedWithoutMetadata": "20ffaac2d8f18b1f74935618136687e5054483368903cbe486d52742c85b07bd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "safeCreate2(bytes32,bytes)",
          "findCreate2Address(bytes32,bytes)",
          "findCreate2AddressViaHash(bytes32,bytes32)",
          "hasBeenDeployed(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_deployed",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Create2Factory",
              "src": "contracts\\create2factory\\Create2Factory.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/IVerifiedTldHub.sol:IVerifiedTldHub": {
        "src": "contracts\\domain-governer\\IVerifiedTldHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateTldInfo(string,uint256,uint256,address,string)",
          "removeTldInfo(uint256,string)",
          "getChainTlds(uint256)",
          "updateChainInfo(uint256,string,address,address)",
          "updateDefaultRpc(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/VerifiedTldHub.sol:VerifiedTldHub": {
        "src": "contracts\\domain-governer\\VerifiedTldHub.sol:5",
        "version": {
          "withMetadata": "c875c7ab9f4e97f1f316d5c330b51b8a64e395659469d68da5a75580fe8d84e5",
          "withoutMetadata": "23a40d5a1b28e62162fda8f46ddf0cc14e017601a8f5d394a8936d97903e5d89",
          "linkedWithoutMetadata": "23a40d5a1b28e62162fda8f46ddf0cc14e017601a8f5d394a8936d97903e5d89"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updateTldInfo(string,uint256,uint256,address)",
          "removeTldInfo(uint256,string)",
          "updateChainInfo(uint256,string,address)",
          "updateDefaultRpc(uint256,string)",
          "getChainTlds(uint256)",
          "getTlds()",
          "getChainInfo(uint256)",
          "getTldInfo(string[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_struct(TldInfo)12966_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:29"
            },
            {
              "label": "chainTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:30"
            },
            {
              "label": "chainInfos",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(chainInfo)12973_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:31"
            },
            {
              "label": "tlds",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(TldInfo)12966_storage)": {
              "label": "mapping(string => struct VerifiedTldHub.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(uint256 => string[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(chainInfo)12973_storage)": {
              "label": "mapping(uint256 => struct VerifiedTldHub.chainInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)12966_storage": {
              "label": "struct VerifiedTldHub.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identifier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "registry",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(chainInfo)12973_storage": {
              "label": "struct VerifiedTldHub.chainInfo",
              "members": [
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "defaultRpc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sann",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardBase.sol:GiftCardBase": {
        "src": "contracts\\giftcard\\GiftCardBase.sol:10",
        "version": {
          "withMetadata": "1373921c6426333cf5b008e9005b011f8beb8c9aa3bea4a090717a8e2d107bea",
          "withoutMetadata": "50d237f8d8457d1ae6ea752f9abf1b663fa83988ae2695a4a48c2f8f34530aa7",
          "linkedWithoutMetadata": "50d237f8d8457d1ae6ea752f9abf1b663fa83988ae2695a4a48c2f8f34530aa7"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address)",
          "setURI(string)",
          "uri(uint256)",
          "name()",
          "symbol()",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])",
          "batchBurn(address,uint256[],uint256[])",
          "addController(address)",
          "removeController(address)",
          "pause()",
          "unpause()",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardBase",
            "src": "contracts\\giftcard\\GiftCardBase.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:30"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\security\\Pausable.sol:28"
            },
            {
              "label": "sann",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardBase",
              "src": "contracts\\giftcard\\GiftCardBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardController.sol:GiftCardController": {
        "src": "contracts\\giftcard\\GiftCardController.sol:14",
        "version": {
          "withMetadata": "43c48b8e2f379f874dd6fc8c88f500c7293e1a8e6eba8771032a8f29de3321a1",
          "withoutMetadata": "6cfedae464a560b2c76c897eafaa61d33172101a14caab1e0ab825c8c5948849",
          "linkedWithoutMetadata": "6cfedae464a560b2c76c897eafaa61d33172101a14caab1e0ab825c8c5948849"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "price(uint256[],uint256[])",
          "batchRegister(uint256[],uint256[])",
          "batchRedeem(uint256,uint256[],uint256[])",
          "setPriceOracle(address)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardController",
            "src": "contracts\\giftcard\\GiftCardController.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "base",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(GiftCardBase)13778",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:15"
            },
            {
              "label": "voucher",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(GiftCardVoucher)14769",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:16"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14507",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:17"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPlatformConfig)6232",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:18"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(PrepaidPlatformFee)6932",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:19"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPriceOracle)18664",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:20"
            },
            {
              "label": "tldGiftCardRevenues",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:25"
            }
          ],
          "types": {
            "t_contract(GiftCardBase)13778": {
              "label": "contract GiftCardBase",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardLedger)14507": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14769": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6232": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18664": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6932": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase": {
        "src": "contracts\\giftcard\\IGiftCardBase.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addController(address)",
          "removeController(address)",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "7f3eed7d774b67f94476a076cac361603759bfb0d547275a22415be2cbf32d90",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)18592",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)6232",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14507",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)18664",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)14507": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6232": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18664": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18592": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "ebc0cea47a159d882cc27cf635ff3a4f98226c4f88191366967c3b97ceef9766",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18592",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18592": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/Auction.sol:Auction": {
        "src": "contracts\\preregistration\\Auction.sol:17",
        "version": {
          "withMetadata": "d108205c37ed03ab31315461f4118e3921172ef4c93950867b360f01a6e141e9",
          "withoutMetadata": "d36730a6a6a42ae8a09a938da8065f72abbbc2270f578909b9f1c60e1d0137ef",
          "linkedWithoutMetadata": "d36730a6a6a42ae8a09a938da8065f72abbbc2270f578909b9f1c60e1d0137ef"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,address,address,address)",
          "placeBid(string)",
          "nextBidFloorPrice(uint256,string)",
          "withdraw(string)",
          "ownerWithdraw()",
          "available(string)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Auction",
            "src": "contracts\\preregistration\\Auction.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "controller",
            "src": "contracts\\preregistration\\Auction.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\Auction.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6232",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:20"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18592",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:21"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PrepaidPlatformFee)6932",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:22"
            },
            {
              "label": "ownerCanWithdraw",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:28"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6232": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18592": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6932": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "b41aedf8d3a28276cc2818e567f85435335b2cece09948d07a1a40c1dcc9ea92",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)17316_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17302_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)17321_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)17321_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)17316_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17302_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)17302_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)17321_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)17316_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/PriceOracle.sol:PriceOracle": {
        "src": "contracts\\price-oracle\\PriceOracle.sol:13",
        "version": {
          "withMetadata": "e7bb8c0c016d9f108234af0a45bcc891c83a938e1b1e9761e01453035ae35198",
          "withoutMetadata": "99c68f104e76d997b05c20d715f5975f1773fb68587444923788ce1bae9da46a",
          "linkedWithoutMetadata": "99c68f104e76d997b05c20d715f5975f1773fb68587444923788ce1bae9da46a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/price-oracle/IPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address)",
          "initialize(address,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)",
          "premium(string,uint256,uint256)",
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setUsdOracle(address)",
          "decayedPremium(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceOracle",
            "src": "contracts\\price-oracle\\PriceOracle.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:16"
            },
            {
              "label": "startPremium",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:21"
            },
            {
              "label": "endValue",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:22"
            },
            {
              "label": "usdOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(AggregatorV3Interface)37",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:25"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorV3Interface)37": {
              "label": "contract AggregatorV3Interface",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))": {
              "label": "mapping(uint256 => mapping(uint8 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint64)": {
              "label": "mapping(uint8 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/BaseCreator.sol:BaseCreator": {
        "src": "contracts\\proxy\\BaseCreator.sol:10",
        "version": {
          "withMetadata": "991fa607603bc9156393733d786677331dc1fc96321f8c84bf3dde9d1fff4e09",
          "withoutMetadata": "525b04eaa82ae4d4ddcd744346a16899d4358ffea0ef56791dae5e7a7683c0fe",
          "linkedWithoutMetadata": "525b04eaa82ae4d4ddcd744346a16899d4358ffea0ef56791dae5e7a7683c0fe"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IBaseCreator.sol:IBaseCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCreator",
            "src": "contracts\\proxy\\BaseCreator.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "contracts\\proxy\\ERC1967Proxy.sol:6",
        "version": {
          "withMetadata": "3ea74e6065e71bd580429f556fd8378739f28cc8a616bade6c035c634e2e911b",
          "withoutMetadata": "fe2522a1a94011c432cf18ae8af6c8fd3ba2f228e8bdbfbf8a6f265a4f211eaf",
          "linkedWithoutMetadata": "fe2522a1a94011c432cf18ae8af6c8fd3ba2f228e8bdbfbf8a6f265a4f211eaf"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes32)",
          "initialize(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts\\proxy\\ERC1967Proxy.sol:17"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deployer",
            "src": "contracts\\proxy\\ERC1967Proxy.sol:8"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nameHash",
            "src": "contracts\\proxy\\ERC1967Proxy.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/PreRegistrationCreator.sol:PreRegistrationCreator": {
        "src": "contracts\\proxy\\PreRegistrationCreator.sol:15",
        "version": {
          "withMetadata": "fe478f7a866498115ef0e64ff9bc3c659b0536c8f7371c8277f7c2cf8b0e1a3f",
          "withoutMetadata": "909a2fafcae4f4c097759a392fbcfffa82360d7ab8cafd71d0521aaa3b27ec4b",
          "linkedWithoutMetadata": "909a2fafcae4f4c097759a392fbcfffa82360d7ab8cafd71d0521aaa3b27ec4b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationCreator",
            "src": "contracts\\proxy\\PreRegistrationCreator.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "07465c9148e08bb7c5b15d668e64a477ec1983be57581d1ec75698b9974d9b0a",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)20057_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)18664",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)18664": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)20057_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)20057_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)20057_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts\\registrar\\IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseRegistrar": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:26",
        "version": {
          "withMetadata": "fecc5c6d6bb044d199c0844dbcac2063142929ca2d9ba9864ad45465344dd5d7",
          "withoutMetadata": "5505cbeccef9156e9c520b1ab8b50a45c1a786cc55d7a95ae25e73f2874b0dcc",
          "linkedWithoutMetadata": "5505cbeccef9156e9c520b1ab8b50a45c1a786cc55d7a95ae25e73f2874b0dcc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)",
          "setController(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReverseRegistrar",
            "src": "contracts\\registrar\\ReverseRegistrar.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sid",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MetaTldsRegistry)22036",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:27"
            },
            {
              "label": "defaultResolver",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ReverseResolver)21010",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:28"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(MetaTldsRegistry)22036": {
              "label": "contract MetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ReverseResolver)21010": {
              "label": "contract ReverseResolver",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseResolver": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "setTldName(bytes32,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/MetaTldsRegistry.sol:MetaTldsRegistry": {
        "src": "contracts\\registry\\MetaTldsRegistry.sol:9",
        "version": {
          "withMetadata": "d75c88520fbd4de5146fd8241389ea4a279f38abe3752b13a5adc9eeaa2e62e2",
          "withoutMetadata": "9b89e68d19b9f7215073c6481a70a203efe27c0c1d4309c946ae146645c4f8c6",
          "linkedWithoutMetadata": "9b89e68d19b9f7215073c6481a70a203efe27c0c1d4309c946ae146645c4f8c6"
        },
        "inherit": [
          "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setOwner(bytes32,address)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaTldsRegistry",
            "src": "contracts\\registry\\MetaTldsRegistry.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Record)21624_storage)",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:16"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Record)21624_storage)": {
              "label": "mapping(bytes32 => struct MetaTldsRegistry.Record)",
              "numberOfBytes": "32"
            },
            "t_struct(Record)21624_storage": {
              "label": "struct MetaTldsRegistry.Record",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ttl",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/IMulticallable.sol:IMulticallable": {
        "src": "contracts\\resolvers\\IMulticallable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts\\resolvers\\ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Multicallable.sol:Multicallable": {
        "src": "contracts\\resolvers\\Multicallable.sol:7",
        "inherit": [
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\resolvers\\Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/PublicResolver.sol:PublicResolver": {
        "src": "contracts\\resolvers\\PublicResolver.sol:20",
        "version": {
          "withMetadata": "f726a004e10f8380c1ad65b7d0790dcea8bc7b322550301bab12b529c82c66cf",
          "withoutMetadata": "2473b13696b6a7965eb5b466c1cfefd610b409001938367aaa37a68cd9dfa62d",
          "linkedWithoutMetadata": "2473b13696b6a7965eb5b466c1cfefd610b409001938367aaa37a68cd9dfa62d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver",
          "contracts/resolvers/profiles/TextResolver.sol:TextResolver",
          "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver",
          "contracts/resolvers/profiles/NameResolver.sol:NameResolver",
          "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver",
          "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver",
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/Multicallable.sol:Multicallable",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "setNewTrustedController(address)",
          "removeTrustedController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PublicResolver",
            "src": "contracts\\resolvers\\PublicResolver.sol:51"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\resolvers\\Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:8"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:10"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts\\resolvers\\profiles\\NameResolver.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23683_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:13"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts\\resolvers\\profiles\\TextResolver.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:8"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "10",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IMetaTldsRegistry)21611",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:33"
            },
            {
              "label": "trustedControllers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:34"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IMetaTldsRegistry)21611": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)23683_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23683_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)23683_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts\\resolvers\\Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts\\resolvers\\ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts\\resolvers\\SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/mocks/DummyNameWrapper.sol:DummyNameWrapper": {
        "src": "contracts\\resolvers\\mocks\\DummyNameWrapper.sol:6",
        "version": {
          "withMetadata": "600e030d16642a01555006f1feaef81e0617148a77420c3b7594c3cebe58a967",
          "withoutMetadata": "6ed523dc698a29d8f3841b7cc079265f4ecc01a05c992212c7bfd7acbd5a4d38",
          "linkedWithoutMetadata": "6ed523dc698a29d8f3841b7cc079265f4ecc01a05c992212c7bfd7acbd5a4d38"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver": {
        "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "ABI(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver": {
        "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:8",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver"
        ],
        "libraries": [],
        "methods": [
          "setAddr(bytes32,address)",
          "addr(bytes32)",
          "setAddr(bytes32,uint256,bytes)",
          "addr(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver"
        ],
        "libraries": [],
        "methods": [
          "setContenthash(bytes32,bytes)",
          "contenthash(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ExtendedResolver.sol:ExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\ExtendedResolver.sol:4",
        "version": {
          "withMetadata": "009ac00a9a72d9df3a5ab7c35b64c28bca387db8dd800f521978d3be5e2f7e04",
          "withoutMetadata": "26248d63863a3e3b5b4b0191112166f11723e990974582642eb65a4fcc36249c",
          "linkedWithoutMetadata": "26248d63863a3e3b5b4b0191112166f11723e990974582642eb65a4fcc36249c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts\\resolvers\\profiles\\IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedDNSResolver.sol:IExtendedDNSResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedDNSResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts\\resolvers\\profiles\\INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts\\resolvers\\profiles\\ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts\\resolvers\\profiles\\IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:9",
        "inherit": [
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver"
        ],
        "libraries": [],
        "methods": [
          "setInterface(bytes32,bytes4,address)",
          "interfaceImplementer(bytes32,bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/NameResolver.sol:NameResolver": {
        "src": "contracts\\resolvers\\profiles\\NameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver"
        ],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "name(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts\\resolvers\\profiles\\NameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver"
        ],
        "libraries": [],
        "methods": [
          "setPubkey(bytes32,bytes32,bytes32)",
          "pubkey(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23683_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:13"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)23683_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23683_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)23683_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TextResolver.sol:TextResolver": {
        "src": "contracts\\resolvers\\profiles\\TextResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver"
        ],
        "libraries": [],
        "methods": [
          "setText(bytes32,string,string)",
          "text(bytes32,string)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts\\resolvers\\profiles\\TextResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver"
        ],
        "libraries": [],
        "methods": [
          "setTldName(bytes32,uint256,string)",
          "tldName(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/IStaking.sol:IStaking": {
        "src": "contracts\\staking\\IStaking.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "hasStaked()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/Staking.sol:Staking": {
        "src": "contracts\\staking\\Staking.sol:6",
        "version": {
          "withMetadata": "8c0a2217fc62858985e50c45615a3450966a3f1df9274ed6b1c545cc9c49b343",
          "withoutMetadata": "45b20260ef1a0f98a1534768ed49fafff26a32d131e8924e4f4c280e59c09d67",
          "linkedWithoutMetadata": "45b20260ef1a0f98a1534768ed49fafff26a32d131e8924e4f4c280e59c09d67"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "stake(uint256,string)",
          "checkAvailability(string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Staking",
            "src": "contracts\\staking\\Staking.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:9"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Staking",
              "src": "contracts\\staking\\Staking.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/access/mocks/DummyTldAccessableImpl.sol:DummyTldAccessableImpl": {
        "src": "test\\access\\mocks\\DummyTldAccessableImpl.sol:6",
        "version": {
          "withMetadata": "56b15754a0db3fae7a7b533872dcd238e15f8aee462ef9ae680a9e09aa7e3d8f",
          "withoutMetadata": "6029def20fdb0b0cefa3310676aa009e04fe4c59060ea26e6d12526efa234d6f",
          "linkedWithoutMetadata": "6029def20fdb0b0cefa3310676aa009e04fe4c59060ea26e6d12526efa234d6f"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "testOnlyTldOwner(uint256)",
          "testOnlyFactory()",
          "testOnlyTldController()",
          "testOnlyPlatformAdmin()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyTldAccessableImpl",
            "src": "test\\access\\mocks\\DummyTldAccessableImpl.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/admin/mocks/DummyUpgradeableSANN.sol:DummyUpgradeableSANN": {
        "src": "test\\admin\\mocks\\DummyUpgradeableSANN.sol:6",
        "version": {
          "withMetadata": "784229868aa608eb51b3bd4cf2540b3930a0c0b7f42af74b7a116afd10f5b167",
          "withoutMetadata": "83a0074f5b572d7950504a6329c7ab4fc03cfa181f69b7bead58d02bdf1462c2",
          "linkedWithoutMetadata": "83a0074f5b572d7950504a6329c7ab4fc03cfa181f69b7bead58d02bdf1462c2"
        },
        "inherit": [
          "contracts/admin/SANN.sol:SANN",
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)6982_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)6982_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)6982_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/common/mocks/Dummy.sol:Dummy": {
        "src": "test\\common\\mocks\\Dummy.sol:6",
        "version": {
          "withMetadata": "69a4b91d53d557d93cec8e20d3d291954089d4494ebc01d8d72f9535e0a5311b",
          "withoutMetadata": "a82d8748236ffbe22ef2ada7be5ed4a619ec517f0355594a6dd0d3fccd0a02c7",
          "linkedWithoutMetadata": "a82d8748236ffbe22ef2ada7be5ed4a619ec517f0355594a6dd0d3fccd0a02c7"
        },
        "inherit": [],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "containsZeroWidthChar(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test\\controller\\mocks\\DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "d2242e4859c2c9c06f50de0bd4bee3a25d7fe45e7c78832e371a36f07c84e0fb",
          "withoutMetadata": "74c8a20a0ee5f15bb96030bc8926889cc9b2512b8067481c4ed9b2d2d382d088",
          "linkedWithoutMetadata": "74c8a20a0ee5f15bb96030bc8926889cc9b2512b8067481c4ed9b2d2d382d088"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6416",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6232",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)9514_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)9536_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18664)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6266",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18664",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)20987",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6232": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16479": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6266": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16518": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18664": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16553": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16600": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16639": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16690": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)20987": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16741": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6416": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18664)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)9514_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)9536_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)9514_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)9536_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16553",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16518",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16479",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16741",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16639",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16600",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16690",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/preregistration/mocks/DummyOracle.sol:DummyOracle": {
        "src": "test\\preregistration\\mocks\\DummyOracle.sol:4",
        "version": {
          "withMetadata": "566af3ba73fbfff5a64b2e32426671896bf7d238fb012944882c20e67cae1c6f",
          "withoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a",
          "linkedWithoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(int256)",
          "set(int256)",
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyOracle",
            "src": "test\\preregistration\\mocks\\DummyOracle.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "DummyOracle",
              "src": "test\\preregistration\\mocks\\DummyOracle.sol:5"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    }
  ]
}