{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "9c591aa0351a1c167e69e20e9857503cb0a3958fe5464577d393dcefd9c1579c",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "bd6e4df1526c229a80bd2005967c2f34ab9fec40cb97bf41fe876aea2525e428",
          "withoutMetadata": "36f316dd07e7844c7aa97a3eff39edaf4ce3a0a0b7627d282288c6704aa6840b",
          "linkedWithoutMetadata": "36f316dd07e7844c7aa97a3eff39edaf4ce3a0a0b7627d282288c6704aa6840b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7446",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3565",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7508",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4113",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3851",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8441",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3851": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4113": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7446": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7508": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3565": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8441": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "442eaf91176d959b65218f50840dc1dc4a1d2dc60b31b5cd7960502623a8b2ce",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7358",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3851",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3851": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7358": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "7c929ad2560a860c11c36bd4d6c244be74b9ec81cb159564bb7862ada810369f",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7358",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7358": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "7fc6b0febf5865d10ce4319bc7c982b598c87a0f008a7ca35a5c284c4782a81f",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6082_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6068_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6087_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6087_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6082_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6068_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)6068_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6087_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6082_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "bd0d7bf7eeb55d232265f47c60c848b5eef474cc1506adff9ee82414a7832e57",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7614_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7614_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7614_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7614_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "9c591aa0351a1c167e69e20e9857503cb0a3958fe5464577d393dcefd9c1579c",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "7ae57923398e0936b97991a1e81e52fa8f33b1f198ab456eabb0ad6681ca38cf",
          "withoutMetadata": "45fb3aee8fd83d6ddc0a5042a6fa555c92f0700d3667969c10e9451c1ec8817c",
          "linkedWithoutMetadata": "45fb3aee8fd83d6ddc0a5042a6fa555c92f0700d3667969c10e9451c1ec8817c"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7446",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3565",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7508",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4113",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3851",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8441",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3851": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4113": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7446": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7508": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3565": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8441": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "442eaf91176d959b65218f50840dc1dc4a1d2dc60b31b5cd7960502623a8b2ce",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7358",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3851",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3851": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7358": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "7c929ad2560a860c11c36bd4d6c244be74b9ec81cb159564bb7862ada810369f",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7358",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7358": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "7fc6b0febf5865d10ce4319bc7c982b598c87a0f008a7ca35a5c284c4782a81f",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6082_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6068_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6087_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6087_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6082_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6068_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)6068_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6087_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6082_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "bd0d7bf7eeb55d232265f47c60c848b5eef474cc1506adff9ee82414a7832e57",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7614_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7614_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7614_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7614_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "9c591aa0351a1c167e69e20e9857503cb0a3958fe5464577d393dcefd9c1579c",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "d091a9177abe8cf10f346d99710da45279e7d466814b97867cfc7f86ac8aedba",
          "withoutMetadata": "e97d65ca44f55a07acb13e005bf2ee153a74a06690ec808297ba47d297c241fc",
          "linkedWithoutMetadata": "e97d65ca44f55a07acb13e005bf2ee153a74a06690ec808297ba47d297c241fc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7446",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3565",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7508",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4113",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3851",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8441",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3851": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4113": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7446": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7508": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3565": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8441": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "442eaf91176d959b65218f50840dc1dc4a1d2dc60b31b5cd7960502623a8b2ce",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7358",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3851",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3851": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7358": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "7c929ad2560a860c11c36bd4d6c244be74b9ec81cb159564bb7862ada810369f",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7358",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7358": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "7fc6b0febf5865d10ce4319bc7c982b598c87a0f008a7ca35a5c284c4782a81f",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6082_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6068_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6087_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6087_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6082_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6068_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)6068_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6087_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6082_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "bd0d7bf7eeb55d232265f47c60c848b5eef474cc1506adff9ee82414a7832e57",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7614_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7614_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7614_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7614_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "9c591aa0351a1c167e69e20e9857503cb0a3958fe5464577d393dcefd9c1579c",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "d091a9177abe8cf10f346d99710da45279e7d466814b97867cfc7f86ac8aedba",
          "withoutMetadata": "e97d65ca44f55a07acb13e005bf2ee153a74a06690ec808297ba47d297c241fc",
          "linkedWithoutMetadata": "e97d65ca44f55a07acb13e005bf2ee153a74a06690ec808297ba47d297c241fc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7446",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3565",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7508",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4113",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3851",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8441",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            },
            {
              "label": "tldRegistered",
              "offset": 0,
              "slot": "14",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3851": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4113": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7446": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7508": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3565": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8441": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "442eaf91176d959b65218f50840dc1dc4a1d2dc60b31b5cd7960502623a8b2ce",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7358",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3851",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3851": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7358": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "7c929ad2560a860c11c36bd4d6c244be74b9ec81cb159564bb7862ada810369f",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7358",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7358": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "7fc6b0febf5865d10ce4319bc7c982b598c87a0f008a7ca35a5c284c4782a81f",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6082_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6068_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6087_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6087_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6082_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6068_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)6068_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6087_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6082_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "bd0d7bf7eeb55d232265f47c60c848b5eef474cc1506adff9ee82414a7832e57",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7614_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7430",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7430": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7614_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7614_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7614_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "2b105bdc20d6814db31fe01710a20888d913de3671aca60505b374be005dfd7d",
          "withoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432",
          "linkedWithoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)2421_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2421_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "bfff8005515e93211243913b1635e557b99dd2b6e39ab207b206f1de3afe2b1c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "5d795c63839000421cb6ab57736db6a94c83e3422b481381b76b35bd47f4ae5f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "8e1d694a7fbe7793750cbc8995519ff6026e1d2510d6faa9dedf5ab5e986164f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fe25d14f6b0719fe70d1352af34ff59a1724c8810a5113ff50be0fd4a071fad5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "be2af50f58be2155126fb2ec3ce37b3e026cd3fd85749d6b464ae8677e1bfed4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts\\access\\TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)5161",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)5161": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)5161",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)5161": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "9c591aa0351a1c167e69e20e9857503cb0a3958fe5464577d393dcefd9c1579c",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)5161",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)15939",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)5161": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)15939": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts\\admin\\SANN.sol:11",
        "version": {
          "withMetadata": "720480b139895df4906c8643c54ab992522c3955b2616be59979fb5d93184c1f",
          "withoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167",
          "linkedWithoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)5606_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)5606_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)5606_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "2092dc36ea12df5334fe216fb8f5d680b264aec33eee58173673e31d96986194",
          "withoutMetadata": "0ae624c9728ea48c28fec16b187734809bad6a4e8b0404d01a7166b8811d5f9f",
          "linkedWithoutMetadata": "0ae624c9728ea48c28fec16b187734809bad6a4e8b0404d01a7166b8811d5f9f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)16026",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)8724",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)16088",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)12092",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)11830",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)17224",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)5556",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)11830": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)12092": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)16026": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)16088": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)8724": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)5556": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)17224": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts\\base\\Base.sol:13",
        "version": {
          "withMetadata": "5582c03aa6c12e3b6c114e17100165fc620c7add7c7b7007d2278a132bc8ed37",
          "withoutMetadata": "292d10064a0f6470bf744bce6bee056e833f4c49bf8be25dfa931796b1118fe4",
          "linkedWithoutMetadata": "292d10064a0f6470bf744bce6bee056e833f4c49bf8be25dfa931796b1118fe4"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts\\base\\Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts\\base\\Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)2421_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:17"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IMetaTldsRegistry)17951",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IMetaTldsRegistry)17951": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2421_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts\\base\\IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts\\controller\\RegistrarController.sol:36",
        "version": {
          "withMetadata": "96921a4879740133a93d7ea0fd75ed17e35b4aa6cb3da2dc2c0a8afd157ce7dd",
          "withoutMetadata": "0a00e69342f749d19d102fa6cc268d0751af0fbc235d6bcfaca22323f179a15a",
          "linkedWithoutMetadata": "0a00e69342f749d19d102fa6cc268d0751af0fbc235d6bcfaca22323f179a15a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)5161",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)8345_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)8367_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)15939)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)5195",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)15939",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)17327",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)5161": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)13754": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)5195": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)13793": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)15939": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)13828": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)13875": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)13914": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)13965": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)17327": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)14016": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)15939)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)8345_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)8367_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)8345_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)8367_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)13828",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)13793",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)13754",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)14016",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)13914",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)13875",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)13965",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "442eaf91176d959b65218f50840dc1dc4a1d2dc60b31b5cd7960502623a8b2ce",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)15867",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)5161",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)11830",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)15939",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)11830": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)5161": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)15939": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)15867": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "7c929ad2560a860c11c36bd4d6c244be74b9ec81cb159564bb7862ada810369f",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)15867",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)15867": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/Auction.sol:Auction": {
        "src": "contracts\\preregistration\\Auction.sol:17",
        "version": {
          "withMetadata": "966d415ec69120edc7e4617e3b4c802a890073e8f4eacccadc5d7ae34f06038b",
          "withoutMetadata": "d36730a6a6a42ae8a09a938da8065f72abbbc2270f578909b9f1c60e1d0137ef",
          "linkedWithoutMetadata": "d36730a6a6a42ae8a09a938da8065f72abbbc2270f578909b9f1c60e1d0137ef"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,address,address,address)",
          "placeBid(string)",
          "nextBidFloorPrice(uint256,string)",
          "withdraw(string)",
          "ownerWithdraw()",
          "available(string)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Auction",
            "src": "contracts\\preregistration\\Auction.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "controller",
            "src": "contracts\\preregistration\\Auction.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\Auction.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)5161",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:20"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)15867",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:21"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PrepaidPlatformFee)5556",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:22"
            },
            {
              "label": "ownerCanWithdraw",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:28"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)5161": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)15867": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)5556": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "7fc6b0febf5865d10ce4319bc7c982b598c87a0f008a7ca35a5c284c4782a81f",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)14591_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)14577_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)14596_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)14596_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)14591_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)14577_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)14577_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)14596_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)14591_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/BaseCreator.sol:BaseCreator": {
        "src": "contracts\\proxy\\BaseCreator.sol:10",
        "version": {
          "withMetadata": "ae3534d6096ce5bf022465584ad591916a070b4604135daa95c72f866342d285",
          "withoutMetadata": "525b04eaa82ae4d4ddcd744346a16899d4358ffea0ef56791dae5e7a7683c0fe",
          "linkedWithoutMetadata": "525b04eaa82ae4d4ddcd744346a16899d4358ffea0ef56791dae5e7a7683c0fe"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IBaseCreator.sol:IBaseCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCreator",
            "src": "contracts\\proxy\\BaseCreator.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/PreRegistrationCreator.sol:PreRegistrationCreator": {
        "src": "contracts\\proxy\\PreRegistrationCreator.sol:15",
        "version": {
          "withMetadata": "8b6284c3118170b3c023f773ffdfcadf80a36fdba01fa15c277713419853e1b2",
          "withoutMetadata": "bb7a9d6706ef49c35e7deaf24b4c037959f7e0eec34f072f1e55603bd37615b3",
          "linkedWithoutMetadata": "bb7a9d6706ef49c35e7deaf24b4c037959f7e0eec34f072f1e55603bd37615b3"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationCreator",
            "src": "contracts\\proxy\\PreRegistrationCreator.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "bd0d7bf7eeb55d232265f47c60c848b5eef474cc1506adff9ee82414a7832e57",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)16397_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)15939",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)15939": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)16397_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)16397_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)16397_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts\\registrar\\IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseRegistrar": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:26",
        "version": {
          "withMetadata": "5e22006ab52c8ce1da2637762342fbf406c4754218b2fc537027e449647dffd3",
          "withoutMetadata": "5505cbeccef9156e9c520b1ab8b50a45c1a786cc55d7a95ae25e73f2874b0dcc",
          "linkedWithoutMetadata": "5505cbeccef9156e9c520b1ab8b50a45c1a786cc55d7a95ae25e73f2874b0dcc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)",
          "setController(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReverseRegistrar",
            "src": "contracts\\registrar\\ReverseRegistrar.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sid",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MetaTldsRegistry)18376",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:27"
            },
            {
              "label": "defaultResolver",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ReverseResolver)17350",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:28"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(MetaTldsRegistry)18376": {
              "label": "contract MetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ReverseResolver)17350": {
              "label": "contract ReverseResolver",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseResolver": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "setTldName(bytes32,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/MetaTldsRegistry.sol:MetaTldsRegistry": {
        "src": "contracts\\registry\\MetaTldsRegistry.sol:9",
        "version": {
          "withMetadata": "d12fcb267ff67c6f2d425357438d75c0bab0609473ec65d0b50b47ee0b4f874d",
          "withoutMetadata": "9b89e68d19b9f7215073c6481a70a203efe27c0c1d4309c946ae146645c4f8c6",
          "linkedWithoutMetadata": "9b89e68d19b9f7215073c6481a70a203efe27c0c1d4309c946ae146645c4f8c6"
        },
        "inherit": [
          "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setOwner(bytes32,address)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaTldsRegistry",
            "src": "contracts\\registry\\MetaTldsRegistry.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Record)17964_storage)",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:16"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Record)17964_storage)": {
              "label": "mapping(bytes32 => struct MetaTldsRegistry.Record)",
              "numberOfBytes": "32"
            },
            "t_struct(Record)17964_storage": {
              "label": "struct MetaTldsRegistry.Record",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ttl",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/IMulticallable.sol:IMulticallable": {
        "src": "contracts\\resolvers\\IMulticallable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts\\resolvers\\ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Multicallable.sol:Multicallable": {
        "src": "contracts\\resolvers\\Multicallable.sol:7",
        "inherit": [
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\resolvers\\Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/PublicResolver.sol:PublicResolver": {
        "src": "contracts\\resolvers\\PublicResolver.sol:20",
        "version": {
          "withMetadata": "f726a004e10f8380c1ad65b7d0790dcea8bc7b322550301bab12b529c82c66cf",
          "withoutMetadata": "2473b13696b6a7965eb5b466c1cfefd610b409001938367aaa37a68cd9dfa62d",
          "linkedWithoutMetadata": "2473b13696b6a7965eb5b466c1cfefd610b409001938367aaa37a68cd9dfa62d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver",
          "contracts/resolvers/profiles/TextResolver.sol:TextResolver",
          "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver",
          "contracts/resolvers/profiles/NameResolver.sol:NameResolver",
          "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver",
          "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver",
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/Multicallable.sol:Multicallable",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "setNewTrustedController(address)",
          "removeTrustedController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PublicResolver",
            "src": "contracts\\resolvers\\PublicResolver.sol:51"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\resolvers\\Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:8"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:10"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts\\resolvers\\profiles\\NameResolver.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)19962_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:13"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts\\resolvers\\profiles\\TextResolver.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:8"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "10",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IMetaTldsRegistry)17951",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:33"
            },
            {
              "label": "trustedControllers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:34"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IMetaTldsRegistry)17951": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)19962_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)19962_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)19962_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts\\resolvers\\Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts\\resolvers\\ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts\\resolvers\\SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver": {
        "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "ABI(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver": {
        "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:8",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver"
        ],
        "libraries": [],
        "methods": [
          "setAddr(bytes32,address)",
          "addr(bytes32)",
          "setAddr(bytes32,uint256,bytes)",
          "addr(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver"
        ],
        "libraries": [],
        "methods": [
          "setContenthash(bytes32,bytes)",
          "contenthash(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts\\resolvers\\profiles\\IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts\\resolvers\\profiles\\INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts\\resolvers\\profiles\\ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts\\resolvers\\profiles\\IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:9",
        "inherit": [
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver"
        ],
        "libraries": [],
        "methods": [
          "setInterface(bytes32,bytes4,address)",
          "interfaceImplementer(bytes32,bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/NameResolver.sol:NameResolver": {
        "src": "contracts\\resolvers\\profiles\\NameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver"
        ],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "name(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts\\resolvers\\profiles\\NameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver"
        ],
        "libraries": [],
        "methods": [
          "setPubkey(bytes32,bytes32,bytes32)",
          "pubkey(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)19962_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:13"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)19962_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)19962_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)19962_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TextResolver.sol:TextResolver": {
        "src": "contracts\\resolvers\\profiles\\TextResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver"
        ],
        "libraries": [],
        "methods": [
          "setText(bytes32,string,string)",
          "text(bytes32,string)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts\\resolvers\\profiles\\TextResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver"
        ],
        "libraries": [],
        "methods": [
          "setTldName(bytes32,uint256,string)",
          "tldName(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/admin/mocks/DummyUpgradeableSANN.sol:DummyUpgradeableSANN": {
        "src": "test\\admin\\mocks\\DummyUpgradeableSANN.sol:6",
        "version": {
          "withMetadata": "784229868aa608eb51b3bd4cf2540b3930a0c0b7f42af74b7a116afd10f5b167",
          "withoutMetadata": "83a0074f5b572d7950504a6329c7ab4fc03cfa181f69b7bead58d02bdf1462c2",
          "linkedWithoutMetadata": "83a0074f5b572d7950504a6329c7ab4fc03cfa181f69b7bead58d02bdf1462c2"
        },
        "inherit": [
          "contracts/admin/SANN.sol:SANN",
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)5606_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)5606_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)5606_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test\\controller\\mocks\\DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "af29e2d3029f123f2d5a8f2cbb0dcb25ec8d028bbd6a51883f6363ebb0a296d5",
          "withoutMetadata": "74c8a20a0ee5f15bb96030bc8926889cc9b2512b8067481c4ed9b2d2d382d088",
          "linkedWithoutMetadata": "74c8a20a0ee5f15bb96030bc8926889cc9b2512b8067481c4ed9b2d2d382d088"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)5345",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)5161",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)8345_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)8367_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)15939)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)5195",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)15939",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)17327",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)5161": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)13754": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)5195": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)13793": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)15939": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)13828": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)13875": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)13914": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)13965": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)17327": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)14016": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)5345": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)15939)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)8345_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)8367_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)8345_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)8367_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)13828",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)13793",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)13754",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)14016",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)13914",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)13875",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)13965",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\security\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\security\\Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\security\\Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:20",
        "version": {
          "withMetadata": "26c5ddc301ce5c70ea2f80fe00c7b78bec200f87d8bb9e413b8ffaab5854e018",
          "withoutMetadata": "a57931f2848983428f1d0525011c931532695b14fd916005e6624bf6e9e1730e",
          "linkedWithoutMetadata": "a57931f2848983428f1d0525011c931532695b14fd916005e6624bf6e9e1730e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "2b105bdc20d6814db31fe01710a20888d913de3671aca60505b374be005dfd7d",
          "withoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432",
          "linkedWithoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3930_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3930_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3930_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3930_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "bfff8005515e93211243913b1635e557b99dd2b6e39ab207b206f1de3afe2b1c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "5d795c63839000421cb6ab57736db6a94c83e3422b481381b76b35bd47f4ae5f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "8e1d694a7fbe7793750cbc8995519ff6026e1d2510d6faa9dedf5ab5e986164f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fe25d14f6b0719fe70d1352af34ff59a1724c8810a5113ff50be0fd4a071fad5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "be2af50f58be2155126fb2ec3ce37b3e026cd3fd85749d6b464ae8677e1bfed4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts\\access\\TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6670",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6670": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6670",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6670": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PlatformConfig.sol:PlatformConfig": {
        "src": "contracts\\admin\\PlatformConfig.sol:9",
        "version": {
          "withMetadata": "f4025e14de10c53a811ded876876fbe7f90e89972510d0c4e5fa54fb3402d05b",
          "withoutMetadata": "7c5050c5d3fb55b6af25b7d5928f133f65e65c6e596860c7d6eb2ac7e3790bd1",
          "linkedWithoutMetadata": "7c5050c5d3fb55b6af25b7d5928f133f65e65c6e596860c7d6eb2ac7e3790bd1"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPlatformConfig.sol:IPlatformConfig"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(uint256,uint256,address)",
          "setDefaultMinPlatformFee(uint256)",
          "setDefaultRateBps(uint256)",
          "setPlatformFeeCollector(address)",
          "setCustomizedPlatformFee(uint256,uint256,uint256,bool)",
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PlatformConfig",
            "src": "contracts\\admin\\PlatformConfig.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "customizedConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(CustomizedConfig)6627_storage)",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:12"
            },
            {
              "label": "platformFeeCollector",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:14"
            },
            {
              "label": "defaultMinPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:16"
            },
            {
              "label": "defaultRateBps",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(CustomizedConfig)6627_storage)": {
              "label": "mapping(uint256 => struct IPlatformConfig.CustomizedConfig)",
              "numberOfBytes": "32"
            },
            "t_struct(CustomizedConfig)6627_storage": {
              "label": "struct IPlatformConfig.CustomizedConfig",
              "members": [
                {
                  "label": "minPlatformFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeRateBps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "9c591aa0351a1c167e69e20e9857503cb0a3958fe5464577d393dcefd9c1579c",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6670",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)18628",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6670": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18628": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts\\admin\\SANN.sol:11",
        "version": {
          "withMetadata": "eb6841b35fa2c6af5679089610f367a21ade5fb075f59da23b5d4db6dbbf74a0",
          "withoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167",
          "linkedWithoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)7420_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)7420_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)7420_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "8773af9a8aa2228f0c898e47f882e83af6092bba54de70ff9d2e79466f755de4",
          "withoutMetadata": "4dca9b640bc75c22a1c0547a0739a5b9db2920147f6be77419e4b78af5d0a38a",
          "linkedWithoutMetadata": "4dca9b640bc75c22a1c0547a0739a5b9db2920147f6be77419e4b78af5d0a38a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)19582",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)10538",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)19644",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)14733",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)14471",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)20780",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)7370",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)14471": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14733": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)19582": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)19644": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)10538": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)7370": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)20780": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts\\base\\Base.sol:13",
        "version": {
          "withMetadata": "0d9925af751b3e41a65726243d4865d31abebb5c4c1accb85e74bcefb57438a4",
          "withoutMetadata": "fde1d263baea9f388fe5dc8dcadb83bacb068d398f563a358bc3157421992e26",
          "linkedWithoutMetadata": "fde1d263baea9f388fe5dc8dcadb83bacb068d398f563a358bc3157421992e26"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts\\base\\Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts\\base\\Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)3930_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3930_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:17"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IMetaTldsRegistry)21507",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IMetaTldsRegistry)21507": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3930_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3930_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts\\base\\IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts\\controller\\RegistrarController.sol:36",
        "version": {
          "withMetadata": "34d3ae556f0caf87af527fe89abaf927ead5ccad8066d31b6975997177a9310e",
          "withoutMetadata": "582d96768a4acfefce980dbf37079f0db873edf5112c3be1d8e907d708672ec6",
          "linkedWithoutMetadata": "582d96768a4acfefce980dbf37079f0db873edf5112c3be1d8e907d708672ec6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6670",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)10159_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)10181_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18628)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6704",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18628",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)20883",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6670": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16443": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6704": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16482": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18628": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16517": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16564": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16603": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16654": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)20883": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16705": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18628)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)10159_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)10181_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)10159_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)10181_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16517",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16482",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16443",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16705",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16603",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16564",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16654",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardBase.sol:GiftCardBase": {
        "src": "contracts\\giftcard\\GiftCardBase.sol:10",
        "version": {
          "withMetadata": "1373921c6426333cf5b008e9005b011f8beb8c9aa3bea4a090717a8e2d107bea",
          "withoutMetadata": "50d237f8d8457d1ae6ea752f9abf1b663fa83988ae2695a4a48c2f8f34530aa7",
          "linkedWithoutMetadata": "50d237f8d8457d1ae6ea752f9abf1b663fa83988ae2695a4a48c2f8f34530aa7"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address)",
          "setURI(string)",
          "uri(uint256)",
          "name()",
          "symbol()",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])",
          "batchBurn(address,uint256[],uint256[])",
          "addController(address)",
          "removeController(address)",
          "pause()",
          "unpause()",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardBase",
            "src": "contracts\\giftcard\\GiftCardBase.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:30"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\security\\Pausable.sol:28"
            },
            {
              "label": "sann",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardBase",
              "src": "contracts\\giftcard\\GiftCardBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardController.sol:GiftCardController": {
        "src": "contracts\\giftcard\\GiftCardController.sol:14",
        "version": {
          "withMetadata": "cae28b8e1f5705698b150187ebcaa03f54d28bc19c7ed3e264b3c2f08f5c3f47",
          "withoutMetadata": "6cfedae464a560b2c76c897eafaa61d33172101a14caab1e0ab825c8c5948849",
          "linkedWithoutMetadata": "6cfedae464a560b2c76c897eafaa61d33172101a14caab1e0ab825c8c5948849"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "price(uint256[],uint256[])",
          "batchRegister(uint256[],uint256[])",
          "batchRedeem(uint256,uint256[],uint256[])",
          "setPriceOracle(address)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardController",
            "src": "contracts\\giftcard\\GiftCardController.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "base",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(GiftCardBase)13742",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:15"
            },
            {
              "label": "voucher",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(GiftCardVoucher)14733",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:16"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14471",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:17"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPlatformConfig)6670",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:18"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(PrepaidPlatformFee)7370",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:19"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPriceOracle)18628",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:20"
            },
            {
              "label": "tldGiftCardRevenues",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:25"
            }
          ],
          "types": {
            "t_contract(GiftCardBase)13742": {
              "label": "contract GiftCardBase",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardLedger)14471": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14733": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6670": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18628": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)7370": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "bbdc2749d973fb7e185fbc2958cd340e1a8a0ad5ad93846727ec4c0bce85d086",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "7e4e52375c37c7267fd80cd146169bcff3f7db41082025fdcbbd832e168ad87a",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase": {
        "src": "contracts\\giftcard\\IGiftCardBase.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addController(address)",
          "removeController(address)",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "6c7b3a8da0b6d5a0c78ffd839afb424cb7b4a7f920447963776859510c1ab1d7",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)18556",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)6670",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14471",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)18628",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)14471": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6670": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18628": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18556": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "82d879a1b0d5d152fd9ef33feb95019dc04c666bbe67787695ed39516159037d",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18556",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18556": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/Auction.sol:Auction": {
        "src": "contracts\\preregistration\\Auction.sol:17",
        "version": {
          "withMetadata": "d9f04209180f57725195405cc57cc824868f76f6a615fa0ff32f6d9445448f8c",
          "withoutMetadata": "d36730a6a6a42ae8a09a938da8065f72abbbc2270f578909b9f1c60e1d0137ef",
          "linkedWithoutMetadata": "d36730a6a6a42ae8a09a938da8065f72abbbc2270f578909b9f1c60e1d0137ef"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,address,address,address)",
          "placeBid(string)",
          "nextBidFloorPrice(uint256,string)",
          "withdraw(string)",
          "ownerWithdraw()",
          "available(string)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Auction",
            "src": "contracts\\preregistration\\Auction.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "controller",
            "src": "contracts\\preregistration\\Auction.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\Auction.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6670",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:20"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18556",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:21"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PrepaidPlatformFee)7370",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:22"
            },
            {
              "label": "ownerCanWithdraw",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:28"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6670": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18556": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)7370": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "e6bd347f227193f1ce8d464c04a82ed17cea3b440ec18fb7544d14772105ea57",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)17280_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17266_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)17285_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)17285_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)17280_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17266_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)17266_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)17285_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)17280_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/PriceOracle.sol:PriceOracle": {
        "src": "contracts\\price-oracle\\PriceOracle.sol:12",
        "version": {
          "withMetadata": "6595ca3ad972a6fc9cdea26beeb97ee9ea714e41eb8a21399ca22f6c87055fd8",
          "withoutMetadata": "99c68f104e76d997b05c20d715f5975f1773fb68587444923788ce1bae9da46a",
          "linkedWithoutMetadata": "99c68f104e76d997b05c20d715f5975f1773fb68587444923788ce1bae9da46a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/price-oracle/IPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address)",
          "initialize(address,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)",
          "premium(string,uint256,uint256)",
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setUsdOracle(address)",
          "decayedPremium(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceOracle",
            "src": "contracts\\price-oracle\\PriceOracle.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:15"
            },
            {
              "label": "startPremium",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:20"
            },
            {
              "label": "endValue",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:21"
            },
            {
              "label": "usdOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(AggregatorInterface)9870",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:24"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorInterface)9870": {
              "label": "contract AggregatorInterface",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))": {
              "label": "mapping(uint256 => mapping(uint8 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint64)": {
              "label": "mapping(uint8 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/BaseCreator.sol:BaseCreator": {
        "src": "contracts\\proxy\\BaseCreator.sol:10",
        "version": {
          "withMetadata": "a380ab1d14ebd449af572d6559be202966771c597aa09fdbdfa2b0092f004ddf",
          "withoutMetadata": "d31c433ca0e01c113fb597b1556c3ae68a9a8ff7b6a150e678b973e5b8ca0b50",
          "linkedWithoutMetadata": "d31c433ca0e01c113fb597b1556c3ae68a9a8ff7b6a150e678b973e5b8ca0b50"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IBaseCreator.sol:IBaseCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCreator",
            "src": "contracts\\proxy\\BaseCreator.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/PreRegistrationCreator.sol:PreRegistrationCreator": {
        "src": "contracts\\proxy\\PreRegistrationCreator.sol:15",
        "version": {
          "withMetadata": "fe41ab8b141a5265e85292267f17216c1eb85a8963eeba892e5d1f02e6ebd7e8",
          "withoutMetadata": "5e90594fe229d1aac2a26ec548378e312d7c5dd0d6e3a8061034eb452acc2cdf",
          "linkedWithoutMetadata": "5e90594fe229d1aac2a26ec548378e312d7c5dd0d6e3a8061034eb452acc2cdf"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationCreator",
            "src": "contracts\\proxy\\PreRegistrationCreator.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "6d4cce5d6f8b959f0382ea7928dd91dd37a678daaea8bf47ef0fd10ae7b04599",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)19953_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)18628",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)18628": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)19953_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)19953_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)19953_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts\\registrar\\IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseRegistrar": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:26",
        "version": {
          "withMetadata": "78e3964d67d9cd90a3e3cfba4849248838ba556b0c217adf654876b3a34bf5ff",
          "withoutMetadata": "5505cbeccef9156e9c520b1ab8b50a45c1a786cc55d7a95ae25e73f2874b0dcc",
          "linkedWithoutMetadata": "5505cbeccef9156e9c520b1ab8b50a45c1a786cc55d7a95ae25e73f2874b0dcc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)",
          "setController(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReverseRegistrar",
            "src": "contracts\\registrar\\ReverseRegistrar.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sid",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MetaTldsRegistry)21932",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:27"
            },
            {
              "label": "defaultResolver",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ReverseResolver)20906",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:28"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ReverseResolver)20906": {
              "label": "contract ReverseResolver",
              "numberOfBytes": "20"
            },
            "t_contract(MetaTldsRegistry)21932": {
              "label": "contract MetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseResolver": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "setTldName(bytes32,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/MetaTldsRegistry.sol:MetaTldsRegistry": {
        "src": "contracts\\registry\\MetaTldsRegistry.sol:9",
        "version": {
          "withMetadata": "52c7b19efe1374d2056c80fc29baf1d27ec57c90b3cab449b5464c9780daf039",
          "withoutMetadata": "9b89e68d19b9f7215073c6481a70a203efe27c0c1d4309c946ae146645c4f8c6",
          "linkedWithoutMetadata": "9b89e68d19b9f7215073c6481a70a203efe27c0c1d4309c946ae146645c4f8c6"
        },
        "inherit": [
          "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setOwner(bytes32,address)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaTldsRegistry",
            "src": "contracts\\registry\\MetaTldsRegistry.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Record)21520_storage)",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:16"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Record)21520_storage)": {
              "label": "mapping(bytes32 => struct MetaTldsRegistry.Record)",
              "numberOfBytes": "32"
            },
            "t_struct(Record)21520_storage": {
              "label": "struct MetaTldsRegistry.Record",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ttl",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts\\resolvers\\ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts\\resolvers\\Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts\\resolvers\\ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts\\resolvers\\SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts\\resolvers\\profiles\\IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts\\resolvers\\profiles\\INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts\\resolvers\\profiles\\ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts\\resolvers\\profiles\\IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/access/mocks/DummyTldAccessableImpl.sol:DummyTldAccessableImpl": {
        "src": "test\\access\\mocks\\DummyTldAccessableImpl.sol:6",
        "version": {
          "withMetadata": "56b15754a0db3fae7a7b533872dcd238e15f8aee462ef9ae680a9e09aa7e3d8f",
          "withoutMetadata": "6029def20fdb0b0cefa3310676aa009e04fe4c59060ea26e6d12526efa234d6f",
          "linkedWithoutMetadata": "6029def20fdb0b0cefa3310676aa009e04fe4c59060ea26e6d12526efa234d6f"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "testOnlyTldOwner(uint256)",
          "testOnlyFactory()",
          "testOnlyTldController()",
          "testOnlyPlatformAdmin()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyTldAccessableImpl",
            "src": "test\\access\\mocks\\DummyTldAccessableImpl.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test\\controller\\mocks\\DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "e48ae0c66eb02092455da2a28fc2420784a3fa8b57e1c574b31fc455952f6c8e",
          "withoutMetadata": "45d0cda75e5a45885d636ff7bf7d89b9f9f0699439635c6d0677654c82b76dcb",
          "linkedWithoutMetadata": "45d0cda75e5a45885d636ff7bf7d89b9f9f0699439635c6d0677654c82b76dcb"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6854",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6670",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)10159_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)10181_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18628)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6704",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18628",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)20883",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6670": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16443": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6704": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16482": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18628": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16517": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16564": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16603": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16654": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)20883": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16705": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6854": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18628)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)10159_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)10181_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)10159_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)10181_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16517",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16482",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16443",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16705",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16603",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16564",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16654",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7379",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7379": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "f302fcb7325f474d2452d1dd1f46094eede5c63bf272bb396b4604582f5389b2",
          "withoutMetadata": "249589e2935c37a6700c93e49e7566e0202c9f19b6626806e77503a32e216623",
          "linkedWithoutMetadata": "249589e2935c37a6700c93e49e7566e0202c9f19b6626806e77503a32e216623"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7395",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3514",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7457",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4062",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3800",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8390",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3800": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4062": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7395": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7457": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3514": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8390": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7307",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3800",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7379",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3800": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7379": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7307": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7307",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7307": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6031_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6017_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6036_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6036_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6031_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6017_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)6017_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6036_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6031_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7563_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7379",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7379": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7563_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7563_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7563_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7353",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7353": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "60eede3109da99d25565cc9974451aa2b88e256f917b5c4617b22e8d3800e778",
          "withoutMetadata": "95515cd66072cd8919a74d3b6c262500b0dbf399541af88a40e5b8b65d55d9ff",
          "linkedWithoutMetadata": "95515cd66072cd8919a74d3b6c262500b0dbf399541af88a40e5b8b65d55d9ff"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7369",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3488",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7431",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4036",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3774",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8364",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3774": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4036": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7369": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7431": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3488": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8364": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7281",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3774",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7353",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3774": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7353": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7281": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7281",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7281": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6005_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5991_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6010_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6010_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6005_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5991_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5991_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6010_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6005_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7537_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7353",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7353": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7537_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7537_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7537_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7353",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7353": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "c4c651b81e546e04baab2e72b02a37102195deed2c93e355078adc2bb2d48653",
          "withoutMetadata": "95515cd66072cd8919a74d3b6c262500b0dbf399541af88a40e5b8b65d55d9ff",
          "linkedWithoutMetadata": "95515cd66072cd8919a74d3b6c262500b0dbf399541af88a40e5b8b65d55d9ff"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7369",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3488",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7431",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4036",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3774",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8364",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3774": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4036": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7369": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7431": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3488": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8364": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7281",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3774",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7353",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3774": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7353": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7281": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7281",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7281": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6005_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5991_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6010_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6010_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6005_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5991_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5991_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6010_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6005_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7537_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7353",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7353": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7537_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7537_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7537_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7354",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7354": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "6dcfc418ac17d02325cc373708e5df781ccf74904e0827729ffa412fc4760487",
          "withoutMetadata": "dccfdcec889eca9b447cfbe13ed07314694f5a267f7e0b47fae12f65fd406621",
          "linkedWithoutMetadata": "dccfdcec889eca9b447cfbe13ed07314694f5a267f7e0b47fae12f65fd406621"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7370",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3489",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7432",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4037",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3775",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8365",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3775": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4037": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7370": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7432": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3489": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8365": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7282",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3775",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7354",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3775": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7354": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7282": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7282",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7282": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6006_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5992_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6011_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6011_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6006_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5992_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5992_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6011_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6006_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7538_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7354",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7354": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7538_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7538_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7538_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7370",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7370": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "0121c81c736899fedd4b3263ef1e34265172a5f9ca717539c3f61a65e95ba30e",
          "withoutMetadata": "65207b75223aaf42b1070f3ce6c95ea45d723f51f461bddbb2e0a4c9aa7ac9d4",
          "linkedWithoutMetadata": "65207b75223aaf42b1070f3ce6c95ea45d723f51f461bddbb2e0a4c9aa7ac9d4"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7386",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3505",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7448",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4053",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3791",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8381",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3791": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4053": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7386": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7448": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3505": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8381": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7298",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3791",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7370",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3791": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7370": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7298": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7298",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7298": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6022_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6008_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6027_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6027_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6022_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6008_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)6008_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6027_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6022_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7554_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7370",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7370": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7554_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7554_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7554_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7362",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7362": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "cdc9c8d26e2ac26f0153ae9f894ed05eb64b3e44c10f505c9a9066d454331f42",
          "withoutMetadata": "5476556e174f9764754dbeb3eacb2c0f26be163a8eedd94e355ceeb7f512c77e",
          "linkedWithoutMetadata": "5476556e174f9764754dbeb3eacb2c0f26be163a8eedd94e355ceeb7f512c77e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7378",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3497",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7440",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4045",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3783",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8373",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3783": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4045": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7378": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7440": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3497": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8373": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7290",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3783",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7362",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3783": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7362": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7290": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7290",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7290": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6014_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6000_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6019_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6019_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6014_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)6000_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)6000_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6019_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6014_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7546_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7362",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7362": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7546_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7546_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7546_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7361",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7361": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "52f23f6af751e4462e9f11783b7358a9b88dd6f503d667448c2abf7a10dec76e",
          "withoutMetadata": "e710cddbc9c5d55c72bdfa03e7391f72a8ca479815a1775c00edd28f980314b8",
          "linkedWithoutMetadata": "e710cddbc9c5d55c72bdfa03e7391f72a8ca479815a1775c00edd28f980314b8"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[])",
          "checkAvailability(string,bytes32[])",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "merkleRoot",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBaseCreator)7377",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IRegistrarController)3496",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPreRegistrationCreator)7439",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardVoucher)4044",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardLedger)3782",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(ReferralHub)8372",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(GiftCardLedger)3782": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4044": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7377": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7439": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3496": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8372": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7289",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3782",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7361",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3782": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7361": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7289": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7289",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7289": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6013_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5999_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6018_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6018_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6013_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5999_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5999_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6018_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6013_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7545_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7361",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7361": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7545_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7545_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7545_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7344",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7344": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "778cc98f9d939f803c077495cca475d5dba8c44913c03af27ef0f1f58d9f3a4c",
          "withoutMetadata": "7bc830244c4852dfb819049fec7ed9628873bd3586e54b6c83a2fd44f59b9e63",
          "linkedWithoutMetadata": "7bc830244c4852dfb819049fec7ed9628873bd3586e54b6c83a2fd44f59b9e63"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[],bytes32)",
          "checkAvailability(string,bytes32[],bytes32)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)7360",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:30"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:33"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)3479",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:36"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)7422",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:40"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)4027",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3765",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:44"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)8355",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:47"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:50"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:53"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3765": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4027": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7360": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7422": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3479": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8355": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7272",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3765",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7344",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3765": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7344": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7272": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7272",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7272": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5996_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5982_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6001_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6001_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5996_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5982_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5982_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6001_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5996_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7528_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7344",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7344": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7528_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7528_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7528_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "30685483eafca1e1232025cf5f20cd5fc8f0e5d857403a21517754781988baac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)7355",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7355": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:25",
        "version": {
          "withMetadata": "d329550452279b6d4205d146e4fa06667fe5c46706bc8d99c97ebf746ab5587a",
          "withoutMetadata": "e1c95de28dfa1541ae8a60b6a4f9025f1f5d2f71df1e9c969870f8945521d7db",
          "linkedWithoutMetadata": "e1c95de28dfa1541ae8a60b6a4f9025f1f5d2f71df1e9c969870f8945521d7db"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string,bytes32[],bytes32)",
          "checkAvailability(string,bytes32[],bytes32)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:61"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\admin\\TldFactory.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:27"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)7371",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:30"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:33"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)3490",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:36"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)7433",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:40"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)4038",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3776",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:44"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)8366",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:47"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1823",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:50"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:53"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3776": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)4038": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)7371": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)7433": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)3490": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1823": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)8366": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)7283",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)1428",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3776",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)7355",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3776": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)1428": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)7355": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7283": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)7283",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)7283": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)6007_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5993_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)6012_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)6012_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)6007_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5993_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5993_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)6012_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)6007_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1612",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7539_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)7355",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)7355": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1612": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7539_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7539_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7539_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "241e3588198bd6af80c5b786df4a64af5374a37319980311d593c234ccd9e21b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\security\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\security\\Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\security\\Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:20",
        "version": {
          "withMetadata": "26c5ddc301ce5c70ea2f80fe00c7b78bec200f87d8bb9e413b8ffaab5854e018",
          "withoutMetadata": "a57931f2848983428f1d0525011c931532695b14fd916005e6624bf6e9e1730e",
          "linkedWithoutMetadata": "a57931f2848983428f1d0525011c931532695b14fd916005e6624bf6e9e1730e"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "2b105bdc20d6814db31fe01710a20888d913de3671aca60505b374be005dfd7d",
          "withoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432",
          "linkedWithoutMetadata": "fe851cd5cc0c1753ff5ad91f608b27c3236e63321bf41db07de90e8475a3d432"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3982_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3982_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "bfff8005515e93211243913b1635e557b99dd2b6e39ab207b206f1de3afe2b1c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "5d795c63839000421cb6ab57736db6a94c83e3422b481381b76b35bd47f4ae5f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "8e1d694a7fbe7793750cbc8995519ff6026e1d2510d6faa9dedf5ab5e986164f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fe25d14f6b0719fe70d1352af34ff59a1724c8810a5113ff50be0fd4a071fad5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "be2af50f58be2155126fb2ec3ce37b3e026cd3fd85749d6b464ae8677e1bfed4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts\\access\\TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PlatformConfig.sol:PlatformConfig": {
        "src": "contracts\\admin\\PlatformConfig.sol:9",
        "version": {
          "withMetadata": "4a63bda13888b44249cc8c31177d0f6a46514ca3b4661c4f055ea1029f63b798",
          "withoutMetadata": "7c5050c5d3fb55b6af25b7d5928f133f65e65c6e596860c7d6eb2ac7e3790bd1",
          "linkedWithoutMetadata": "7c5050c5d3fb55b6af25b7d5928f133f65e65c6e596860c7d6eb2ac7e3790bd1"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPlatformConfig.sol:IPlatformConfig"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(uint256,uint256,address)",
          "setDefaultMinPlatformFee(uint256)",
          "setDefaultRateBps(uint256)",
          "setPlatformFeeCollector(address)",
          "setCustomizedPlatformFee(uint256,uint256,uint256,bool)",
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PlatformConfig",
            "src": "contracts\\admin\\PlatformConfig.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "customizedConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(CustomizedConfig)6151_storage)",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:12"
            },
            {
              "label": "platformFeeCollector",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:14"
            },
            {
              "label": "defaultMinPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:16"
            },
            {
              "label": "defaultRateBps",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(CustomizedConfig)6151_storage)": {
              "label": "mapping(uint256 => struct IPlatformConfig.CustomizedConfig)",
              "numberOfBytes": "32"
            },
            "t_struct(CustomizedConfig)6151_storage": {
              "label": "struct IPlatformConfig.CustomizedConfig",
              "members": [
                {
                  "label": "minPlatformFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeRateBps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "1d0fe886391606e1ede1445c0c078198849374fc37fca1f42796bf1842931b26",
          "withoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e",
          "linkedWithoutMetadata": "6b84f00adf16ace1839a2d2702ec4b922285d8c14f36106c5539c38baa12822e"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)18880",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18880": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts\\admin\\SANN.sol:11",
        "version": {
          "withMetadata": "eb6841b35fa2c6af5679089610f367a21ade5fb075f59da23b5d4db6dbbf74a0",
          "withoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167",
          "linkedWithoutMetadata": "d633f402b732b1d274f511c4cf75c1c3fc1be01f0d8912d021345a6f80808167"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)6944_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)6944_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)6944_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "bb46c6bbd12abd1255cfc5e11fe6c2ccc96a4d5f58c0d300b51b0c2402598e8a",
          "withoutMetadata": "6523f126851d669b6a2dcca4152448a2f3db1dfb406ee0a391b1d90ae4643d7c",
          "linkedWithoutMetadata": "6523f126851d669b6a2dcca4152448a2f3db1dfb406ee0a391b1d90ae4643d7c"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateTldList(string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\admin\\TldFactory.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\admin\\TldFactory.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)19902",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)10070",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)19964",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)14946",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)14684",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)21100",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)6894",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:51"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:53"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)14684": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14946": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)19902": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)19964": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)10070": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6894": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)21100": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts\\base\\Base.sol:13",
        "version": {
          "withMetadata": "fa71a69d976ca81849a0ecdde442ef4db48164172b75239617d4a26fd51336b1",
          "withoutMetadata": "d54d5629d5b81f75e0edbec96a9d44c5ffc6895f3137160701864c4acb799b2d",
          "linkedWithoutMetadata": "d54d5629d5b81f75e0edbec96a9d44c5ffc6895f3137160701864c4acb799b2d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts\\base\\Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts\\base\\Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)3982_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:17"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IMetaTldsRegistry)21827",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IMetaTldsRegistry)21827": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3982_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts\\base\\IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "04cd77949c2c1a6ccbbab95700bac21b1647d74720d8160d62367261955ee0e6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts\\controller\\RegistrarController.sol:36",
        "version": {
          "withMetadata": "0a057f4652fddf0142020cb517f96430e72e3492a90f6a4cfa2f663de1c70b92",
          "withoutMetadata": "582d96768a4acfefce980dbf37079f0db873edf5112c3be1d8e907d708672ec6",
          "linkedWithoutMetadata": "582d96768a4acfefce980dbf37079f0db873edf5112c3be1d8e907d708672ec6"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)9691_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)9713_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18880)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6228",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18880",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)21203",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16656": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6228": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16695": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18880": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16730": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16777": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16816": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16867": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)21203": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16918": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18880)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)9691_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)9713_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)9691_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)9713_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16730",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16695",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16656",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16918",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16816",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16777",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16867",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/create2factory/Create2Factory.sol:Create2Factory": {
        "src": "contracts\\create2factory\\Create2Factory.sol:15",
        "version": {
          "withMetadata": "c7cac7a06f7a3f555aeba6a0a12031465ae58eb72eadee9b68bfd2ae6f475e09",
          "withoutMetadata": "20ffaac2d8f18b1f74935618136687e5054483368903cbe486d52742c85b07bd",
          "linkedWithoutMetadata": "20ffaac2d8f18b1f74935618136687e5054483368903cbe486d52742c85b07bd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "safeCreate2(bytes32,bytes)",
          "findCreate2Address(bytes32,bytes)",
          "findCreate2AddressViaHash(bytes32,bytes32)",
          "hasBeenDeployed(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_deployed",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Create2Factory",
              "src": "contracts\\create2factory\\Create2Factory.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/IVerifiedTldHub.sol:IVerifiedTldHub": {
        "src": "contracts\\domain-governer\\IVerifiedTldHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateTldInfo(string,uint256,uint256,address,string)",
          "removeTldInfo(uint256,string)",
          "getChainTlds(uint256)",
          "updateChainInfo(uint256,string,address,address)",
          "updateDefaultRpc(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/VerifiedTldHub.sol:VerifiedTldHub": {
        "src": "contracts\\domain-governer\\VerifiedTldHub.sol:5",
        "version": {
          "withMetadata": "c875c7ab9f4e97f1f316d5c330b51b8a64e395659469d68da5a75580fe8d84e5",
          "withoutMetadata": "23a40d5a1b28e62162fda8f46ddf0cc14e017601a8f5d394a8936d97903e5d89",
          "linkedWithoutMetadata": "23a40d5a1b28e62162fda8f46ddf0cc14e017601a8f5d394a8936d97903e5d89"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updateTldInfo(string,uint256,uint256,address)",
          "removeTldInfo(uint256,string)",
          "updateChainInfo(uint256,string,address)",
          "updateDefaultRpc(uint256,string)",
          "getChainTlds(uint256)",
          "getTlds()",
          "getChainInfo(uint256)",
          "getTldInfo(string[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_struct(TldInfo)13143_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:29"
            },
            {
              "label": "chainTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:30"
            },
            {
              "label": "chainInfos",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(chainInfo)13150_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:31"
            },
            {
              "label": "tlds",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(TldInfo)13143_storage)": {
              "label": "mapping(string => struct VerifiedTldHub.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(uint256 => string[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(chainInfo)13150_storage)": {
              "label": "mapping(uint256 => struct VerifiedTldHub.chainInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)13143_storage": {
              "label": "struct VerifiedTldHub.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identifier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "registry",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(chainInfo)13150_storage": {
              "label": "struct VerifiedTldHub.chainInfo",
              "members": [
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "defaultRpc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sann",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardBase.sol:GiftCardBase": {
        "src": "contracts\\giftcard\\GiftCardBase.sol:10",
        "version": {
          "withMetadata": "247bb54cf4e12690a8a459c8c26a1407bf0a2aa8e477b521405a0e3745fb3119",
          "withoutMetadata": "65c0d9af16641860088c36590ea03fd11a02a635ce4c7bbbfbf540e7b0af3344",
          "linkedWithoutMetadata": "65c0d9af16641860088c36590ea03fd11a02a635ce4c7bbbfbf540e7b0af3344"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address)",
          "setURI(string)",
          "uri(uint256)",
          "name()",
          "symbol()",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])",
          "batchBurn(address,uint256[],uint256[])",
          "addController(address)",
          "removeController(address)",
          "pause()",
          "unpause()",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardBase",
            "src": "contracts\\giftcard\\GiftCardBase.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:30"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\security\\Pausable.sol:28"
            },
            {
              "label": "sann",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardBase",
              "src": "contracts\\giftcard\\GiftCardBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardController.sol:GiftCardController": {
        "src": "contracts\\giftcard\\GiftCardController.sol:14",
        "version": {
          "withMetadata": "5c600c043b2f4fe67b9bbf32b896b7b5c659ba4756914d12f97b64980922459e",
          "withoutMetadata": "6cfedae464a560b2c76c897eafaa61d33172101a14caab1e0ab825c8c5948849",
          "linkedWithoutMetadata": "6cfedae464a560b2c76c897eafaa61d33172101a14caab1e0ab825c8c5948849"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "price(uint256[],uint256[])",
          "batchRegister(uint256[],uint256[])",
          "batchRedeem(uint256,uint256[],uint256[])",
          "setPriceOracle(address)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardController",
            "src": "contracts\\giftcard\\GiftCardController.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "base",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(GiftCardBase)13955",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:15"
            },
            {
              "label": "voucher",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(GiftCardVoucher)14946",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:16"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14684",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:17"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:18"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(PrepaidPlatformFee)6894",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:19"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPriceOracle)18880",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:20"
            },
            {
              "label": "tldGiftCardRevenues",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:25"
            }
          ],
          "types": {
            "t_contract(GiftCardBase)13955": {
              "label": "contract GiftCardBase",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardLedger)14684": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14946": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18880": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6894": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "5e30f65a742c7a0fc31c26a6b1a1e8b605608eaa1674c405ea9efd6d74879fa7",
          "withoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266",
          "linkedWithoutMetadata": "05ed3ab06036e5693585b657bb345a9d0621f8dcbea8b92cdbaa2d6f2d617266"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "3f7a9539010d5606358aadbcf2dd5a040b49c17980526aad157763b7b1fc2347",
          "withoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716",
          "linkedWithoutMetadata": "f8b490ac270a0b5883f645d849dbe368c2395ac2ae059b695d9540801393a716"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase": {
        "src": "contracts\\giftcard\\IGiftCardBase.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addController(address)",
          "removeController(address)",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "85ad93e069189ca536f736a2d5b7bda1fc0b47e4412be88572fac4e6ca2cdc67",
          "withoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd",
          "linkedWithoutMetadata": "f47fc9f63da8cafc73770d27f19d3ec451055524fc077d13bc6f87e7a63055fd"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)18769",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14684",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)18880",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)14684": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18880": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18769": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "746b556115a96aa3d35c444dc2f7a3cd106e984bf8fb13968a63a83e7f848ac5",
          "withoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e",
          "linkedWithoutMetadata": "8a9f680162e826f3eb3e8dbd39c4f91ec49fdc7509618cc0b804ca10dc2e225e"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18769",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18769": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/Auction.sol:Auction": {
        "src": "contracts\\preregistration\\Auction.sol:17",
        "version": {
          "withMetadata": "4730e9c24c055f0f87d685a2cdc632711cd468d061862d5adafa5c523f590e91",
          "withoutMetadata": "d36730a6a6a42ae8a09a938da8065f72abbbc2270f578909b9f1c60e1d0137ef",
          "linkedWithoutMetadata": "d36730a6a6a42ae8a09a938da8065f72abbbc2270f578909b9f1c60e1d0137ef"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,address,address,address)",
          "placeBid(string)",
          "nextBidFloorPrice(uint256,string)",
          "withdraw(string)",
          "ownerWithdraw()",
          "available(string)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Auction",
            "src": "contracts\\preregistration\\Auction.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "controller",
            "src": "contracts\\preregistration\\Auction.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\Auction.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:20"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18769",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:21"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PrepaidPlatformFee)6894",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:22"
            },
            {
              "label": "ownerCanWithdraw",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:28"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18769": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6894": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "aee99cb67ae40dbb7f5bb3652e55c28c97d2f44ac87788123eedd75dd624a056",
          "withoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259",
          "linkedWithoutMetadata": "fe4160bbbfc753dd4954f84a09f3b025b93ba4b227421cc830426371552a5259"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)17493_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17479_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)17498_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)17498_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)17493_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17479_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)17479_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)17498_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)17493_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/FixedOracle.sol:FixedOracle": {
        "src": "contracts\\price-oracle\\FixedOracle.sol:4",
        "version": {
          "withMetadata": "5b0b7d26d1252a2db53ec5c49b549e9ed25555b9c77de9baf63f00c50dff95c4",
          "withoutMetadata": "d7dba42030bf386a1b706b486ee359cefd1a96856794623b3a60aa16cf6877c4",
          "linkedWithoutMetadata": "d7dba42030bf386a1b706b486ee359cefd1a96856794623b3a60aa16cf6877c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(int256,uint8)",
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FixedOracle",
            "src": "contracts\\price-oracle\\FixedOracle.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "value",
            "src": "contracts\\price-oracle\\FixedOracle.sol:6"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals_val",
            "src": "contracts\\price-oracle\\FixedOracle.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/PriceOracle.sol:PriceOracle": {
        "src": "contracts\\price-oracle\\PriceOracle.sol:12",
        "version": {
          "withMetadata": "271d96ba447d80919089ae1d787a29c245fbf1424215df5f8ea6a522f64679c8",
          "withoutMetadata": "99c68f104e76d997b05c20d715f5975f1773fb68587444923788ce1bae9da46a",
          "linkedWithoutMetadata": "99c68f104e76d997b05c20d715f5975f1773fb68587444923788ce1bae9da46a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/price-oracle/IPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address)",
          "initialize(address,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)",
          "premium(string,uint256,uint256)",
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setUsdOracle(address)",
          "decayedPremium(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceOracle",
            "src": "contracts\\price-oracle\\PriceOracle.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:15"
            },
            {
              "label": "startPremium",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:20"
            },
            {
              "label": "endValue",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:21"
            },
            {
              "label": "usdOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(AggregatorInterface)9402",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:24"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorInterface)9402": {
              "label": "contract AggregatorInterface",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))": {
              "label": "mapping(uint256 => mapping(uint8 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint64)": {
              "label": "mapping(uint8 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/BaseCreator.sol:BaseCreator": {
        "src": "contracts\\proxy\\BaseCreator.sol:10",
        "version": {
          "withMetadata": "f7934196d3d447c0fce565b32cce3f6bdf0229a39cebf38fe2433ed4fc39cfcd",
          "withoutMetadata": "78002eb63536fef92ef2c9023617fef3fa1e57d795290f0ff2693efda4f6facf",
          "linkedWithoutMetadata": "78002eb63536fef92ef2c9023617fef3fa1e57d795290f0ff2693efda4f6facf"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IBaseCreator.sol:IBaseCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCreator",
            "src": "contracts\\proxy\\BaseCreator.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "contracts\\proxy\\ERC1967Proxy.sol:6",
        "version": {
          "withMetadata": "3ea74e6065e71bd580429f556fd8378739f28cc8a616bade6c035c634e2e911b",
          "withoutMetadata": "fe2522a1a94011c432cf18ae8af6c8fd3ba2f228e8bdbfbf8a6f265a4f211eaf",
          "linkedWithoutMetadata": "fe2522a1a94011c432cf18ae8af6c8fd3ba2f228e8bdbfbf8a6f265a4f211eaf"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes32)",
          "initialize(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts\\proxy\\ERC1967Proxy.sol:17"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deployer",
            "src": "contracts\\proxy\\ERC1967Proxy.sol:8"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nameHash",
            "src": "contracts\\proxy\\ERC1967Proxy.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/PreRegistrationCreator.sol:PreRegistrationCreator": {
        "src": "contracts\\proxy\\PreRegistrationCreator.sol:15",
        "version": {
          "withMetadata": "21a642af957977b4151897d09ea7f6330b4bcb25111da36500cbe6e890356bdd",
          "withoutMetadata": "86611838e91a0fb2c0ac8ad8f204feb6868d32e3aeaf34ff9d1d6c69c1db2387",
          "linkedWithoutMetadata": "86611838e91a0fb2c0ac8ad8f204feb6868d32e3aeaf34ff9d1d6c69c1db2387"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationCreator",
            "src": "contracts\\proxy\\PreRegistrationCreator.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "99172ea027644e06851c4b637bf51ef991e97335361aa959e52f819ce85d3977",
          "withoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8",
          "linkedWithoutMetadata": "7d1717f261d44b0ff288cc47062c7c8f96a66eb8f254f202f2974a4c1f25b1c8"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)20273_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)18880",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)18880": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)20273_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)20273_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)20273_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts\\registrar\\IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseRegistrar": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:26",
        "version": {
          "withMetadata": "b9095dcdb92d1146af3133ac3be64c2fb5eec83744050c603a6ecffeba617951",
          "withoutMetadata": "5505cbeccef9156e9c520b1ab8b50a45c1a786cc55d7a95ae25e73f2874b0dcc",
          "linkedWithoutMetadata": "5505cbeccef9156e9c520b1ab8b50a45c1a786cc55d7a95ae25e73f2874b0dcc"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)",
          "setController(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReverseRegistrar",
            "src": "contracts\\registrar\\ReverseRegistrar.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sid",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MetaTldsRegistry)22252",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:27"
            },
            {
              "label": "defaultResolver",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ReverseResolver)21226",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:28"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ReverseResolver)21226": {
              "label": "contract ReverseResolver",
              "numberOfBytes": "20"
            },
            "t_contract(MetaTldsRegistry)22252": {
              "label": "contract MetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseResolver": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "setTldName(bytes32,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/MetaTldsRegistry.sol:MetaTldsRegistry": {
        "src": "contracts\\registry\\MetaTldsRegistry.sol:9",
        "version": {
          "withMetadata": "d106c86b3a60a9640f92641c0901c850e414eac84f7d91987d899ca7a2def833",
          "withoutMetadata": "9b89e68d19b9f7215073c6481a70a203efe27c0c1d4309c946ae146645c4f8c6",
          "linkedWithoutMetadata": "9b89e68d19b9f7215073c6481a70a203efe27c0c1d4309c946ae146645c4f8c6"
        },
        "inherit": [
          "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setOwner(bytes32,address)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaTldsRegistry",
            "src": "contracts\\registry\\MetaTldsRegistry.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Record)21840_storage)",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:16"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Record)21840_storage)": {
              "label": "mapping(bytes32 => struct MetaTldsRegistry.Record)",
              "numberOfBytes": "32"
            },
            "t_struct(Record)21840_storage": {
              "label": "struct MetaTldsRegistry.Record",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ttl",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/IMulticallable.sol:IMulticallable": {
        "src": "contracts\\resolvers\\IMulticallable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts\\resolvers\\ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Multicallable.sol:Multicallable": {
        "src": "contracts\\resolvers\\Multicallable.sol:7",
        "inherit": [
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\resolvers\\Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/PublicResolver.sol:PublicResolver": {
        "src": "contracts\\resolvers\\PublicResolver.sol:20",
        "version": {
          "withMetadata": "3a727ea12b273e9d9184c795001c783315b14358424937c7231bbc142148b7d0",
          "withoutMetadata": "908b8db06767bf0c406b80019256374c6961b88bb921e9b59cf475fedb52de2f",
          "linkedWithoutMetadata": "908b8db06767bf0c406b80019256374c6961b88bb921e9b59cf475fedb52de2f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver",
          "contracts/resolvers/profiles/TextResolver.sol:TextResolver",
          "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver",
          "contracts/resolvers/profiles/NameResolver.sol:NameResolver",
          "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver",
          "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver",
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/Multicallable.sol:Multicallable",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "setNewTrustedController(address)",
          "removeTrustedController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PublicResolver",
            "src": "contracts\\resolvers\\PublicResolver.sol:51"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\resolvers\\Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:8"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:10"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts\\resolvers\\profiles\\NameResolver.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23899_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:13"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts\\resolvers\\profiles\\TextResolver.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:8"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "10",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IMetaTldsRegistry)21827",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:33"
            },
            {
              "label": "trustedControllers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:34"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IMetaTldsRegistry)21827": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)23899_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23899_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)23899_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts\\resolvers\\Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts\\resolvers\\ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts\\resolvers\\SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/mocks/DummyNameWrapper.sol:DummyNameWrapper": {
        "src": "contracts\\resolvers\\mocks\\DummyNameWrapper.sol:6",
        "version": {
          "withMetadata": "600e030d16642a01555006f1feaef81e0617148a77420c3b7594c3cebe58a967",
          "withoutMetadata": "6ed523dc698a29d8f3841b7cc079265f4ecc01a05c992212c7bfd7acbd5a4d38",
          "linkedWithoutMetadata": "6ed523dc698a29d8f3841b7cc079265f4ecc01a05c992212c7bfd7acbd5a4d38"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver": {
        "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "ABI(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver": {
        "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:8",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver"
        ],
        "libraries": [],
        "methods": [
          "setAddr(bytes32,address)",
          "addr(bytes32)",
          "setAddr(bytes32,uint256,bytes)",
          "addr(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver"
        ],
        "libraries": [],
        "methods": [
          "setContenthash(bytes32,bytes)",
          "contenthash(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ExtendedResolver.sol:ExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\ExtendedResolver.sol:4",
        "version": {
          "withMetadata": "009ac00a9a72d9df3a5ab7c35b64c28bca387db8dd800f521978d3be5e2f7e04",
          "withoutMetadata": "26248d63863a3e3b5b4b0191112166f11723e990974582642eb65a4fcc36249c",
          "linkedWithoutMetadata": "26248d63863a3e3b5b4b0191112166f11723e990974582642eb65a4fcc36249c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts\\resolvers\\profiles\\IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedDNSResolver.sol:IExtendedDNSResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedDNSResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts\\resolvers\\profiles\\INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts\\resolvers\\profiles\\ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts\\resolvers\\profiles\\IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:9",
        "inherit": [
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver"
        ],
        "libraries": [],
        "methods": [
          "setInterface(bytes32,bytes4,address)",
          "interfaceImplementer(bytes32,bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/NameResolver.sol:NameResolver": {
        "src": "contracts\\resolvers\\profiles\\NameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver"
        ],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "name(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts\\resolvers\\profiles\\NameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver"
        ],
        "libraries": [],
        "methods": [
          "setPubkey(bytes32,bytes32,bytes32)",
          "pubkey(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23899_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:13"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)23899_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23899_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)23899_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TextResolver.sol:TextResolver": {
        "src": "contracts\\resolvers\\profiles\\TextResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver"
        ],
        "libraries": [],
        "methods": [
          "setText(bytes32,string,string)",
          "text(bytes32,string)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts\\resolvers\\profiles\\TextResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver"
        ],
        "libraries": [],
        "methods": [
          "setTldName(bytes32,uint256,string)",
          "tldName(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:7",
        "version": {
          "withMetadata": "c7713ff46015b26065d4e4038f67814d9b8cf78fedf2818fd3d9ddeebd567b29",
          "withoutMetadata": "1184b515c55dd0fa989236b73105f36cc96dea3e04718e4ca2260a6cae6bd35c",
          "linkedWithoutMetadata": "1184b515c55dd0fa989236b73105f36cc96dea3e04718e4ca2260a6cae6bd35c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\staking\\EthStaking.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\staking\\EthStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "bc6a277d6cab9ec08c20584b0b8b3f5ffeee5eb19b43b4ad1dc55385a8546647",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/access/mocks/DummyTldAccessableImpl.sol:DummyTldAccessableImpl": {
        "src": "test\\access\\mocks\\DummyTldAccessableImpl.sol:6",
        "version": {
          "withMetadata": "934e6414de01cb7da97ffab4dfd7996030e405bb929807b9b5d5de2eb04826d2",
          "withoutMetadata": "6029def20fdb0b0cefa3310676aa009e04fe4c59060ea26e6d12526efa234d6f",
          "linkedWithoutMetadata": "6029def20fdb0b0cefa3310676aa009e04fe4c59060ea26e6d12526efa234d6f"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "testOnlyTldOwner(uint256)",
          "testOnlyFactory()",
          "testOnlyTldController()",
          "testOnlyPlatformAdmin()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyTldAccessableImpl",
            "src": "test\\access\\mocks\\DummyTldAccessableImpl.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/admin/mocks/DummyUpgradeableSANN.sol:DummyUpgradeableSANN": {
        "src": "test\\admin\\mocks\\DummyUpgradeableSANN.sol:6",
        "version": {
          "withMetadata": "3ba271a587a92fcbe433a61f148382792325efd3dd0e0743e757458609df4e13",
          "withoutMetadata": "83a0074f5b572d7950504a6329c7ab4fc03cfa181f69b7bead58d02bdf1462c2",
          "linkedWithoutMetadata": "83a0074f5b572d7950504a6329c7ab4fc03cfa181f69b7bead58d02bdf1462c2"
        },
        "inherit": [
          "contracts/admin/SANN.sol:SANN",
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)6944_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)6944_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)6944_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/common/mocks/Dummy.sol:Dummy": {
        "src": "test\\common\\mocks\\Dummy.sol:6",
        "version": {
          "withMetadata": "69a4b91d53d557d93cec8e20d3d291954089d4494ebc01d8d72f9535e0a5311b",
          "withoutMetadata": "a82d8748236ffbe22ef2ada7be5ed4a619ec517f0355594a6dd0d3fccd0a02c7",
          "linkedWithoutMetadata": "a82d8748236ffbe22ef2ada7be5ed4a619ec517f0355594a6dd0d3fccd0a02c7"
        },
        "inherit": [],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "containsZeroWidthChar(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test\\controller\\mocks\\DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "34972ebdc8bd7ee021c84ed375b57d5ebdd62f6cda0c0d4a2ba61265efa2c7c1",
          "withoutMetadata": "45d0cda75e5a45885d636ff7bf7d89b9f9f0699439635c6d0677654c82b76dcb",
          "linkedWithoutMetadata": "45d0cda75e5a45885d636ff7bf7d89b9f9f0699439635c6d0677654c82b76dcb"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)9691_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)9713_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18880)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6228",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18880",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)21203",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16656": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6228": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16695": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18880": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16730": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16777": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16816": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16867": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)21203": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16918": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18880)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)9691_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)9713_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)9691_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)9713_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16730",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16695",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16656",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16918",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16816",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16777",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16867",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/preregistration/mocks/DummyOracle.sol:DummyOracle": {
        "src": "test\\preregistration\\mocks\\DummyOracle.sol:4",
        "version": {
          "withMetadata": "566af3ba73fbfff5a64b2e32426671896bf7d238fb012944882c20e67cae1c6f",
          "withoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a",
          "linkedWithoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(int256)",
          "set(int256)",
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyOracle",
            "src": "test\\preregistration\\mocks\\DummyOracle.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "DummyOracle",
              "src": "test\\preregistration\\mocks\\DummyOracle.sol:5"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6859",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6859": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "cfa5c0eb71482467ca9b9b784b8eb921912e091910e9c4b543e75307d9472330",
          "withoutMetadata": "89fa2c4d821013722aaf5cd077b66855b0ca0973d1f7177febf591e9ae43a0b2",
          "linkedWithoutMetadata": "89fa2c4d821013722aaf5cd077b66855b0ca0973d1f7177febf591e9ae43a0b2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateTldList(string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\admin\\TldFactory.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\admin\\TldFactory.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6875",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2994",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6937",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)3542",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3280",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)7870",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:51"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:53"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3280": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3542": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6875": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6937": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2994": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7870": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6787",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3280",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6859",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3280": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6859": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6787": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6787",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6787": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5511_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5497_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5516_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5516_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5511_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5497_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5497_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5516_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5511_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7043_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6859",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6859": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7043_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7043_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7043_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6859",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6859": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:23",
        "version": {
          "withMetadata": "7fffc57bb94f996133259a039a11294910c9193eefbd2b27f461ddcca4cd2a6f",
          "withoutMetadata": "89fa2c4d821013722aaf5cd077b66855b0ca0973d1f7177febf591e9ae43a0b2",
          "linkedWithoutMetadata": "89fa2c4d821013722aaf5cd077b66855b0ca0973d1f7177febf591e9ae43a0b2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateTldList(string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\admin\\TldFactory.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\admin\\TldFactory.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6875",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2994",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6937",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)3542",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3280",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)7870",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:48"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:50"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:51"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3280": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3542": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6875": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6937": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2994": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7870": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6787",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3280",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6859",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3280": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6859": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6787": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6787",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6787": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5511_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5497_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5516_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5516_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5511_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5497_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5497_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5516_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5511_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7043_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6859",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6859": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7043_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7043_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7043_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6859",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6859": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:23",
        "version": {
          "withMetadata": "5b091f3d2c7c15f4b8b021f5038d8eea75bceb09104b955f14010b9de3fdd914",
          "withoutMetadata": "89fa2c4d821013722aaf5cd077b66855b0ca0973d1f7177febf591e9ae43a0b2",
          "linkedWithoutMetadata": "89fa2c4d821013722aaf5cd077b66855b0ca0973d1f7177febf591e9ae43a0b2"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)",
          "updateTldList(string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\admin\\TldFactory.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\admin\\TldFactory.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6875",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2994",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6937",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)3542",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3280",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)7870",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:48"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:50"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:51"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3280": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3542": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6875": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6937": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2994": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7870": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6787",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3280",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6859",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3280": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6859": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6787": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6787",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6787": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5511_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5497_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5516_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5516_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5511_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5497_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5497_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5516_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5511_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7043_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6859",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6859": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7043_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7043_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7043_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6833",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6833": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:23",
        "version": {
          "withMetadata": "7c19827cacb1ac53f0375f5c31e92e195895275eb17fc99b0ad0618a17fe63cd",
          "withoutMetadata": "5510581f2f13c02754eff6fc78a7b4b3530a0235b92dda2f8e9e723c9b29c50c",
          "linkedWithoutMetadata": "5510581f2f13c02754eff6fc78a7b4b3530a0235b92dda2f8e9e723c9b29c50c"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\admin\\TldFactory.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\admin\\TldFactory.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6849",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2968",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6911",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)3516",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3254",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)7844",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:48"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:50"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:51"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3254": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3516": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6849": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6911": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2968": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7844": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6761",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3254",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6833",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3254": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6833": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6761": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6761",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6761": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5485_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5471_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5490_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5490_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5485_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5471_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5471_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5490_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5485_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7017_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6833",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6833": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7017_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7017_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7017_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6833",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6833": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:23",
        "version": {
          "withMetadata": "05eda8f87d79d7b23b0f9f76e6ca015c963de8ae942c4e441bb8454e52e2626f",
          "withoutMetadata": "5510581f2f13c02754eff6fc78a7b4b3530a0235b92dda2f8e9e723c9b29c50c",
          "linkedWithoutMetadata": "5510581f2f13c02754eff6fc78a7b4b3530a0235b92dda2f8e9e723c9b29c50c"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\admin\\TldFactory.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\admin\\TldFactory.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6849",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2968",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6911",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)3516",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3254",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)7844",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:48"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:50"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:51"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3254": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3516": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6849": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6911": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2968": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7844": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6761",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3254",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6833",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3254": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6833": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6761": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6761",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6761": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5485_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5471_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5490_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5490_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5485_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5471_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5471_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5490_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5485_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7017_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6833",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6833": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7017_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7017_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7017_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6833",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6833": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:23",
        "version": {
          "withMetadata": "cbe74a5277f93b0824790e12b0b6ff7f2a9bded51804653e88c963d76bd628bd",
          "withoutMetadata": "5510581f2f13c02754eff6fc78a7b4b3530a0235b92dda2f8e9e723c9b29c50c",
          "linkedWithoutMetadata": "5510581f2f13c02754eff6fc78a7b4b3530a0235b92dda2f8e9e723c9b29c50c"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)",
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()",
          "setStakeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\admin\\TldFactory.sol:52"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\admin\\TldFactory.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)6849",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)2968",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)6911",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)3516",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)3254",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)7844",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:48"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:50"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:51"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:52"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3254": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3516": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6849": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6911": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2968": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7844": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6761",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3254",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6833",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3254": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6833": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6761": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6761",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6761": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5485_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5471_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5490_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5490_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5485_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5471_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5471_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5490_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5485_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7017_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6833",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6833": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)7017_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)7017_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)7017_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "1ed85d9ddc390d3c55dee77d24d4cdbe9a94ea076d1ab18ddc389d17791e2f3a",
          "withoutMetadata": "9462375ddcc175709eeceefa809cf0f4756759c46caf457027ca85bdda33e936",
          "linkedWithoutMetadata": "9462375ddcc175709eeceefa809cf0f4756759c46caf457027ca85bdda33e936"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:7",
        "version": {
          "withMetadata": "6dbb24665e7ada0224d6a042fb6890565257cfa8addcb5f02f72fd4e8d34fd4b",
          "withoutMetadata": "8cede37e3bee7a310a9478bfb08f54c3dcd15c8543298aa5b93036e8bf7ba78a",
          "linkedWithoutMetadata": "8cede37e3bee7a310a9478bfb08f54c3dcd15c8543298aa5b93036e8bf7ba78a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\staking\\EthStaking.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\staking\\EthStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "0795942a17d824a7577595e9204fed31213bc8e3998bb7e5c9149911fd0bcba3",
          "withoutMetadata": "9462375ddcc175709eeceefa809cf0f4756759c46caf457027ca85bdda33e936",
          "linkedWithoutMetadata": "9462375ddcc175709eeceefa809cf0f4756759c46caf457027ca85bdda33e936"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:7",
        "version": {
          "withMetadata": "f9d5ac7abffbcf0680c58bb254e79da15e7d5f50d385047709b780abd3612280",
          "withoutMetadata": "8cede37e3bee7a310a9478bfb08f54c3dcd15c8543298aa5b93036e8bf7ba78a",
          "linkedWithoutMetadata": "8cede37e3bee7a310a9478bfb08f54c3dcd15c8543298aa5b93036e8bf7ba78a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\staking\\EthStaking.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\staking\\EthStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "4a540f53c8050809194024515b3ca1b58126abe43f2bb43717748fc8d05a84cb",
          "withoutMetadata": "f2e6060cff1ea1f170936ab0010fadf77741ff1e4be8e739a0786b7f84f9d40f",
          "linkedWithoutMetadata": "f2e6060cff1ea1f170936ab0010fadf77741ff1e4be8e739a0786b7f84f9d40f"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:7",
        "version": {
          "withMetadata": "1dc13347ac6801b48d4300b26a332f5d31acd69c5711774089997227f82dbc80",
          "withoutMetadata": "bc6f44f8f14be879790dc7bf0724a8634d89fd492a5812dd3af86994c2cee283",
          "linkedWithoutMetadata": "bc6f44f8f14be879790dc7bf0724a8634d89fd492a5812dd3af86994c2cee283"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\staking\\EthStaking.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\staking\\EthStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "494054b93f55bf8df74ef7ee4724bd25473ed7cbb0e203889f5acfaa952e536f",
          "withoutMetadata": "f2e6060cff1ea1f170936ab0010fadf77741ff1e4be8e739a0786b7f84f9d40f",
          "linkedWithoutMetadata": "f2e6060cff1ea1f170936ab0010fadf77741ff1e4be8e739a0786b7f84f9d40f"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:7",
        "version": {
          "withMetadata": "3cd7dec8a73e6e9aed6b4ce6b84755ba035c334aa46fa70a34e50b045ecbe6c6",
          "withoutMetadata": "bc6f44f8f14be879790dc7bf0724a8634d89fd492a5812dd3af86994c2cee283",
          "linkedWithoutMetadata": "bc6f44f8f14be879790dc7bf0724a8634d89fd492a5812dd3af86994c2cee283"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\staking\\EthStaking.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\staking\\EthStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "9873246e3b2027b7123da55e9afc73c6f5a977edfc195e47b90231a8551475b8",
          "withoutMetadata": "52ec46ab64779a7852bac40b4a6c1a9cd47900cd1c055c838d9703b0f708f4de",
          "linkedWithoutMetadata": "52ec46ab64779a7852bac40b4a6c1a9cd47900cd1c055c838d9703b0f708f4de"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:7",
        "version": {
          "withMetadata": "df4bbe95f8c6dd3f8ce78989193636690841c50ca99f678a35e19519a9ab5975",
          "withoutMetadata": "3470ebf850553e154aa257ed55f9a9f50f1f4b5e932c8705b6320872b9c3b932",
          "linkedWithoutMetadata": "3470ebf850553e154aa257ed55f9a9f50f1f4b5e932c8705b6320872b9c3b932"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\staking\\EthStaking.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\staking\\EthStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "f276ff3cb685ae5765be816ea7dc2edef2cebd783f2366da8de8bb2bad8d6c0f",
          "withoutMetadata": "96faa717605d7738a7b2cb9e53ce9624507e0697a9c630130868123779df9f34",
          "linkedWithoutMetadata": "96faa717605d7738a7b2cb9e53ce9624507e0697a9c630130868123779df9f34"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:7",
        "version": {
          "withMetadata": "2303a63fb23e2e866eaa73efcdef97a05514c66f87a72e77cd3a69034d3e3714",
          "withoutMetadata": "770bf7419fc872c3d26f5659a9c6d2db2ed4c0d9f3079f505b10bc506e37f659",
          "linkedWithoutMetadata": "770bf7419fc872c3d26f5659a9c6d2db2ed4c0d9f3079f505b10bc506e37f659"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\staking\\EthStaking.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\staking\\EthStaking.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:10"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "13bdb862e178f26c21f0619ad568bfd1094a057229af3bbe7c524526d0d9d0c3",
          "withoutMetadata": "d1dd6156b67156f9913e047e2669607305d111812f3b41e238ad01e5c6310292",
          "linkedWithoutMetadata": "d1dd6156b67156f9913e047e2669607305d111812f3b41e238ad01e5c6310292"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:11"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:6",
        "version": {
          "withMetadata": "813f10063840490ec0e87c291b714ffa8d12a23476038a11bce66ebd96925c19",
          "withoutMetadata": "a23262c34c359bde5128cd9bbed7fbcedf8e887155b222f1cae7168af8eeb459",
          "linkedWithoutMetadata": "a23262c34c359bde5128cd9bbed7fbcedf8e887155b222f1cae7168af8eeb459"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\staking\\EthStaking.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\staking\\EthStaking.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "c329e02a1a559573c99694b1fecbb1d1ca0f1f0093d902586c025d423ca3cf18",
          "withoutMetadata": "4c8eaf469682fddd46f3386af4b8bdac8390603578a94586c20721199ddcbc41",
          "linkedWithoutMetadata": "4c8eaf469682fddd46f3386af4b8bdac8390603578a94586c20721199ddcbc41"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:11"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:6",
        "version": {
          "withMetadata": "0cd5ba4ae03dfa755d6e21a92724f0904c00b5e90d2b18ee6106152374abdaa5",
          "withoutMetadata": "9ba28edeebfce5c8df23451e00516a9e1a0cf61219c796e5b6becae741e01b57",
          "linkedWithoutMetadata": "9ba28edeebfce5c8df23451e00516a9e1a0cf61219c796e5b6becae741e01b57"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "updateStakeLimit(uint256)",
          "stake(uint256,string)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "MINIMUM_STAKE",
            "src": "contracts\\staking\\EthStaking.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tldList",
            "src": "contracts\\staking\\EthStaking.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:7"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:8"
            },
            {
              "label": "MINIMUM_STAKE",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:9"
            },
            {
              "label": "tldList",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "a9c028e2f95e50febfa14a3219c0c60467cd015dd007afdbb724d6872f1f4848",
          "withoutMetadata": "b88916256428c637cc7be2b0e76f224b1a582307ebdf7dbcd65e0eb9f76b778d",
          "linkedWithoutMetadata": "b88916256428c637cc7be2b0e76f224b1a582307ebdf7dbcd65e0eb9f76b778d"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:6"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:4",
        "version": {
          "withMetadata": "60bd5efb91b20fe101090d1ff77357134875681d9b27a12f2eb7bc07d386d13d",
          "withoutMetadata": "cf9118ceee98da9f98e2663e081deaadd6489eec022c71d391a1c63a4f171a60",
          "linkedWithoutMetadata": "cf9118ceee98da9f98e2663e081deaadd6489eec022c71d391a1c63a4f171a60"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "4d7df800b9562c2d48c64e19ded7b98fbbd929823b34c9d6b858f8280ccf3b3b",
          "withoutMetadata": "e7611d588a01ff6e01fd9e576227533f619e68c475fc9e25972143e3ff6819cf",
          "linkedWithoutMetadata": "e7611d588a01ff6e01fd9e576227533f619e68c475fc9e25972143e3ff6819cf"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:6"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:4",
        "version": {
          "withMetadata": "907f871b9bb43c95b6c2d8a4358a411201be70421886e02953b764e595165d80",
          "withoutMetadata": "23df47a6ea69f3c7d74af8a9cb696ce2b9dbfa20a3fb4dc1b2903b1e57b6ccb5",
          "linkedWithoutMetadata": "23df47a6ea69f3c7d74af8a9cb696ce2b9dbfa20a3fb4dc1b2903b1e57b6ccb5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "46ecde567a77774dedb84c2e1782f51bc6b9faeda29872db8dbcb916e0951391",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)2193_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2193_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2193_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2193_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "93a9141b4158fc36304ad0203ee7b34c510740fa41a9743e35c256d40acec2f8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "a7196d32ccd2519f61d81ca0747ad603af0457335916696faf327fb6e523552e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "55430d9bf5f5907e158d5fbb9216af731993316bae8146c66d1eb7eb9f15fa30",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "c2ba5d9057208072779405184bb59f4b625f20e22eaad9f1a5e5d21f0ff2cb46",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "88a9eebac5f7647f69e20485a9f84f973d9b3673fcc144961116f89077a6a69a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4316",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)4316": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts\\admin\\SANN.sol:11",
        "version": {
          "withMetadata": "d06619f8c52159ff0d8d219e40d19ea10b7c5ca88f1ac24717d23a326f0e6992",
          "withoutMetadata": "a17961ea798f70ce2b111353c9b6f5a04955984cc946e7acefd8c0e22bbb6671",
          "linkedWithoutMetadata": "a17961ea798f70ce2b111353c9b6f5a04955984cc946e7acefd8c0e22bbb6671"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)4366_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)4366_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)4366_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts\\base\\Base.sol:13",
        "version": {
          "withMetadata": "7fbc55583a44514f979de95d238222716f0fe5351cc2cd0b5fd1c5659adc13b1",
          "withoutMetadata": "84ce41f3a12289e127a8328e409d3fd60ca7a9a14a9d73d5e6a60d32bc836db0",
          "linkedWithoutMetadata": "84ce41f3a12289e127a8328e409d3fd60ca7a9a14a9d73d5e6a60d32bc836db0"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts\\base\\Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts\\base\\Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)2193_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2193_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)4316",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:17"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IMetaTldsRegistry)6607",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISANN)4316": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IMetaTldsRegistry)6607": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2193_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2193_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts\\base\\IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/BaseCreator.sol:BaseCreator": {
        "src": "contracts\\proxy\\BaseCreator.sol:10",
        "version": {
          "withMetadata": "9f413d6c4eb2935240072f501e04270804abd95d47736f5653d70b3bc072972d",
          "withoutMetadata": "2f36fb5a5c89d513a190e24839d73fa9252e9d19477d1894c4c7bdf15c5b6bc3",
          "linkedWithoutMetadata": "2f36fb5a5c89d513a190e24839d73fa9252e9d19477d1894c4c7bdf15c5b6bc3"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IBaseCreator.sol:IBaseCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCreator",
            "src": "contracts\\proxy\\BaseCreator.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4316",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)4316": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts\\registrar\\IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseRegistrar": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:26",
        "version": {
          "withMetadata": "9454c9723934d2c2cdee67d7be7f59f5c8cc6e9eab41a7e3e879898530a13c00",
          "withoutMetadata": "dfd9da035bc4437a443914539daee606781266cde8fdc3e6593e0b0a26f6ef1d",
          "linkedWithoutMetadata": "dfd9da035bc4437a443914539daee606781266cde8fdc3e6593e0b0a26f6ef1d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)",
          "setController(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReverseRegistrar",
            "src": "contracts\\registrar\\ReverseRegistrar.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sid",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MetaTldsRegistry)7032",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:27"
            },
            {
              "label": "defaultResolver",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ReverseResolver)6006",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:28"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ReverseResolver)6006": {
              "label": "contract ReverseResolver",
              "numberOfBytes": "20"
            },
            "t_contract(MetaTldsRegistry)7032": {
              "label": "contract MetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseResolver": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "setTldName(bytes32,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/MetaTldsRegistry.sol:MetaTldsRegistry": {
        "src": "contracts\\registry\\MetaTldsRegistry.sol:9",
        "version": {
          "withMetadata": "459b42ed3428e0a3fa88570097f377da1b579d1a623bb1e3e3a121d507c08bb3",
          "withoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e",
          "linkedWithoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e"
        },
        "inherit": [
          "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setOwner(bytes32,address)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaTldsRegistry",
            "src": "contracts\\registry\\MetaTldsRegistry.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Record)6620_storage)",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:16"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Record)6620_storage)": {
              "label": "mapping(bytes32 => struct MetaTldsRegistry.Record)",
              "numberOfBytes": "32"
            },
            "t_struct(Record)6620_storage": {
              "label": "struct MetaTldsRegistry.Record",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ttl",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "a9c028e2f95e50febfa14a3219c0c60467cd015dd007afdbb724d6872f1f4848",
          "withoutMetadata": "b88916256428c637cc7be2b0e76f224b1a582307ebdf7dbcd65e0eb9f76b778d",
          "linkedWithoutMetadata": "b88916256428c637cc7be2b0e76f224b1a582307ebdf7dbcd65e0eb9f76b778d"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:6"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBaseCreator)6643",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IRegistrarController)2762",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IPreRegistrationCreator)6705",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardVoucher)3310",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(ReferralHub)7638",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(PrepaidPlatformFee)1295",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)3310": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)6643": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)6705": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)2762": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)1295": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)7638": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)900",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)3048",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)3048": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)900": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)6555",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)6555": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)5279_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)5284_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)5284_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)5279_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)5265_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)5265_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)5284_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)5279_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)1084",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)6627",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)6627": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)1084": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)6811_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)6811_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)6811_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:4",
        "version": {
          "withMetadata": "60bd5efb91b20fe101090d1ff77357134875681d9b27a12f2eb7bc07d386d13d",
          "withoutMetadata": "cf9118ceee98da9f98e2663e081deaadd6489eec022c71d391a1c63a4f171a60",
          "linkedWithoutMetadata": "cf9118ceee98da9f98e2663e081deaadd6489eec022c71d391a1c63a4f171a60"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "46ecde567a77774dedb84c2e1782f51bc6b9faeda29872db8dbcb916e0951391",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)2421_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2421_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "93a9141b4158fc36304ad0203ee7b34c510740fa41a9743e35c256d40acec2f8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "a7196d32ccd2519f61d81ca0747ad603af0457335916696faf327fb6e523552e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "55430d9bf5f5907e158d5fbb9216af731993316bae8146c66d1eb7eb9f15fa30",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "c2ba5d9057208072779405184bb59f4b625f20e22eaad9f1a5e5d21f0ff2cb46",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "88a9eebac5f7647f69e20485a9f84f973d9b3673fcc144961116f89077a6a69a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts\\access\\TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)4633",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)4633": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)4633",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)4633": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)4633",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)14657",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)4633": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)14657": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts\\admin\\SANN.sol:11",
        "version": {
          "withMetadata": "d06619f8c52159ff0d8d219e40d19ea10b7c5ca88f1ac24717d23a326f0e6992",
          "withoutMetadata": "a17961ea798f70ce2b111353c9b6f5a04955984cc946e7acefd8c0e22bbb6671",
          "linkedWithoutMetadata": "a17961ea798f70ce2b111353c9b6f5a04955984cc946e7acefd8c0e22bbb6671"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)5078_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)5078_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)5078_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:24",
        "version": {
          "withMetadata": "7fd5f40f1813716bf8cb95b7716ecef8d690bc181c91a90eec6017c9fdf4646b",
          "withoutMetadata": "b88916256428c637cc7be2b0e76f224b1a582307ebdf7dbcd65e0eb9f76b778d",
          "linkedWithoutMetadata": "b88916256428c637cc7be2b0e76f224b1a582307ebdf7dbcd65e0eb9f76b778d"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:6"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:26"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBaseCreator)14744",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:29"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:32"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IRegistrarController)7972",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:35"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(IPreRegistrationCreator)14806",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:39"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(GiftCardVoucher)11340",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(GiftCardLedger)11078",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:43"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(ReferralHub)15739",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:46"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(PrepaidPlatformFee)5028",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)11078": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)11340": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)14744": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)14806": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)7972": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)5028": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)15739": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts\\base\\Base.sol:13",
        "version": {
          "withMetadata": "7fbc55583a44514f979de95d238222716f0fe5351cc2cd0b5fd1c5659adc13b1",
          "withoutMetadata": "84ce41f3a12289e127a8328e409d3fd60ca7a9a14a9d73d5e6a60d32bc836db0",
          "linkedWithoutMetadata": "84ce41f3a12289e127a8328e409d3fd60ca7a9a14a9d73d5e6a60d32bc836db0"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts\\base\\Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts\\base\\Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)2421_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:17"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IMetaTldsRegistry)15979",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IMetaTldsRegistry)15979": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)2421_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)2421_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts\\base\\IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts\\controller\\RegistrarController.sol:36",
        "version": {
          "withMetadata": "278610e5a57088e08de0a8d387bd7113f30280e20e898369ccd028b73cfb217f",
          "withoutMetadata": "32dd5233793db947c27b2c9ebe36b0371b28626bb90847afc692d177addf698b",
          "linkedWithoutMetadata": "32dd5233793db947c27b2c9ebe36b0371b28626bb90847afc692d177addf698b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)4633",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)7593_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)7615_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)14657)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)4667",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)14657",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)15842",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)4633": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)13002": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)4667": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)13041": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)14657": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)13076": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)13123": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)13162": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)13213": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)15842": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)13264": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)14657)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)7593_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)7615_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)7593_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)7615_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)13076",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)13041",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)13002",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)13264",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)13162",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)13123",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)13213",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)14585",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)4633",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)11078",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)14657",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)11078": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)4633": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)14657": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)14585": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)14585",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)14585": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)13309_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)13295_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)13314_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)13314_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)13309_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)13295_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)13295_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)13314_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)13309_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/BaseCreator.sol:BaseCreator": {
        "src": "contracts\\proxy\\BaseCreator.sol:10",
        "version": {
          "withMetadata": "1900cc98419f4258d48dd5c2d39f48ee7b85f53006162c680bfe97dc5817ad06",
          "withoutMetadata": "2f36fb5a5c89d513a190e24839d73fa9252e9d19477d1894c4c7bdf15c5b6bc3",
          "linkedWithoutMetadata": "2f36fb5a5c89d513a190e24839d73fa9252e9d19477d1894c4c7bdf15c5b6bc3"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IBaseCreator.sol:IBaseCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCreator",
            "src": "contracts\\proxy\\BaseCreator.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)14912_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)14657",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)14657": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)14912_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)14912_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)14912_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts\\registrar\\IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/MetaTldsRegistry.sol:MetaTldsRegistry": {
        "src": "contracts\\registry\\MetaTldsRegistry.sol:9",
        "version": {
          "withMetadata": "2dfeae97e812e221a5bd6e9a9c9766e593cf658b2853bc7a8a105cd529dd2a73",
          "withoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e",
          "linkedWithoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e"
        },
        "inherit": [
          "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setOwner(bytes32,address)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaTldsRegistry",
            "src": "contracts\\registry\\MetaTldsRegistry.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Record)15992_storage)",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:16"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Record)15992_storage)": {
              "label": "mapping(bytes32 => struct MetaTldsRegistry.Record)",
              "numberOfBytes": "32"
            },
            "t_struct(Record)15992_storage": {
              "label": "struct MetaTldsRegistry.Record",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ttl",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts\\resolvers\\ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts\\resolvers\\Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts\\resolvers\\ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts\\resolvers\\SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts\\resolvers\\profiles\\IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts\\resolvers\\profiles\\INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts\\resolvers\\profiles\\ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts\\resolvers\\profiles\\IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:4",
        "version": {
          "withMetadata": "60bd5efb91b20fe101090d1ff77357134875681d9b27a12f2eb7bc07d386d13d",
          "withoutMetadata": "cf9118ceee98da9f98e2663e081deaadd6489eec022c71d391a1c63a4f171a60",
          "linkedWithoutMetadata": "cf9118ceee98da9f98e2663e081deaadd6489eec022c71d391a1c63a4f171a60"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake(uint256)",
          "getStakeDetails()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "identifiers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/admin/mocks/DummyUpgradeableSANN.sol:DummyUpgradeableSANN": {
        "src": "test\\admin\\mocks\\DummyUpgradeableSANN.sol:6",
        "version": {
          "withMetadata": "92bd1fc3a3682ed5c41580bbb381d148e2b99498c6dd2b2cd9957b0ad8451863",
          "withoutMetadata": "c074c452246daff649100edfaa44abec0bdd70c4af9fa4effc57fd1b1eda8269",
          "linkedWithoutMetadata": "c074c452246daff649100edfaa44abec0bdd70c4af9fa4effc57fd1b1eda8269"
        },
        "inherit": [
          "contracts/admin/SANN.sol:SANN",
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)5078_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)5078_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)5078_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test\\controller\\mocks\\DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "ec2031aca4409bcdb40bcac1a62565b4196601d4ce8510b8961149b253fdd4d4",
          "withoutMetadata": "ef83e50134b194d5f689c0058d64f9b9369f0434f5e17308bbfb7595101904d6",
          "linkedWithoutMetadata": "ef83e50134b194d5f689c0058d64f9b9369f0434f5e17308bbfb7595101904d6"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)4817",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)4633",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)7593_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)7615_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)14657)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)4667",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)14657",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)15842",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)4633": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)13002": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)4667": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)13041": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)14657": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)13076": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)13123": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)13162": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)13213": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)15842": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)13264": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)4817": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)14657)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)7593_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)7615_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)7593_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)7615_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)13076",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)13041",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)13002",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)13264",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)13162",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)13123",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)13213",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin\\contracts\\security\\Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin\\contracts\\security\\Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\security\\Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:20",
        "version": {
          "withMetadata": "453e2041f27f52c071d719ad3e61c61bc7d2eefc2e278bf1845027e77a0b592d",
          "withoutMetadata": "97aff7fbe4448695afac660308617788094f7a639225360f65206e4321ab6d51",
          "linkedWithoutMetadata": "97aff7fbe4448695afac660308617788094f7a639225360f65206e4321ab6d51"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "46ecde567a77774dedb84c2e1782f51bc6b9faeda29872db8dbcb916e0951391",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3982_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3982_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "93a9141b4158fc36304ad0203ee7b34c510740fa41a9743e35c256d40acec2f8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "a7196d32ccd2519f61d81ca0747ad603af0457335916696faf327fb6e523552e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "55430d9bf5f5907e158d5fbb9216af731993316bae8146c66d1eb7eb9f15fa30",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "c2ba5d9057208072779405184bb59f4b625f20e22eaad9f1a5e5d21f0ff2cb46",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "88a9eebac5f7647f69e20485a9f84f973d9b3673fcc144961116f89077a6a69a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts\\access\\TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts\\access\\TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts\\access\\TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts\\access\\TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts\\access\\TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts\\admin\\IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts\\admin\\IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts\\admin\\ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts\\admin\\ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PlatformConfig.sol:PlatformConfig": {
        "src": "contracts\\admin\\PlatformConfig.sol:9",
        "version": {
          "withMetadata": "fc708c2f3ab9dcddbc83ed4335cfbd4c4c63facd95b7db0bcc07adc9b92d6419",
          "withoutMetadata": "87a5f930fb25f12e8c5cf35b769406c1cc4e17d6f2db906e2a7ecbd6127178f1",
          "linkedWithoutMetadata": "87a5f930fb25f12e8c5cf35b769406c1cc4e17d6f2db906e2a7ecbd6127178f1"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPlatformConfig.sol:IPlatformConfig"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(uint256,uint256,address)",
          "setDefaultMinPlatformFee(uint256)",
          "setDefaultRateBps(uint256)",
          "setPlatformFeeCollector(address)",
          "setCustomizedPlatformFee(uint256,uint256,uint256,bool)",
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PlatformConfig",
            "src": "contracts\\admin\\PlatformConfig.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "customizedConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(CustomizedConfig)6151_storage)",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:12"
            },
            {
              "label": "platformFeeCollector",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:14"
            },
            {
              "label": "defaultMinPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:16"
            },
            {
              "label": "defaultRateBps",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts\\admin\\PlatformConfig.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(CustomizedConfig)6151_storage)": {
              "label": "mapping(uint256 => struct IPlatformConfig.CustomizedConfig)",
              "numberOfBytes": "32"
            },
            "t_struct(CustomizedConfig)6151_storage": {
              "label": "struct IPlatformConfig.CustomizedConfig",
              "members": [
                {
                  "label": "minPlatformFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeRateBps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts\\admin\\PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "55cd978d1b9bf6a4ffc91fe4cfa2496a673b0fceaa4936fc375fa7930d5f23c9",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts\\admin\\PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessable",
              "src": "contracts\\access\\TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)18648",
              "contract": "PrepaidPlatformFee",
              "src": "contracts\\admin\\PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18648": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts\\admin\\SANN.sol:13",
        "version": {
          "withMetadata": "2b81274b1497a5085121c1ea55a9fd0fdbe1027ef5a2fc1871385d4952bd6da8",
          "withoutMetadata": "f61dc06f57a0e9c5d7ae6138e6410d15e923b484ad7534b374a2f8036afe06d5",
          "linkedWithoutMetadata": "f61dc06f57a0e9c5d7ae6138e6410d15e923b484ad7534b374a2f8036afe06d5"
        },
        "inherit": [
          "contracts/staking/EthStaking.sol:EthStaking",
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:16"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:19"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:22"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:25"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:28"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:31"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:34"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)6948_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)6948_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)6948_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts\\admin\\TldFactory.sol:23",
        "version": {
          "withMetadata": "331649ad73287f73320ded46fd33366506a20fd97fc43330dac565b4b8f43880",
          "withoutMetadata": "3596821ad4561dca375d33f56a57baf9d38d080383b45e6ff1bd2e0778de413e",
          "linkedWithoutMetadata": "3596821ad4561dca375d33f56a57baf9d38d080383b45e6ff1bd2e0778de413e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts\\admin\\TldFactory.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)19670",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)9838",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)19732",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)14714",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)14452",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)20868",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)6894",
              "contract": "TldFactory",
              "src": "contracts\\admin\\TldFactory.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)14452": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14714": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)19670": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)19732": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)9838": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6894": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)20868": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts\\base\\Base.sol:13",
        "version": {
          "withMetadata": "7fbc55583a44514f979de95d238222716f0fe5351cc2cd0b5fd1c5659adc13b1",
          "withoutMetadata": "84ce41f3a12289e127a8328e409d3fd60ca7a9a14a9d73d5e6a60d32bc836db0",
          "linkedWithoutMetadata": "84ce41f3a12289e127a8328e409d3fd60ca7a9a14a9d73d5e6a60d32bc836db0"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts\\base\\Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts\\base\\Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)3982_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin\\contracts\\token\\common\\ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:17"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IMetaTldsRegistry)21595",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts\\base\\Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IMetaTldsRegistry)21595": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3982_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts\\base\\IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts\\common\\AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts\\common\\StringUtils.sol:4",
        "version": {
          "withMetadata": "b7a5513abcb0a536bfc847a1a295bad1cd52c57c53b58f3851d3fd6c546bbed5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts\\controller\\IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts\\controller\\RegistrarController.sol:36",
        "version": {
          "withMetadata": "0da65883087747927a4f2ea6c19e16bf6a163c4986aecc9358b8446f1bcbf340",
          "withoutMetadata": "32dd5233793db947c27b2c9ebe36b0371b28626bb90847afc692d177addf698b",
          "linkedWithoutMetadata": "32dd5233793db947c27b2c9ebe36b0371b28626bb90847afc692d177addf698b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)9459_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)9481_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18648)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6228",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18648",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)20971",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16424": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6228": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16463": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18648": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16498": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16545": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16584": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16635": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)20971": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16686": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18648)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)9459_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)9481_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)9459_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)9481_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16498",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16463",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16424",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16686",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16584",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16545",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16635",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/create2factory/Create2Factory.sol:Create2Factory": {
        "src": "contracts\\create2factory\\Create2Factory.sol:15",
        "version": {
          "withMetadata": "55957c7c4c439f5a235746089c6b83fa5c09a2de3f3eb77d7269b333c3908de4",
          "withoutMetadata": "59ffeed0577b600c428a56be18cec4c4fa97479570d39cf3bcd04435fdfb6618",
          "linkedWithoutMetadata": "59ffeed0577b600c428a56be18cec4c4fa97479570d39cf3bcd04435fdfb6618"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "safeCreate2(bytes32,bytes)",
          "findCreate2Address(bytes32,bytes)",
          "findCreate2AddressViaHash(bytes32,bytes32)",
          "hasBeenDeployed(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_deployed",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Create2Factory",
              "src": "contracts\\create2factory\\Create2Factory.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/IVerifiedTldHub.sol:IVerifiedTldHub": {
        "src": "contracts\\domain-governer\\IVerifiedTldHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateTldInfo(string,uint256,uint256,address,string)",
          "removeTldInfo(uint256,string)",
          "getChainTlds(uint256)",
          "updateChainInfo(uint256,string,address,address)",
          "updateDefaultRpc(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/VerifiedTldHub.sol:VerifiedTldHub": {
        "src": "contracts\\domain-governer\\VerifiedTldHub.sol:5",
        "version": {
          "withMetadata": "a13fb7f5de93861e977282d17590471da0247353f57d3a5275569b2ca47a514a",
          "withoutMetadata": "d21ce1fd5f1794b652e441c5dc281e5687ad97cc4a0008a437c8718e7be45456",
          "linkedWithoutMetadata": "d21ce1fd5f1794b652e441c5dc281e5687ad97cc4a0008a437c8718e7be45456"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updateTldInfo(string,uint256,uint256,address)",
          "removeTldInfo(uint256,string)",
          "updateChainInfo(uint256,string,address)",
          "updateDefaultRpc(uint256,string)",
          "getChainTlds(uint256)",
          "getTlds()",
          "getChainInfo(uint256)",
          "getTldInfo(string[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_struct(TldInfo)12911_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:29"
            },
            {
              "label": "chainTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:30"
            },
            {
              "label": "chainInfos",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(chainInfo)12918_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:31"
            },
            {
              "label": "tlds",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "VerifiedTldHub",
              "src": "contracts\\domain-governer\\VerifiedTldHub.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(TldInfo)12911_storage)": {
              "label": "mapping(string => struct VerifiedTldHub.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(uint256 => string[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(chainInfo)12918_storage)": {
              "label": "mapping(uint256 => struct VerifiedTldHub.chainInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)12911_storage": {
              "label": "struct VerifiedTldHub.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identifier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "registry",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(chainInfo)12918_storage": {
              "label": "struct VerifiedTldHub.chainInfo",
              "members": [
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "defaultRpc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sann",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardBase.sol:GiftCardBase": {
        "src": "contracts\\giftcard\\GiftCardBase.sol:10",
        "version": {
          "withMetadata": "45b8908981dc734b9391e42cf01cc2bc056eb8044e7b95f9b48f24cf1c0ac91c",
          "withoutMetadata": "56b0277707c78fdeab51ea02908256ac16314337dac504513810c5a1cdbe6ed3",
          "linkedWithoutMetadata": "56b0277707c78fdeab51ea02908256ac16314337dac504513810c5a1cdbe6ed3"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address)",
          "setURI(string)",
          "uri(uint256)",
          "name()",
          "symbol()",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])",
          "batchBurn(address,uint256[],uint256[])",
          "addController(address)",
          "removeController(address)",
          "pause()",
          "unpause()",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardBase",
            "src": "contracts\\giftcard\\GiftCardBase.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin\\contracts\\token\\ERC1155\\ERC1155.sol:30"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin\\contracts\\security\\Pausable.sol:28"
            },
            {
              "label": "sann",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardBase",
              "src": "contracts\\giftcard\\GiftCardBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardController.sol:GiftCardController": {
        "src": "contracts\\giftcard\\GiftCardController.sol:14",
        "version": {
          "withMetadata": "0d435cf0efe618b4f3a23c2f92d9b7c273e4997134d4c69a2e8241fc513263b0",
          "withoutMetadata": "9aeea9e0d55f318f24ce24301b43384d82aedaa067a2193360b008347bce6952",
          "linkedWithoutMetadata": "9aeea9e0d55f318f24ce24301b43384d82aedaa067a2193360b008347bce6952"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "price(uint256[],uint256[])",
          "batchRegister(uint256[],uint256[])",
          "batchRedeem(uint256,uint256[],uint256[])",
          "setPriceOracle(address)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardController",
            "src": "contracts\\giftcard\\GiftCardController.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "base",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(GiftCardBase)13723",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:15"
            },
            {
              "label": "voucher",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(GiftCardVoucher)14714",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:16"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14452",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:17"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:18"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(PrepaidPlatformFee)6894",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:19"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPriceOracle)18648",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:20"
            },
            {
              "label": "tldGiftCardRevenues",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardController",
              "src": "contracts\\giftcard\\GiftCardController.sol:25"
            }
          ],
          "types": {
            "t_contract(GiftCardBase)13723": {
              "label": "contract GiftCardBase",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardLedger)14452": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14714": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18648": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6894": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts\\giftcard\\GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "a82063b9056174e4a459f4fa67f5cd5fb50ebec7c12d072869f05ae2ebac3ffb",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts\\giftcard\\GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts\\giftcard\\GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts\\giftcard\\GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "5ded909a556a6ceb06d533cae02c4a63d7a22acd51fa3177b6616a930743b89a",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts\\giftcard\\GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts\\giftcard\\GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase": {
        "src": "contracts\\giftcard\\IGiftCardBase.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addController(address)",
          "removeController(address)",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts\\hook\\DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "68bb006300f2810de6b9cade4f63563e95c8c9ddc90b352713300b387662b2fe",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)18537",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14452",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)18648",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts\\hook\\DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)14452": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18648": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18537": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts\\hook\\DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "5ba467d4e7b69d553544ea2669c44074a716094c7e558efd64408bc266395fae",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\hook\\DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18537",
              "contract": "DefaultQualificationHook",
              "src": "contracts\\hook\\DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18537": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts\\hook\\IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts\\hook\\IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts\\hook\\IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts\\hook\\IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts\\hook\\IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts\\hook\\IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts\\hook\\IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/Auction.sol:Auction": {
        "src": "contracts\\preregistration\\Auction.sol:17",
        "version": {
          "withMetadata": "ede2a901774a3e406214381ea43f3b229e53a44556d81b5b99476c6b098d15be",
          "withoutMetadata": "609b2d91d7c70823c6d3dd9085f158cfdd2799b73c594edaa541f762c5f4899f",
          "linkedWithoutMetadata": "609b2d91d7c70823c6d3dd9085f158cfdd2799b73c594edaa541f762c5f4899f"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,address,address,address)",
          "placeBid(string)",
          "nextBidFloorPrice(uint256,string)",
          "withdraw(string)",
          "ownerWithdraw()",
          "available(string)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Auction",
            "src": "contracts\\preregistration\\Auction.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "controller",
            "src": "contracts\\preregistration\\Auction.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\Auction.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:20"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18537",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:21"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PrepaidPlatformFee)6894",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:22"
            },
            {
              "label": "ownerCanWithdraw",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Auction",
              "src": "contracts\\preregistration\\Auction.sol:28"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18537": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6894": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts\\preregistration\\PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "16d63af30882811d852aac0bd1bc8df7652ebe232f3ccd236828a20134bd0651",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts\\preregistration\\PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)17261_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17247_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)17266_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts\\preregistration\\PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)17266_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)17261_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17247_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)17247_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)17266_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)17261_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/FixedOracle.sol:FixedOracle": {
        "src": "contracts\\price-oracle\\FixedOracle.sol:4",
        "version": {
          "withMetadata": "2363360c4a68b85b8364d09ae692154a7d0154415847b25c0994f3b4c8905c5c",
          "withoutMetadata": "d7dba42030bf386a1b706b486ee359cefd1a96856794623b3a60aa16cf6877c4",
          "linkedWithoutMetadata": "d7dba42030bf386a1b706b486ee359cefd1a96856794623b3a60aa16cf6877c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(int256,uint8)",
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FixedOracle",
            "src": "contracts\\price-oracle\\FixedOracle.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "value",
            "src": "contracts\\price-oracle\\FixedOracle.sol:6"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals_val",
            "src": "contracts\\price-oracle\\FixedOracle.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts\\price-oracle\\IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/PriceOracle.sol:PriceOracle": {
        "src": "contracts\\price-oracle\\PriceOracle.sol:12",
        "version": {
          "withMetadata": "737c75481e2463275eb2d9d417be5d67b526ce65ecfbd10827778fbd32e15f1c",
          "withoutMetadata": "8db29f8f7f463514d9ce3caf23ad66ba066349231f39afa91975e6b44bcfbe35",
          "linkedWithoutMetadata": "8db29f8f7f463514d9ce3caf23ad66ba066349231f39afa91975e6b44bcfbe35"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/price-oracle/IPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address)",
          "initialize(address,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)",
          "premium(string,uint256,uint256)",
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setUsdOracle(address)",
          "decayedPremium(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceOracle",
            "src": "contracts\\price-oracle\\PriceOracle.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:15"
            },
            {
              "label": "startPremium",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:20"
            },
            {
              "label": "endValue",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:21"
            },
            {
              "label": "usdOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(AggregatorInterface)9170",
              "contract": "PriceOracle",
              "src": "contracts\\price-oracle\\PriceOracle.sol:24"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorInterface)9170": {
              "label": "contract AggregatorInterface",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))": {
              "label": "mapping(uint256 => mapping(uint8 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint64)": {
              "label": "mapping(uint8 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/BaseCreator.sol:BaseCreator": {
        "src": "contracts\\proxy\\BaseCreator.sol:10",
        "version": {
          "withMetadata": "52521564978741653552f203c7a3b6409b7c031e3274af41c6eb73bd9f8b8a47",
          "withoutMetadata": "2f36fb5a5c89d513a190e24839d73fa9252e9d19477d1894c4c7bdf15c5b6bc3",
          "linkedWithoutMetadata": "2f36fb5a5c89d513a190e24839d73fa9252e9d19477d1894c4c7bdf15c5b6bc3"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IBaseCreator.sol:IBaseCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCreator",
            "src": "contracts\\proxy\\BaseCreator.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "contracts\\proxy\\ERC1967Proxy.sol:6",
        "version": {
          "withMetadata": "46a0adf0e30990d99bf022f51f374eee4dff66632f3c73c79c23f8bfe7690617",
          "withoutMetadata": "a44d86ecc31096d8aba69289c37ba22c1da02a09e4341c06a007f6563ff9f37b",
          "linkedWithoutMetadata": "a44d86ecc31096d8aba69289c37ba22c1da02a09e4341c06a007f6563ff9f37b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes32)",
          "initialize(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts\\proxy\\ERC1967Proxy.sol:17"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deployer",
            "src": "contracts\\proxy\\ERC1967Proxy.sol:8"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nameHash",
            "src": "contracts\\proxy\\ERC1967Proxy.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts\\proxy\\IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts\\proxy\\IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/PreRegistrationCreator.sol:PreRegistrationCreator": {
        "src": "contracts\\proxy\\PreRegistrationCreator.sol:15",
        "version": {
          "withMetadata": "413b06936459ed4c04fcd7de951584e6c2574eb211d16ce7830e3d93f8df9573",
          "withoutMetadata": "e105ad45c56135d5eb404150c005f7c3a005eaea69c4b141f6212442cc56718c",
          "linkedWithoutMetadata": "e105ad45c56135d5eb404150c005f7c3a005eaea69c4b141f6212442cc56718c"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationCreator",
            "src": "contracts\\proxy\\PreRegistrationCreator.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts\\referral\\IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts\\referral\\ReferralHub.sol:15",
        "version": {
          "withMetadata": "0c959ddcb1a4cc8625d48d71cb7b39817d18e7cd674cd2cf720918424ffc47d9",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts\\referral\\ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)20041_storage))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)18648",
              "contract": "ReferralHub",
              "src": "contracts\\referral\\ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)18648": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)20041_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)20041_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)20041_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts\\registrar\\IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseRegistrar": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:26",
        "version": {
          "withMetadata": "ba126db644b6f522c28503465ea8e056b71ff50aec6835e61776918e0b51d5f6",
          "withoutMetadata": "dfd9da035bc4437a443914539daee606781266cde8fdc3e6593e0b0a26f6ef1d",
          "linkedWithoutMetadata": "dfd9da035bc4437a443914539daee606781266cde8fdc3e6593e0b0a26f6ef1d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)",
          "setController(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReverseRegistrar",
            "src": "contracts\\registrar\\ReverseRegistrar.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sid",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MetaTldsRegistry)22020",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:27"
            },
            {
              "label": "defaultResolver",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ReverseResolver)20994",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:28"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReverseRegistrar",
              "src": "contracts\\registrar\\ReverseRegistrar.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ReverseResolver)20994": {
              "label": "contract ReverseResolver",
              "numberOfBytes": "20"
            },
            "t_contract(MetaTldsRegistry)22020": {
              "label": "contract MetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseResolver": {
        "src": "contracts\\registrar\\ReverseRegistrar.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "setTldName(bytes32,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts\\registry\\IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/MetaTldsRegistry.sol:MetaTldsRegistry": {
        "src": "contracts\\registry\\MetaTldsRegistry.sol:9",
        "version": {
          "withMetadata": "2dfeae97e812e221a5bd6e9a9c9766e593cf658b2853bc7a8a105cd529dd2a73",
          "withoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e",
          "linkedWithoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e"
        },
        "inherit": [
          "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setOwner(bytes32,address)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaTldsRegistry",
            "src": "contracts\\registry\\MetaTldsRegistry.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Record)21608_storage)",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:16"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "MetaTldsRegistry",
              "src": "contracts\\registry\\MetaTldsRegistry.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Record)21608_storage)": {
              "label": "mapping(bytes32 => struct MetaTldsRegistry.Record)",
              "numberOfBytes": "32"
            },
            "t_struct(Record)21608_storage": {
              "label": "struct MetaTldsRegistry.Record",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ttl",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/IMulticallable.sol:IMulticallable": {
        "src": "contracts\\resolvers\\IMulticallable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts\\resolvers\\ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Multicallable.sol:Multicallable": {
        "src": "contracts\\resolvers\\Multicallable.sol:7",
        "inherit": [
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\resolvers\\Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/PublicResolver.sol:PublicResolver": {
        "src": "contracts\\resolvers\\PublicResolver.sol:20",
        "version": {
          "withMetadata": "a6b3b8b2d6e5252f7f625c7781874bc77923b94e502471958cb5efecc5f2f91c",
          "withoutMetadata": "c0faf623664d64d41c9a90e0ec473e6a1fc6a9bc513ec015aa45705f7283b614",
          "linkedWithoutMetadata": "c0faf623664d64d41c9a90e0ec473e6a1fc6a9bc513ec015aa45705f7283b614"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver",
          "contracts/resolvers/profiles/TextResolver.sol:TextResolver",
          "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver",
          "contracts/resolvers/profiles/NameResolver.sol:NameResolver",
          "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver",
          "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver",
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/Multicallable.sol:Multicallable",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "setNewTrustedController(address)",
          "removeTrustedController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PublicResolver",
            "src": "contracts\\resolvers\\PublicResolver.sol:51"
          },
          {
            "kind": "delegatecall",
            "src": "contracts\\resolvers\\Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:8"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:10"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts\\resolvers\\profiles\\NameResolver.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23667_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:13"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts\\resolvers\\profiles\\TextResolver.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:8"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "10",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IMetaTldsRegistry)21595",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:33"
            },
            {
              "label": "trustedControllers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:34"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "PublicResolver",
              "src": "contracts\\resolvers\\PublicResolver.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IMetaTldsRegistry)21595": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)23667_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23667_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)23667_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts\\resolvers\\Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts\\resolvers\\ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts\\resolvers\\SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/mocks/DummyNameWrapper.sol:DummyNameWrapper": {
        "src": "contracts\\resolvers\\mocks\\DummyNameWrapper.sol:6",
        "version": {
          "withMetadata": "2fec6106284a74a51741731162e26a15e64531231b45324d62f071c3ebae7f41",
          "withoutMetadata": "8e5d2ff5fc745a6745dc6c543c40d7b821497c44cc200e8b37fb56884e8f4abd",
          "linkedWithoutMetadata": "8e5d2ff5fc745a6745dc6c543c40d7b821497c44cc200e8b37fb56884e8f4abd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver": {
        "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "ABI(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts\\resolvers\\profiles\\ABIResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver": {
        "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:8",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver"
        ],
        "libraries": [],
        "methods": [
          "setAddr(bytes32,address)",
          "addr(bytes32)",
          "setAddr(bytes32,uint256,bytes)",
          "addr(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver"
        ],
        "libraries": [],
        "methods": [
          "setContenthash(bytes32,bytes)",
          "contenthash(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts\\resolvers\\profiles\\ContentHashResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ExtendedResolver.sol:ExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\ExtendedResolver.sol:4",
        "version": {
          "withMetadata": "58df60f1a446cfee1fedc6be978611f0a786394fc0e97e219733366abbf2eab3",
          "withoutMetadata": "5536d00f475834f6e34ea2f5120683ca946005ca834e5e566234386a166c772c",
          "linkedWithoutMetadata": "5536d00f475834f6e34ea2f5120683ca946005ca834e5e566234386a166c772c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts\\resolvers\\profiles\\IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts\\resolvers\\profiles\\IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts\\resolvers\\profiles\\IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts\\resolvers\\profiles\\IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedDNSResolver.sol:IExtendedDNSResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedDNSResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts\\resolvers\\profiles\\IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts\\resolvers\\profiles\\INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts\\resolvers\\profiles\\ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts\\resolvers\\profiles\\IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver": {
        "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:9",
        "inherit": [
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver"
        ],
        "libraries": [],
        "methods": [
          "setInterface(bytes32,bytes4,address)",
          "interfaceImplementer(bytes32,bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts\\resolvers\\profiles\\AddrResolver.sol:15"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts\\resolvers\\profiles\\InterfaceResolver.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/NameResolver.sol:NameResolver": {
        "src": "contracts\\resolvers\\profiles\\NameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver"
        ],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "name(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts\\resolvers\\profiles\\NameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver": {
        "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver"
        ],
        "libraries": [],
        "methods": [
          "setPubkey(bytes32,bytes32,bytes32)",
          "pubkey(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23667_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts\\resolvers\\profiles\\PubkeyResolver.sol:13"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)23667_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23667_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)23667_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TextResolver.sol:TextResolver": {
        "src": "contracts\\resolvers\\profiles\\TextResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver"
        ],
        "libraries": [],
        "methods": [
          "setText(bytes32,string,string)",
          "text(bytes32,string)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts\\resolvers\\profiles\\TextResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver": {
        "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver"
        ],
        "libraries": [],
        "methods": [
          "setTldName(bytes32,uint256,string)",
          "tldName(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts\\resolvers\\ResolverBase.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts\\resolvers\\profiles\\TldNameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/staking/EthStaking.sol:EthStaking": {
        "src": "contracts\\staking\\EthStaking.sol:4",
        "version": {
          "withMetadata": "02ce3cb9b7c1d93b6b6e052613886efb3e4777d382a76cf51cb23ff570b3338e",
          "withoutMetadata": "4d85a3c11719ca561cdb9814d7d16f6106d9b8539d82ba7342d333645864d943",
          "linkedWithoutMetadata": "4d85a3c11719ca561cdb9814d7d16f6106d9b8539d82ba7342d333645864d943"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "stake()",
          "unStake()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "stakes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/access/mocks/DummyTldAccessableImpl.sol:DummyTldAccessableImpl": {
        "src": "test\\access\\mocks\\DummyTldAccessableImpl.sol:6",
        "version": {
          "withMetadata": "2521be03ced52588d89a7f0cf348d017ac235ad7dae8586ec4282ff6f02b6ed0",
          "withoutMetadata": "4c5d0d5603f4b768b30eac9f0ee7b2c69390f71004b678d048d4a09c5ba316a7",
          "linkedWithoutMetadata": "4c5d0d5603f4b768b30eac9f0ee7b2c69390f71004b678d048d4a09c5ba316a7"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "testOnlyTldOwner(uint256)",
          "testOnlyFactory()",
          "testOnlyTldController()",
          "testOnlyPlatformAdmin()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyTldAccessableImpl",
            "src": "test\\access\\mocks\\DummyTldAccessableImpl.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts\\access\\TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/admin/mocks/DummyUpgradeableSANN.sol:DummyUpgradeableSANN": {
        "src": "test\\admin\\mocks\\DummyUpgradeableSANN.sol:6",
        "version": {
          "withMetadata": "9be3e4073369b55656e16cf322adfedc7fcbf4d9b035d91acc0dec8cc4340fff",
          "withoutMetadata": "2aa731035d1518d02a52cba8dfa9b6bce58867a1c9b243952aa9009ffe3ec659",
          "linkedWithoutMetadata": "2aa731035d1518d02a52cba8dfa9b6bce58867a1c9b243952aa9009ffe3ec659"
        },
        "inherit": [
          "contracts/admin/SANN.sol:SANN",
          "contracts/staking/EthStaking.sol:EthStaking",
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EthStaking",
              "src": "contracts\\staking\\EthStaking.sol:5"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:16"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:19"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:22"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:25"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:28"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:31"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:34"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)6948_storage)",
              "contract": "SANN",
              "src": "contracts\\admin\\SANN.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)6948_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)6948_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/common/mocks/Dummy.sol:Dummy": {
        "src": "test\\common\\mocks\\Dummy.sol:6",
        "version": {
          "withMetadata": "dbad416b2f142700148639c742347e2018d962ed23f7bab3466349ed2e1c17c4",
          "withoutMetadata": "894e69035c0fc52fc85e71c3feb606b50c756afb3c18c2c2590e5f72371967e8",
          "linkedWithoutMetadata": "894e69035c0fc52fc85e71c3feb606b50c756afb3c18c2c2590e5f72371967e8"
        },
        "inherit": [],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "containsZeroWidthChar(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test\\controller\\mocks\\DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "9f34bf1e8d79b3660d6ec13e133a68abe8470fa38fd86850c4966b9e45cc6048",
          "withoutMetadata": "ef83e50134b194d5f689c0058d64f9b9369f0434f5e17308bbfb7595101904d6",
          "linkedWithoutMetadata": "ef83e50134b194d5f689c0058d64f9b9369f0434f5e17308bbfb7595101904d6"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts\\access\\TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts\\access\\TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)9459_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)9481_storage)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18648)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6228",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18648",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)20971",
              "contract": "RegistrarController",
              "src": "contracts\\controller\\RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16424": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6228": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16463": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18648": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16498": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16545": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16584": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16635": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)20971": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16686": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18648)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)9459_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)9481_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)9459_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)9481_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16498",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16463",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16424",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16686",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16584",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16545",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16635",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/preregistration/mocks/DummyOracle.sol:DummyOracle": {
        "src": "test\\preregistration\\mocks\\DummyOracle.sol:4",
        "version": {
          "withMetadata": "5c4cff31f40b5329a55f80115d09f4dcd2e67d3e3efa377b33527f20c28c3103",
          "withoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a",
          "linkedWithoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(int256)",
          "set(int256)",
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyOracle",
            "src": "test\\preregistration\\mocks\\DummyOracle.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "DummyOracle",
              "src": "test\\preregistration\\mocks\\DummyOracle.sol:5"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "e1fe16c4743a6d1163d48dcd5af81a91296c4ac4714f0f16fd3263ec913c92ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/security/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@openzeppelin/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:20",
        "version": {
          "withMetadata": "453e2041f27f52c071d719ad3e61c61bc7d2eefc2e278bf1845027e77a0b592d",
          "withoutMetadata": "97aff7fbe4448695afac660308617788094f7a639225360f65206e4321ab6d51",
          "linkedWithoutMetadata": "97aff7fbe4448695afac660308617788094f7a639225360f65206e4321ab6d51"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(string)",
          "supportsInterface(bytes4)",
          "uri(uint256)",
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1155",
            "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI": {
        "src": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "uri(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "46ecde567a77774dedb84c2e1782f51bc6b9faeda29872db8dbcb916e0951391",
          "withoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15",
          "linkedWithoutMetadata": "1048af23c4bc585b928276c2bbd9a62fb7ba35a092e468b138b7b5af05cdcb15"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981": {
        "src": "@openzeppelin/contracts/token/common/ERC2981.sol:24",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(RoyaltyInfo)3982_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3982_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "93a9141b4158fc36304ad0203ee7b34c510740fa41a9743e35c256d40acec2f8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "a7196d32ccd2519f61d81ca0747ad603af0457335916696faf327fb6e523552e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "55430d9bf5f5907e158d5fbb9216af731993316bae8146c66d1eb7eb9f15fa30",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "c2ba5d9057208072779405184bb59f4b625f20e22eaad9f1a5e5d21f0ff2cb46",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "88a9eebac5f7647f69e20485a9f84f973d9b3673fcc144961116f89077a6a69a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessable.sol:TldAccessable": {
        "src": "contracts/access/TldAccessable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldAccessable",
            "src": "contracts/access/TldAccessable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable": {
        "src": "contracts/access/TldAccessableUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts/access/TldAccessableUpgradeable.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessable.sol:TreasuryAccessable": {
        "src": "contracts/access/TreasuryAccessable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TreasuryAccessable",
            "src": "contracts/access/TreasuryAccessable.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessable",
              "src": "contracts/access/TreasuryAccessable.sol:8"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable": {
        "src": "contracts/access/TreasuryAccessableUpgradeable.sol:8",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts/access/TreasuryAccessableUpgradeable.sol:9"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPlatformConfig.sol:IPlatformConfig": {
        "src": "contracts/admin/IPlatformConfig.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)",
          "platformFeeCollector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee": {
        "src": "contracts/admin/IPrepaidPlatformFee.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(uint256)",
          "deduct(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ISANN.sol:ISANN": {
        "src": "contracts/admin/ISANN.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldBase(uint256)",
          "currentTldFactory()",
          "tldController()",
          "platformAdmin()",
          "chainId()",
          "registry()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/ITldFactory.sol:ITldFactory": {
        "src": "contracts/admin/ITldFactory.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PlatformConfig.sol:PlatformConfig": {
        "src": "contracts/admin/PlatformConfig.sol:9",
        "version": {
          "withMetadata": "91edb306251deb32ac0b8b1e64c259a38442498b316b22f0636ecc3a14de248e",
          "withoutMetadata": "87a5f930fb25f12e8c5cf35b769406c1cc4e17d6f2db906e2a7ecbd6127178f1",
          "linkedWithoutMetadata": "87a5f930fb25f12e8c5cf35b769406c1cc4e17d6f2db906e2a7ecbd6127178f1"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPlatformConfig.sol:IPlatformConfig"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(uint256,uint256,address)",
          "setDefaultMinPlatformFee(uint256)",
          "setDefaultRateBps(uint256)",
          "setPlatformFeeCollector(address)",
          "setCustomizedPlatformFee(uint256,uint256,uint256,bool)",
          "computePlatformFee(uint256,uint256)",
          "computeBasicPlatformFee(uint256,uint256)",
          "getMinPlatformFee(uint256)",
          "getPlatformFeeRateBps(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PlatformConfig",
            "src": "contracts/admin/PlatformConfig.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "customizedConfigs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(CustomizedConfig)6151_storage)",
              "contract": "PlatformConfig",
              "src": "contracts/admin/PlatformConfig.sol:12"
            },
            {
              "label": "platformFeeCollector",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PlatformConfig",
              "src": "contracts/admin/PlatformConfig.sol:14"
            },
            {
              "label": "defaultMinPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts/admin/PlatformConfig.sol:16"
            },
            {
              "label": "defaultRateBps",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "PlatformConfig",
              "src": "contracts/admin/PlatformConfig.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(CustomizedConfig)6151_storage)": {
              "label": "mapping(uint256 => struct IPlatformConfig.CustomizedConfig)",
              "numberOfBytes": "32"
            },
            "t_struct(CustomizedConfig)6151_storage": {
              "label": "struct IPlatformConfig.CustomizedConfig",
              "members": [
                {
                  "label": "minPlatformFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feeRateBps",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "enabled",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/PrepaidPlatformFee.sol:PrepaidPlatformFee": {
        "src": "contracts/admin/PrepaidPlatformFee.sol:11",
        "version": {
          "withMetadata": "c2334f775deb23541018ca1d46543bf22e3534c08d5c62df1b84cd8893f8abf6",
          "withoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2",
          "linkedWithoutMetadata": "6f6cf89904b26daf7eb686af589e101bc7d98f3b4aa4461a08ba2aadf3cbd0c2"
        },
        "inherit": [
          "contracts/access/TreasuryAccessable.sol:TreasuryAccessable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/IPrepaidPlatformFee.sol:IPrepaidPlatformFee"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "deposit(uint256)",
          "deduct(uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PrepaidPlatformFee",
            "src": "contracts/admin/PrepaidPlatformFee.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessable",
              "src": "contracts/access/TreasuryAccessable.sol:8"
            },
            {
              "label": "feeCredits",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "PrepaidPlatformFee",
              "src": "contracts/admin/PrepaidPlatformFee.sol:16"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IPriceOracle)18644",
              "contract": "PrepaidPlatformFee",
              "src": "contracts/admin/PrepaidPlatformFee.sol:17"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/SANN.sol:SANN": {
        "src": "contracts/admin/SANN.sol:11",
        "version": {
          "withMetadata": "7e716c118bb5b2d684a462a1f8c095993ca6c5dc2cb7f0c2d33d29ec2249a68d",
          "withoutMetadata": "a17961ea798f70ce2b111353c9b6f5a04955984cc946e7acefd8c0e22bbb6671",
          "linkedWithoutMetadata": "a17961ea798f70ce2b111353c9b6f5a04955984cc946e7acefd8c0e22bbb6671"
        },
        "inherit": [
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address,address)",
          "setTldFactory(address)",
          "setPlatformAdmin(address)",
          "setMinTldLength(uint256)",
          "setMaxTldLength(uint256)",
          "setTldController(address)",
          "tld(uint256)",
          "tldOwner(uint256)",
          "tldController()",
          "tldBase(uint256)",
          "tldIdentifier(string,address)",
          "registerTld(string,uint256,address,address)",
          "transferNodeOwner(bytes32,address)",
          "setTldOwner(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)6944_storage)",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)6944_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)6944_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/admin/TldFactory.sol:TldFactory": {
        "src": "contracts/admin/TldFactory.sol:23",
        "version": {
          "withMetadata": "5b10af260d39428cb7e24948c0b5c135be779c686df064937c17835f4603817b",
          "withoutMetadata": "6694823b5845620f1ea7cb80ee83cb92176d387d439f49de8e90ac8ab7b21343",
          "linkedWithoutMetadata": "6694823b5845620f1ea7cb80ee83cb92176d387d439f49de8e90ac8ab7b21343"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/admin/ITldFactory.sol:ITldFactory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,address,address,address,address,address,address,address)",
          "createDomainService(string,address,((uint256,uint256,uint256,uint256,uint256),uint8[],uint64[],bool,uint256[],bool,uint256[],struct ReferralHub.Comission[],bool,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256),uint16[],uint256,bool,string))",
          "setDefaultPriceOracle(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TldFactory",
            "src": "contracts/admin/TldFactory.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:25"
            },
            {
              "label": "baseCreator",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IBaseCreator)19666",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:28"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:31"
            },
            {
              "label": "registrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IRegistrarController)9834",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:34"
            },
            {
              "label": "preRegiCreator",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPreRegistrationCreator)19728",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:38"
            },
            {
              "label": "giftCardVoucher",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(GiftCardVoucher)14710",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:41"
            },
            {
              "label": "giftCardLedger",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(GiftCardLedger)14448",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:42"
            },
            {
              "label": "referralHub",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ReferralHub)20864",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:45"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(PrepaidPlatformFee)6894",
              "contract": "TldFactory",
              "src": "contracts/admin/TldFactory.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GiftCardLedger)14448": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14710": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IBaseCreator)19666": {
              "label": "contract IBaseCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IPreRegistrationCreator)19728": {
              "label": "contract IPreRegistrationCreator",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistrarController)9834": {
              "label": "contract IRegistrarController",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6894": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(ReferralHub)20864": {
              "label": "contract ReferralHub",
              "numberOfBytes": "20"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/Base.sol:Base": {
        "src": "contracts/base/Base.sol:13",
        "version": {
          "withMetadata": "8604be79b789d56634ad7b29a45bdb021c3ffa85dc7cbbe70e74f8cf1d883ec8",
          "withoutMetadata": "84ce41f3a12289e127a8328e409d3fd60ca7a9a14a9d73d5e6a60d32bc836db0",
          "linkedWithoutMetadata": "84ce41f3a12289e127a8328e409d3fd60ca7a9a14a9d73d5e6a60d32bc836db0"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/base/IBase.sol:IBase",
          "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address,address,uint256,string,string)",
          "totalSupply()",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "ownerOf(uint256)",
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "registerOnly(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "supportsInterface(bytes4)",
          "setURI(string)",
          "tokenURI(uint256)",
          "setDefaultRoyalty(address,uint96)",
          "deleteDefaultRoyalty()",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Base",
            "src": "contracts/base/Base.sol:70"
          },
          {
            "kind": "state-variable-assignment",
            "name": "supplyAmount",
            "src": "contracts/base/Base.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_defaultRoyaltyInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(RoyaltyInfo)3982_storage",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:30"
            },
            {
              "label": "_tokenRoyaltyInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)",
              "contract": "ERC2981",
              "src": "@openzeppelin/contracts/token/common/ERC2981.sol:31"
            },
            {
              "label": "sann",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "expiries",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "Base",
              "src": "contracts/base/Base.sol:17"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IMetaTldsRegistry)21591",
              "contract": "Base",
              "src": "contracts/base/Base.sol:19"
            },
            {
              "label": "baseNode",
              "offset": 0,
              "slot": "11",
              "type": "t_bytes32",
              "contract": "Base",
              "src": "contracts/base/Base.sol:21"
            },
            {
              "label": "identifier",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts/base/Base.sol:23"
            },
            {
              "label": "tld",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts/base/Base.sol:25"
            },
            {
              "label": "baseUri",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "Base",
              "src": "contracts/base/Base.sol:27"
            },
            {
              "label": "supplyAmount",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "Base",
              "src": "contracts/base/Base.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(IMetaTldsRegistry)21591": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)3982_storage)": {
              "label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)3982_storage": {
              "label": "struct ERC2981.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/base/IBase.sol:IBase": {
        "src": "contracts/base/IBase.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "setResolver(address)",
          "nameExpires(uint256)",
          "available(uint256)",
          "register(uint256,address,uint256)",
          "renew(uint256,uint256)",
          "reclaim(uint256,address)",
          "setURI(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/AggregatorInterface.sol:AggregatorInterface": {
        "src": "contracts/common/AggregatorInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/common/StringUtils.sol:StringUtils": {
        "src": "contracts/common/StringUtils.sol:4",
        "version": {
          "withMetadata": "3aa1d5aab200d10bb5ffe643be21c1cfd6af8a069e59667b204a1011ee2c4e75",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/IRegistrarController.sol:IRegistrarController": {
        "src": "contracts/controller/IRegistrarController.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "available(uint256,string)",
          "rentPrice(uint256,string,uint256)",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/controller/RegistrarController.sol:RegistrarController": {
        "src": "contracts/controller/RegistrarController.sol:36",
        "version": {
          "withMetadata": "4f47f58e69a776cb861f09a39d5be61c2a5cc95d9cdf9f4f71002645e2fc83e9",
          "withoutMetadata": "32dd5233793db947c27b2c9ebe36b0371b28626bb90847afc692d177addf698b",
          "linkedWithoutMetadata": "32dd5233793db947c27b2c9ebe36b0371b28626bb90847afc692d177addf698b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address)",
          "setTldConfigs(uint256,(uint256,uint256,uint256,uint256,uint256))",
          "setTldHooks(uint256,address,address,address,address,address)",
          "setTldPriceOracle(uint256,address)",
          "setMinDomainLength(uint256,uint256)",
          "setMaxDomainLength(uint256,uint256)",
          "setMintCap(uint256,uint256)",
          "setMinRegistrationDuration(uint256,uint256)",
          "setMinRenewDuration(uint256,uint256)",
          "setQualificationHook(uint256,address)",
          "setPriceHook(uint256,address)",
          "setPointHook(uint256,address)",
          "setRewardHook(uint256,address)",
          "setRenewPriceHook(uint256,address)",
          "setRenewPointHook(uint256,address)",
          "setRenewRewardHook(uint256,address)",
          "()",
          "recoverFunds(address,address,uint256)",
          "withdraw(uint256)",
          "withdrawPlatformFee()",
          "getPriceOracle(uint256)",
          "rentPriceInUSD(uint256,string,uint256)",
          "rentPrice(uint256,string,uint256)",
          "bulkRentPrice(uint256,string[],uint256)",
          "bulkRegisterSimulate(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenewSimulate(uint256,string[],uint256,address,bytes[])",
          "priceAfterDiscount(uint256,string,address,uint256,bytes)",
          "bulkRegister(uint256,string[],address,uint256,address,bool,bytes[])",
          "bulkRenew(uint256,string[],uint256,bytes[])",
          "available(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts/access/TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts/access/TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)9455_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)9477_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18644)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6228",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18644",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)20967",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16420": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6228": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16459": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16494": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16541": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16580": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16631": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)20967": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16682": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18644)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)9455_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)9477_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)9455_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)9477_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16494",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16459",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16420",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16682",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16580",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16541",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16631",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/create2factory/Create2Factory.sol:Create2Factory": {
        "src": "contracts/create2factory/Create2Factory.sol:15",
        "version": {
          "withMetadata": "2836252593ba3867eb98173ab13cacc0e88983989bcf61cc3750b474b780f930",
          "withoutMetadata": "59ffeed0577b600c428a56be18cec4c4fa97479570d39cf3bcd04435fdfb6618",
          "linkedWithoutMetadata": "59ffeed0577b600c428a56be18cec4c4fa97479570d39cf3bcd04435fdfb6618"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "safeCreate2(bytes32,bytes)",
          "findCreate2Address(bytes32,bytes)",
          "findCreate2AddressViaHash(bytes32,bytes32)",
          "hasBeenDeployed(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_deployed",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Create2Factory",
              "src": "contracts/create2factory/Create2Factory.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/IVerifiedTldHub.sol:IVerifiedTldHub": {
        "src": "contracts/domain-governer/IVerifiedTldHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "updateTldInfo(string,uint256,uint256,address,string)",
          "removeTldInfo(uint256,string)",
          "getChainTlds(uint256)",
          "updateChainInfo(uint256,string,address,address)",
          "updateDefaultRpc(uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/domain-governer/VerifiedTldHub.sol:VerifiedTldHub": {
        "src": "contracts/domain-governer/VerifiedTldHub.sol:5",
        "version": {
          "withMetadata": "cd84d90b5d18f8168e63b6f4bdcf797bf40860dc54fb0d96dd307e7a92c3a175",
          "withoutMetadata": "d21ce1fd5f1794b652e441c5dc281e5687ad97cc4a0008a437c8718e7be45456",
          "linkedWithoutMetadata": "d21ce1fd5f1794b652e441c5dc281e5687ad97cc4a0008a437c8718e7be45456"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updateTldInfo(string,uint256,uint256,address)",
          "removeTldInfo(uint256,string)",
          "updateChainInfo(uint256,string,address)",
          "updateDefaultRpc(uint256,string)",
          "getChainTlds(uint256)",
          "getTlds()",
          "getChainInfo(uint256)",
          "getTldInfo(string[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_struct(TldInfo)12907_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts/domain-governer/VerifiedTldHub.sol:29"
            },
            {
              "label": "chainTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts/domain-governer/VerifiedTldHub.sol:30"
            },
            {
              "label": "chainInfos",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(chainInfo)12914_storage)",
              "contract": "VerifiedTldHub",
              "src": "contracts/domain-governer/VerifiedTldHub.sol:31"
            },
            {
              "label": "tlds",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "VerifiedTldHub",
              "src": "contracts/domain-governer/VerifiedTldHub.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(TldInfo)12907_storage)": {
              "label": "mapping(string => struct VerifiedTldHub.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(uint256 => string[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(chainInfo)12914_storage)": {
              "label": "mapping(uint256 => struct VerifiedTldHub.chainInfo)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)12907_storage": {
              "label": "struct VerifiedTldHub.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "identifier",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "registry",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(chainInfo)12914_storage": {
              "label": "struct VerifiedTldHub.chainInfo",
              "members": [
                {
                  "label": "chainId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "defaultRpc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sann",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardBase.sol:GiftCardBase": {
        "src": "contracts/giftcard/GiftCardBase.sol:10",
        "version": {
          "withMetadata": "139fd230c597347242cb93f02d6773484364c1f3e735dfea27816297a012b27e",
          "withoutMetadata": "56b0277707c78fdeab51ea02908256ac16314337dac504513810c5a1cdbe6ed3",
          "linkedWithoutMetadata": "56b0277707c78fdeab51ea02908256ac16314337dac504513810c5a1cdbe6ed3"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts/security/Pausable.sol:Pausable",
          "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase",
          "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
          "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol:IERC1155MetadataURI",
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(address)",
          "setURI(string)",
          "uri(uint256)",
          "name()",
          "symbol()",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])",
          "batchBurn(address,uint256[],uint256[])",
          "addController(address)",
          "removeController(address)",
          "pause()",
          "unpause()",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardBase",
            "src": "contracts/giftcard/GiftCardBase.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:24"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:27"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC1155",
              "src": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:30"
            },
            {
              "label": "_paused",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/security/Pausable.sol:28"
            },
            {
              "label": "sann",
              "offset": 1,
              "slot": "3",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardBase",
              "src": "contracts/giftcard/GiftCardBase.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardController.sol:GiftCardController": {
        "src": "contracts/giftcard/GiftCardController.sol:14",
        "version": {
          "withMetadata": "c94da87148b54f6f57541c0b55ecb632cf06994956e265e6e8de6f0f07242f28",
          "withoutMetadata": "9aeea9e0d55f318f24ce24301b43384d82aedaa067a2193360b008347bce6952",
          "linkedWithoutMetadata": "9aeea9e0d55f318f24ce24301b43384d82aedaa067a2193360b008347bce6952"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address)",
          "price(uint256[],uint256[])",
          "batchRegister(uint256[],uint256[])",
          "batchRedeem(uint256,uint256[],uint256[])",
          "setPriceOracle(address)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardController",
            "src": "contracts/giftcard/GiftCardController.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "base",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(GiftCardBase)13719",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:15"
            },
            {
              "label": "voucher",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(GiftCardVoucher)14710",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:16"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14448",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:17"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:18"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(PrepaidPlatformFee)6894",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:19"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IPriceOracle)18644",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:20"
            },
            {
              "label": "tldGiftCardRevenues",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardController",
              "src": "contracts/giftcard/GiftCardController.sol:25"
            }
          ],
          "types": {
            "t_contract(GiftCardBase)13719": {
              "label": "contract GiftCardBase",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardLedger)14448": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(GiftCardVoucher)14710": {
              "label": "contract GiftCardVoucher",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6894": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardLedger.sol:GiftCardLedger": {
        "src": "contracts/giftcard/GiftCardLedger.sol:7",
        "version": {
          "withMetadata": "7ef568c62058d0da7ca18fe0afd5fbcb260e3aa3084594f4205632a65de9f55a",
          "withoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b",
          "linkedWithoutMetadata": "d26e322156ce1654594ae545fbe49db89c09342055bc0c1d2f0914570c16f11b"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "balanceOf(uint256,address)",
          "redeem(uint256,address,uint256)",
          "deduct(uint256,address,uint256)",
          "addTldGiftCardController(uint256,address)",
          "removeTldGiftCardController(uint256,address)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardLedger",
            "src": "contracts/giftcard/GiftCardLedger.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:8"
            },
            {
              "label": "tldControllers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:9"
            },
            {
              "label": "balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GiftCardLedger",
              "src": "contracts/giftcard/GiftCardLedger.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/GiftCardVoucher.sol:GiftCardVoucher": {
        "src": "contracts/giftcard/GiftCardVoucher.sol:6",
        "version": {
          "withMetadata": "4ef3ef66b4a8dfb68ee3516b4cd3eacb0830fb18751a1231134d338a0a38f8b9",
          "withoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde",
          "linkedWithoutMetadata": "c59c152f54ab03df959dbb4d777781eb6d4b8de259d01146b5822991742a8bde"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "addCustomizedVoucher(uint256,uint256)",
          "totalValue(uint256[],uint256[])",
          "isValidVoucherIds(uint256[])",
          "getTokenIdTld(uint256)",
          "isSameTld(uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GiftCardVoucher",
            "src": "contracts/giftcard/GiftCardVoucher.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "voucherValues",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts/giftcard/GiftCardVoucher.sol:7"
            },
            {
              "label": "voucherTlds",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GiftCardVoucher",
              "src": "contracts/giftcard/GiftCardVoucher.sol:8"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/giftcard/IGiftCardBase.sol:IGiftCardBase": {
        "src": "contracts/giftcard/IGiftCardBase.sol:5",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:IERC1155",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "addController(address)",
          "removeController(address)",
          "register(address,uint256,uint256)",
          "batchRegister(address,uint256[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultDiscountHook.sol:DefaultDiscountHook": {
        "src": "contracts/hook/DefaultDiscountHook.sol:19",
        "version": {
          "withMetadata": "8ed89cdadb5bdb8137a02a0b186a4e1f365c6ff867eb9dc9cb540946da2ac07d",
          "withoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1",
          "linkedWithoutMetadata": "a8bfcaa97269d1c03efeeecb230511ff01e9e0de272c0105f4391bc34391fee1"
        },
        "inherit": [
          "contracts/hook/IRenewPointHook.sol:IRenewPointHook",
          "contracts/hook/IPointHook.sol:IPointHook",
          "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook",
          "contracts/hook/IPriceHook.sol:IPriceHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address,uint256,address,address,address,address,uint16[],uint256)",
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)",
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)",
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)",
          "setPreRegiDiscountRateBps(uint8,uint16)",
          "setPublicRegistrationStartTime(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultDiscountHook",
            "src": "contracts/hook/DefaultDiscountHook.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/hook/DefaultDiscountHook.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "preRegiState",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PreRegistrationState)18533",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:28"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:29"
            },
            {
              "label": "ledger",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GiftCardLedger)14448",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:30"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IPriceOracle)18644",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:31"
            },
            {
              "label": "preRegiDiscountRateBps",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint8,t_uint16)",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:38"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DefaultDiscountHook",
              "src": "contracts/hook/DefaultDiscountHook.sol:40"
            }
          ],
          "types": {
            "t_contract(GiftCardLedger)14448": {
              "label": "contract GiftCardLedger",
              "numberOfBytes": "20"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18533": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint8,t_uint16)": {
              "label": "mapping(uint8 => uint16)",
              "numberOfBytes": "32"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/DefaultQualificationHook.sol:DefaultQualificationHook": {
        "src": "contracts/hook/DefaultQualificationHook.sol:12",
        "version": {
          "withMetadata": "ee23956a552b997e482d13bc87b7acc33510c5a6cab2fa6b5037df05e971ee6a",
          "withoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee",
          "linkedWithoutMetadata": "8bc7c27b603474933c829f13dc2b23d1b2747a3bd9d7359cbcf4048e4fa8eaee"
        },
        "inherit": [
          "contracts/hook/IQualificationHook.sol:IQualificationHook",
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,uint256,bool)",
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)",
          "setPublicRegistrationStartTime(uint256)",
          "setPublicRegistrationPaused(bool)",
          "setPreRegistrationState(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DefaultQualificationHook",
            "src": "contracts/hook/DefaultQualificationHook.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/hook/DefaultQualificationHook.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "publicRegistrationStartTime",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:13"
            },
            {
              "label": "publicRegistrationPaused",
              "offset": 0,
              "slot": "2",
              "type": "t_bool",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:14"
            },
            {
              "label": "preRegiState",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18533",
              "contract": "DefaultQualificationHook",
              "src": "contracts/hook/DefaultQualificationHook.sol:15"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18533": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPointHook.sol:IPointHook": {
        "src": "contracts/hook/IPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deduct(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IPriceHook.sol:IPriceHook": {
        "src": "contracts/hook/IPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IQualificationHook.sol:IQualificationHook": {
        "src": "contracts/hook/IQualificationHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isQualified(uint256,string,address,uint256,bytes)",
          "qualify(uint256,string,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPointHook.sol:IRenewPointHook": {
        "src": "contracts/hook/IRenewPointHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewDeduction(uint256,string,address,uint256,uint256,uint256,bytes)",
          "deductRenew(uint256,string,address,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewPriceHook.sol:IRenewPriceHook": {
        "src": "contracts/hook/IRenewPriceHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewNewPrice(uint256,string,address,uint256,uint256,bytes)",
          "newRenewPrice(uint256,string,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook": {
        "src": "contracts/hook/IRenewRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/hook/IRewardHook.sol:IRewardHook": {
        "src": "contracts/hook/IRewardHook.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/Auction.sol:Auction": {
        "src": "contracts/preregistration/Auction.sol:17",
        "version": {
          "withMetadata": "e1707e1493ece9ecbfdddef5c4b8d9e40b36221695653e79d21cb4ca17040f95",
          "withoutMetadata": "609b2d91d7c70823c6d3dd9085f158cfdd2799b73c594edaa541f762c5f4899f",
          "linkedWithoutMetadata": "609b2d91d7c70823c6d3dd9085f158cfdd2799b73c594edaa541f762c5f4899f"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,address,address,address,address)",
          "placeBid(string)",
          "nextBidFloorPrice(uint256,string)",
          "withdraw(string)",
          "ownerWithdraw()",
          "available(string)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Auction",
            "src": "contracts/preregistration/Auction.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "controller",
            "src": "contracts/preregistration/Auction.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/preregistration/Auction.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "Auction",
              "src": "contracts/preregistration/Auction.sol:20"
            },
            {
              "label": "state",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PreRegistrationState)18533",
              "contract": "Auction",
              "src": "contracts/preregistration/Auction.sol:21"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PrepaidPlatformFee)6894",
              "contract": "Auction",
              "src": "contracts/preregistration/Auction.sol:22"
            },
            {
              "label": "ownerCanWithdraw",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Auction",
              "src": "contracts/preregistration/Auction.sol:28"
            }
          ],
          "types": {
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_contract(PreRegistrationState)18533": {
              "label": "contract PreRegistrationState",
              "numberOfBytes": "20"
            },
            "t_contract(PrepaidPlatformFee)6894": {
              "label": "contract PrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/preregistration/PreRegistrationState.sol:PreRegistrationState": {
        "src": "contracts/preregistration/PreRegistrationState.sol:14",
        "version": {
          "withMetadata": "ef9966724be33fae4554c386a39bdcbf6f7c83a3d835326250366098d3549808",
          "withoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d",
          "linkedWithoutMetadata": "b5f898a84d0f156e35b033727bef5a2d5a3561917d05214eecc1b01ed8c7443d"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "updateAuctionStatus(uint256,string,address,uint256)",
          "clearAuctionFunds(uint256,address)",
          "topBid(uint256)",
          "userBidsView(address)",
          "topBidsView()",
          "bidAmount(uint256,address)",
          "winnerOf(uint256)",
          "isWinner(address,uint256)",
          "phase2Quota(address)",
          "setUserQuota(address,uint8)",
          "setUserQuotas(address[],uint8[])",
          "consumeAuctionQuota(address,uint256)",
          "consumeFcfsQuota(address)",
          "inAuction()",
          "inRetentionPeriod()",
          "inFcfs()",
          "inPreRegistration()",
          "auctionEnded()",
          "auctionUserWithdrawEnded()",
          "preRegistrationStartTime()",
          "preRegistrationEndTime()",
          "setAuctionConfigs(bool,uint256,uint256,uint256,uint256,uint256)",
          "setFcfsConfigs(bool,uint256,uint256)",
          "enableAuction(bool)",
          "enableFcfs(bool)",
          "addController(address)",
          "removeController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationState",
            "src": "contracts/preregistration/PreRegistrationState.sol:110"
          },
          {
            "kind": "state-variable-immutable",
            "name": "identifier",
            "src": "contracts/preregistration/PreRegistrationState.sol:86"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:62"
            },
            {
              "label": "userStatus",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserStatus)17257_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:90"
            },
            {
              "label": "auctionStatus",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17243_storage)",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:92"
            },
            {
              "label": "topBids",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_struct(TopBid)17262_storage)10_storage",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:94"
            },
            {
              "label": "auctionEnabled",
              "offset": 0,
              "slot": "24",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:98"
            },
            {
              "label": "auctionStartTime",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:99"
            },
            {
              "label": "auctionInitialEndTime",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:100"
            },
            {
              "label": "auctionHardEndTime",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:101"
            },
            {
              "label": "auctionExtendDuration",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:102"
            },
            {
              "label": "auctionRetentionDuration",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:103"
            },
            {
              "label": "auctionMinRegistrationDuration",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:104"
            },
            {
              "label": "fcfsEnabled",
              "offset": 0,
              "slot": "31",
              "type": "t_bool",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:106"
            },
            {
              "label": "fcfsStartTime",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:107"
            },
            {
              "label": "fcfsEndTime",
              "offset": 0,
              "slot": "33",
              "type": "t_uint256",
              "contract": "PreRegistrationState",
              "src": "contracts/preregistration/PreRegistrationState.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(TopBid)17262_storage)10_storage": {
              "label": "struct PreRegistrationState.TopBid[10]",
              "numberOfBytes": "640"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserStatus)17257_storage)": {
              "label": "mapping(address => struct PreRegistrationState.UserStatus)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenAuctionStatus)17243_storage)": {
              "label": "mapping(uint256 => struct PreRegistrationState.TokenAuctionStatus)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TokenAuctionStatus)17243_storage": {
              "label": "struct PreRegistrationState.TokenAuctionStatus",
              "members": [
                {
                  "label": "label",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "endTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userFunds",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TopBid)17262_storage": {
              "label": "struct PreRegistrationState.TopBid",
              "members": [
                {
                  "label": "tokenID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserStatus)17257_storage": {
              "label": "struct PreRegistrationState.UserStatus",
              "members": [
                {
                  "label": "quota",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "bids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "bided",
                  "type": "t_mapping(t_uint256,t_bool)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hadQuota",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "consumedQuotaInFcfs",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/FixedOracle.sol:FixedOracle": {
        "src": "contracts/price-oracle/FixedOracle.sol:4",
        "version": {
          "withMetadata": "e8d09bbced93548d754fecaae76f441bec26393a15e21f115f92273aa84b033e",
          "withoutMetadata": "d7dba42030bf386a1b706b486ee359cefd1a96856794623b3a60aa16cf6877c4",
          "linkedWithoutMetadata": "d7dba42030bf386a1b706b486ee359cefd1a96856794623b3a60aa16cf6877c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(int256,uint8)",
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FixedOracle",
            "src": "contracts/price-oracle/FixedOracle.sol:9"
          },
          {
            "kind": "state-variable-immutable",
            "name": "value",
            "src": "contracts/price-oracle/FixedOracle.sol:6"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals_val",
            "src": "contracts/price-oracle/FixedOracle.sol:7"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/IPriceOracle.sol:IPriceOracle": {
        "src": "contracts/price-oracle/IPriceOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/price-oracle/PriceOracle.sol:PriceOracle": {
        "src": "contracts/price-oracle/PriceOracle.sol:12",
        "version": {
          "withMetadata": "f3ba71397d4df3dd990947fdc600091572049be983fb4113d03db648d318baa5",
          "withoutMetadata": "8db29f8f7f463514d9ce3caf23ad66ba066349231f39afa91975e6b44bcfbe35",
          "linkedWithoutMetadata": "8db29f8f7f463514d9ce3caf23ad66ba066349231f39afa91975e6b44bcfbe35"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/price-oracle/IPriceOracle.sol:IPriceOracle"
        ],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "(address)",
          "initialize(address,uint256,uint256)",
          "initTldPriceModel(uint256)",
          "setTldPriceModel(uint256,uint8,uint64)",
          "premium(string,uint256,uint256)",
          "price(string,uint256,uint256,uint256)",
          "priceInWei(string,uint256,uint256,uint256)",
          "attoUSDToWei(uint256)",
          "weiToAttoUSD(uint256)",
          "setUsdOracle(address)",
          "decayedPremium(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceOracle",
            "src": "contracts/price-oracle/PriceOracle.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "prices",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))",
              "contract": "PriceOracle",
              "src": "contracts/price-oracle/PriceOracle.sol:15"
            },
            {
              "label": "startPremium",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts/price-oracle/PriceOracle.sol:20"
            },
            {
              "label": "endValue",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PriceOracle",
              "src": "contracts/price-oracle/PriceOracle.sol:21"
            },
            {
              "label": "usdOracle",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(AggregatorInterface)9166",
              "contract": "PriceOracle",
              "src": "contracts/price-oracle/PriceOracle.sol:24"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorInterface)9166": {
              "label": "contract AggregatorInterface",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_mapping(t_uint8,t_uint64))": {
              "label": "mapping(uint256 => mapping(uint8 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint64)": {
              "label": "mapping(uint8 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/BaseCreator.sol:BaseCreator": {
        "src": "contracts/proxy/BaseCreator.sol:10",
        "version": {
          "withMetadata": "54942161c7e601fcddd5e3f6d96949d9dca2f7fcae721b7e2efcc3bdd43f8703",
          "withoutMetadata": "af38c0acf70cb61e1bf93fdee78f1f41333d2939f6b309192537558abf746896",
          "linkedWithoutMetadata": "af38c0acf70cb61e1bf93fdee78f1f41333d2939f6b309192537558abf746896"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IBaseCreator.sol:IBaseCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseCreator",
            "src": "contracts/proxy/BaseCreator.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "contracts/proxy/ERC1967Proxy.sol:6",
        "version": {
          "withMetadata": "ee70d412f4787c75868f7134fe85ef810dbf98cb8f1ee18d95167f49eb5040eb",
          "withoutMetadata": "a44d86ecc31096d8aba69289c37ba22c1da02a09e4341c06a007f6563ff9f37b",
          "linkedWithoutMetadata": "a44d86ecc31096d8aba69289c37ba22c1da02a09e4341c06a007f6563ff9f37b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes32)",
          "initialize(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/proxy/ERC1967Proxy.sol:17"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deployer",
            "src": "contracts/proxy/ERC1967Proxy.sol:8"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nameHash",
            "src": "contracts/proxy/ERC1967Proxy.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IBaseCreator.sol:IBaseCreator": {
        "src": "contracts/proxy/IBaseCreator.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator": {
        "src": "contracts/proxy/IPreRegistrationCreator.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/proxy/PreRegistrationCreator.sol:PreRegistrationCreator": {
        "src": "contracts/proxy/PreRegistrationCreator.sol:15",
        "version": {
          "withMetadata": "33aa299770b9e319714fccb256d1b5ded724f7bb99ca173c9be2ca04a449d999",
          "withoutMetadata": "85ab4d9a97f007fb43b89ca942b09c659706fdce438e3ad485b914a3285bee88",
          "linkedWithoutMetadata": "85ab4d9a97f007fb43b89ca942b09c659706fdce438e3ad485b914a3285bee88"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "contracts/proxy/IPreRegistrationCreator.sol:IPreRegistrationCreator"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "create(address,uint256,address,address,address,address,(bool,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256))",
          "createAuction(address,uint256,address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PreRegistrationCreator",
            "src": "contracts/proxy/PreRegistrationCreator.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/IReferralHub.sol:IReferralHub": {
        "src": "contracts/referral/IReferralHub.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getReferralDetails(uint256,address)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/referral/ReferralHub.sol:ReferralHub": {
        "src": "contracts/referral/ReferralHub.sol:15",
        "version": {
          "withMetadata": "99427186c084126c9044158c926d1e0dba30888f4b71bf8e45b5c120e298e6af",
          "withoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e",
          "linkedWithoutMetadata": "9ea70d082733b892999a650c4469ad6776a05a4e2b3a4d4b7dbab0c955707f5e"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/hook/IRenewRewardHook.sol:IRenewRewardHook",
          "contracts/hook/IRewardHook.sol:IRewardHook",
          "contracts/referral/IReferralHub.sol:IReferralHub"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setPriceOracle(address)",
          "calcReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "calcRenewReward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "reward(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "rewardRenew(uint256,string,address,uint256,uint256,uint256,uint256,bytes)",
          "getReferralCommisionFee(uint256,uint256,address)",
          "getReferralDetails(uint256,address)",
          "setComissionChart(uint256,uint256,uint256,uint256,uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReferralHub",
            "src": "contracts/referral/ReferralHub.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "1",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "1",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            },
            {
              "label": "comissionCharts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)20037_storage))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:42"
            },
            {
              "label": "referralCounts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:44"
            },
            {
              "label": "referralBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:46"
            },
            {
              "label": "priceOracle",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IPriceOracle)18644",
              "contract": "ReferralHub",
              "src": "contracts/referral/ReferralHub.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPriceOracle)18644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
              "label": "mapping(uint256 => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Comission)20037_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct ReferralHub.Comission))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Comission)20037_storage)": {
              "label": "mapping(uint256 => struct ReferralHub.Comission)",
              "numberOfBytes": "32"
            },
            "t_struct(Comission)20037_storage": {
              "label": "struct ReferralHub.Comission",
              "members": [
                {
                  "label": "minimumReferralCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referrerRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "refereeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isValid",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar": {
        "src": "contracts/registrar/IReverseRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseRegistrar": {
        "src": "contracts/registrar/ReverseRegistrar.sol:26",
        "version": {
          "withMetadata": "27142904479d2077843989604a64b2af1fa3888ceba2550fddc1ca14a25a0736",
          "withoutMetadata": "dfd9da035bc4437a443914539daee606781266cde8fdc3e6593e0b0a26f6ef1d",
          "linkedWithoutMetadata": "dfd9da035bc4437a443914539daee606781266cde8fdc3e6593e0b0a26f6ef1d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/registrar/IReverseRegistrar.sol:IReverseRegistrar",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address)",
          "setDefaultResolver(address)",
          "claim(address)",
          "claimForAddr(address,address,address)",
          "claimWithResolver(address,address)",
          "setName(string)",
          "setNameForAddr(address,address,address,string)",
          "setTldName(uint256,string)",
          "setTldNameForAddr(address,address,address,uint256,string)",
          "setAllNamesForAddr(address,address,address,string,uint256,string)",
          "node(address)",
          "setController(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReverseRegistrar",
            "src": "contracts/registrar/ReverseRegistrar.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sid",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MetaTldsRegistry)22016",
              "contract": "ReverseRegistrar",
              "src": "contracts/registrar/ReverseRegistrar.sol:27"
            },
            {
              "label": "defaultResolver",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ReverseResolver)20990",
              "contract": "ReverseRegistrar",
              "src": "contracts/registrar/ReverseRegistrar.sol:28"
            },
            {
              "label": "controllers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ReverseRegistrar",
              "src": "contracts/registrar/ReverseRegistrar.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ReverseResolver)20990": {
              "label": "contract ReverseResolver",
              "numberOfBytes": "20"
            },
            "t_contract(MetaTldsRegistry)22016": {
              "label": "contract MetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registrar/ReverseRegistrar.sol:ReverseResolver": {
        "src": "contracts/registrar/ReverseRegistrar.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "setTldName(bytes32,uint256,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry": {
        "src": "contracts/registry/IMetaTldsRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/registry/MetaTldsRegistry.sol:MetaTldsRegistry": {
        "src": "contracts/registry/MetaTldsRegistry.sol:9",
        "version": {
          "withMetadata": "fe79a2e8ed88cae1153370e53bdcdc4d85be78a66cf85997667f357e86d80235",
          "withoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e",
          "linkedWithoutMetadata": "6d674bf662233a5d64f29941e580cbdd25bd6ed1eb254ed320ef07fbf0153b8e"
        },
        "inherit": [
          "contracts/registry/IMetaTldsRegistry.sol:IMetaTldsRegistry"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setRecord(bytes32,address,address,uint64)",
          "setSubnodeRecord(bytes32,bytes32,address,address,uint64)",
          "setOwner(bytes32,address)",
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "setApprovalForAll(address,bool)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)",
          "recordExists(bytes32)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MetaTldsRegistry",
            "src": "contracts/registry/MetaTldsRegistry.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "records",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(Record)21604_storage)",
              "contract": "MetaTldsRegistry",
              "src": "contracts/registry/MetaTldsRegistry.sol:16"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "MetaTldsRegistry",
              "src": "contracts/registry/MetaTldsRegistry.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Record)21604_storage)": {
              "label": "mapping(bytes32 => struct MetaTldsRegistry.Record)",
              "numberOfBytes": "32"
            },
            "t_struct(Record)21604_storage": {
              "label": "struct MetaTldsRegistry.Record",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "resolver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ttl",
                  "type": "t_uint64",
                  "offset": 20,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/IMulticallable.sol:IMulticallable": {
        "src": "contracts/resolvers/IMulticallable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface": {
        "src": "contracts/resolvers/ISupportsInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Multicallable.sol:Multicallable": {
        "src": "contracts/resolvers/Multicallable.sol:7",
        "inherit": [
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "multicall(bytes[])",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/resolvers/Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/PublicResolver.sol:PublicResolver": {
        "src": "contracts/resolvers/PublicResolver.sol:20",
        "version": {
          "withMetadata": "13235c78e85290506760c7ab10dcf00e54beaf9d104b380832b03dcea526f587",
          "withoutMetadata": "c0faf623664d64d41c9a90e0ec473e6a1fc6a9bc513ec015aa45705f7283b614",
          "linkedWithoutMetadata": "c0faf623664d64d41c9a90e0ec473e6a1fc6a9bc513ec015aa45705f7283b614"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver",
          "contracts/resolvers/profiles/TextResolver.sol:TextResolver",
          "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver",
          "contracts/resolvers/profiles/NameResolver.sol:NameResolver",
          "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver",
          "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver",
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/Multicallable.sol:Multicallable",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/IMulticallable.sol:IMulticallable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(address,address,uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "supportsInterface(bytes4)",
          "setNewTrustedController(address)",
          "removeTrustedController(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PublicResolver",
            "src": "contracts/resolvers/PublicResolver.sol:51"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/resolvers/Multicallable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts/resolvers/profiles/ABIResolver.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:15"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts/resolvers/profiles/ContentHashResolver.sol:8"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts/resolvers/profiles/InterfaceResolver.sol:10"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts/resolvers/profiles/NameResolver.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23663_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts/resolvers/profiles/PubkeyResolver.sol:13"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts/resolvers/profiles/TextResolver.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts/resolvers/profiles/TldNameResolver.sol:8"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "10",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "10",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "metaTldsRegistry",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(IMetaTldsRegistry)21591",
              "contract": "PublicResolver",
              "src": "contracts/resolvers/PublicResolver.sol:33"
            },
            {
              "label": "trustedControllers",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "PublicResolver",
              "src": "contracts/resolvers/PublicResolver.sol:34"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "PublicResolver",
              "src": "contracts/resolvers/PublicResolver.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IMetaTldsRegistry)21591": {
              "label": "contract IMetaTldsRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)23663_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23663_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)23663_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/Resolver.sol:Resolver": {
        "src": "contracts/resolvers/Resolver.sol:21",
        "inherit": [
          "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver",
          "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver",
          "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "setAddr(bytes32,address)",
          "setAddr(bytes32,uint256,bytes)",
          "setContenthash(bytes32,bytes)",
          "setDnsrr(bytes32,bytes)",
          "setName(bytes32,string)",
          "setPubkey(bytes32,bytes32,bytes32)",
          "setText(bytes32,string,string)",
          "setInterface(bytes32,bytes4,address)",
          "multicall(bytes[])",
          "content(bytes32)",
          "multihash(bytes32)",
          "setContent(bytes32,bytes32)",
          "setMultihash(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/ResolverBase.sol:ResolverBase": {
        "src": "contracts/resolvers/ResolverBase.sol:7",
        "inherit": [
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "clearRecords(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/SupportsInterface.sol:SupportsInterface": {
        "src": "contracts/resolvers/SupportsInterface.sol:6",
        "inherit": [
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/mocks/DummyNameWrapper.sol:DummyNameWrapper": {
        "src": "contracts/resolvers/mocks/DummyNameWrapper.sol:6",
        "version": {
          "withMetadata": "dbad55f87a199e8a6c9794cde4cf1162cbf359b120b6691a07b2b378c0a1bd5f",
          "withoutMetadata": "8e5d2ff5fc745a6745dc6c543c40d7b821497c44cc200e8b37fb56884e8f4abd",
          "linkedWithoutMetadata": "8e5d2ff5fc745a6745dc6c543c40d7b821497c44cc200e8b37fb56884e8f4abd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "ownerOf(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ABIResolver.sol:ABIResolver": {
        "src": "contracts/resolvers/profiles/ABIResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver"
        ],
        "libraries": [],
        "methods": [
          "setABI(bytes32,uint256,bytes)",
          "ABI(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_abis",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "ABIResolver",
              "src": "contracts/resolvers/profiles/ABIResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver": {
        "src": "contracts/resolvers/profiles/AddrResolver.sol:8",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver"
        ],
        "libraries": [],
        "methods": [
          "setAddr(bytes32,address)",
          "addr(bytes32)",
          "setAddr(bytes32,uint256,bytes)",
          "addr(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:15"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ContentHashResolver.sol:ContentHashResolver": {
        "src": "contracts/resolvers/profiles/ContentHashResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver"
        ],
        "libraries": [],
        "methods": [
          "setContenthash(bytes32,bytes)",
          "contenthash(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_hashes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))",
              "contract": "ContentHashResolver",
              "src": "contracts/resolvers/profiles/ContentHashResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bytes_storage)": {
              "label": "mapping(bytes32 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_bytes_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => bytes))",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ExtendedResolver.sol:ExtendedResolver": {
        "src": "contracts/resolvers/profiles/ExtendedResolver.sol:4",
        "version": {
          "withMetadata": "441450eb09cca88666068937bde0113ada4b758113ee80726591a7887b92c885",
          "withoutMetadata": "5536d00f475834f6e34ea2f5120683ca946005ca834e5e566234386a166c772c",
          "linkedWithoutMetadata": "5536d00f475834f6e34ea2f5120683ca946005ca834e5e566234386a166c772c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IABIResolver.sol:IABIResolver": {
        "src": "contracts/resolvers/profiles/IABIResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ABI(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver": {
        "src": "contracts/resolvers/profiles/IAddrResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver": {
        "src": "contracts/resolvers/profiles/IAddressResolver.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IContentHashResolver.sol:IContentHashResolver": {
        "src": "contracts/resolvers/profiles/IContentHashResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "contenthash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSRecordResolver.sol:IDNSRecordResolver": {
        "src": "contracts/resolvers/profiles/IDNSRecordResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "dnsRecord(bytes32,bytes32,uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IDNSZoneResolver.sol:IDNSZoneResolver": {
        "src": "contracts/resolvers/profiles/IDNSZoneResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "zonehash(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedDNSResolver.sol:IExtendedDNSResolver": {
        "src": "contracts/resolvers/profiles/IExtendedDNSResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IExtendedResolver.sol:IExtendedResolver": {
        "src": "contracts/resolvers/profiles/IExtendedResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "resolve(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver": {
        "src": "contracts/resolvers/profiles/IInterfaceResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "interfaceImplementer(bytes32,bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/INameResolver.sol:INameResolver": {
        "src": "contracts/resolvers/profiles/INameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver": {
        "src": "contracts/resolvers/profiles/IPubkeyResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pubkey(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver": {
        "src": "contracts/resolvers/profiles/ITextResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "text(bytes32,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver": {
        "src": "contracts/resolvers/profiles/ITldNameResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tldName(bytes32,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver": {
        "src": "contracts/resolvers/profiles/IVersionableResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordVersions(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/InterfaceResolver.sol:InterfaceResolver": {
        "src": "contracts/resolvers/profiles/InterfaceResolver.sol:9",
        "inherit": [
          "contracts/resolvers/profiles/AddrResolver.sol:AddrResolver",
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IAddressResolver.sol:IAddressResolver",
          "contracts/resolvers/profiles/IAddrResolver.sol:IAddrResolver",
          "contracts/resolvers/profiles/IInterfaceResolver.sol:IInterfaceResolver"
        ],
        "libraries": [],
        "methods": [
          "setInterface(bytes32,bytes4,address)",
          "interfaceImplementer(bytes32,bytes4)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_addresses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:13"
            },
            {
              "label": "defaultCoinType",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "AddrResolver",
              "src": "contracts/resolvers/profiles/AddrResolver.sol:15"
            },
            {
              "label": "versionable_interfaces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))",
              "contract": "InterfaceResolver",
              "src": "contracts/resolvers/profiles/InterfaceResolver.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes4": {
              "label": "bytes4",
              "numberOfBytes": "4"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_bytes4,t_address))": {
              "label": "mapping(bytes32 => mapping(bytes4 => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => bytes))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes4,t_address)": {
              "label": "mapping(bytes4 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bytes_storage)": {
              "label": "mapping(uint256 => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_bytes4,t_address)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(bytes4 => address)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(uint256 => bytes)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/NameResolver.sol:NameResolver": {
        "src": "contracts/resolvers/profiles/NameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/INameResolver.sol:INameResolver"
        ],
        "libraries": [],
        "methods": [
          "setName(bytes32,string)",
          "name(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_names",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))",
              "contract": "NameResolver",
              "src": "contracts/resolvers/profiles/NameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_string_storage)": {
              "label": "mapping(bytes32 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_string_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => string))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/PubkeyResolver.sol:PubkeyResolver": {
        "src": "contracts/resolvers/profiles/PubkeyResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/IPubkeyResolver.sol:IPubkeyResolver"
        ],
        "libraries": [],
        "methods": [
          "setPubkey(bytes32,bytes32,bytes32)",
          "pubkey(bytes32)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_pubkeys",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23663_storage))",
              "contract": "PubkeyResolver",
              "src": "contracts/resolvers/profiles/PubkeyResolver.sol:13"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(PublicKey)23663_storage)": {
              "label": "mapping(bytes32 => struct PubkeyResolver.PublicKey)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_struct(PublicKey)23663_storage))": {
              "label": "mapping(uint64 => mapping(bytes32 => struct PubkeyResolver.PublicKey))",
              "numberOfBytes": "32"
            },
            "t_struct(PublicKey)23663_storage": {
              "label": "struct PubkeyResolver.PublicKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TextResolver.sol:TextResolver": {
        "src": "contracts/resolvers/profiles/TextResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITextResolver.sol:ITextResolver"
        ],
        "libraries": [],
        "methods": [
          "setText(bytes32,string,string)",
          "text(bytes32,string)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "versionable_texts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))",
              "contract": "TextResolver",
              "src": "contracts/resolvers/profiles/TextResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(string => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
              "label": "mapping(string => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_bytes32,t_mapping(t_string_memory_ptr,t_string_storage)))": {
              "label": "mapping(uint64 => mapping(bytes32 => mapping(string => string)))",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "contracts/resolvers/profiles/TldNameResolver.sol:TldNameResolver": {
        "src": "contracts/resolvers/profiles/TldNameResolver.sol:7",
        "inherit": [
          "contracts/resolvers/ResolverBase.sol:ResolverBase",
          "contracts/resolvers/profiles/IVersionableResolver.sol:IVersionableResolver",
          "contracts/resolvers/SupportsInterface.sol:SupportsInterface",
          "contracts/resolvers/ISupportsInterface.sol:ISupportsInterface",
          "contracts/resolvers/profiles/ITldNameResolver.sol:ITldNameResolver"
        ],
        "libraries": [],
        "methods": [
          "setTldName(bytes32,uint256,string)",
          "tldName(bytes32,uint256)",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "recordVersions",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_uint64)",
              "contract": "ResolverBase",
              "src": "contracts/resolvers/ResolverBase.sol:8"
            },
            {
              "label": "tldNames",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))",
              "contract": "TldNameResolver",
              "src": "contracts/resolvers/profiles/TldNameResolver.sol:8"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_uint256,t_string_storage))": {
              "label": "mapping(bytes32 => mapping(uint256 => string))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint64)": {
              "label": "mapping(bytes32 => uint64)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "a937a9d8c2c76fdbfda392e22835273fa0b019203a39c31452e366dc52698a9d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/access/mocks/DummyTldAccessableImpl.sol:DummyTldAccessableImpl": {
        "src": "test/access/mocks/DummyTldAccessableImpl.sol:6",
        "version": {
          "withMetadata": "62774b711bc3081856912974f71146161acb3096b4684bf92bc761b3bf0c361d",
          "withoutMetadata": "4c5d0d5603f4b768b30eac9f0ee7b2c69390f71004b678d048d4a09c5ba316a7",
          "linkedWithoutMetadata": "4c5d0d5603f4b768b30eac9f0ee7b2c69390f71004b678d048d4a09c5ba316a7"
        },
        "inherit": [
          "contracts/access/TldAccessable.sol:TldAccessable"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "testOnlyTldOwner(uint256)",
          "testOnlyFactory()",
          "testOnlyTldController()",
          "testOnlyPlatformAdmin()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyTldAccessableImpl",
            "src": "test/access/mocks/DummyTldAccessableImpl.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "sann",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessable",
              "src": "contracts/access/TldAccessable.sol:15"
            }
          ],
          "types": {
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/admin/mocks/DummyUpgradeableSANN.sol:DummyUpgradeableSANN": {
        "src": "test/admin/mocks/DummyUpgradeableSANN.sol:6",
        "version": {
          "withMetadata": "86a0f6492c5c3f1a2a010f2ab0f410157232bbbfb3258197636a1ad852db687d",
          "withoutMetadata": "c074c452246daff649100edfaa44abec0bdd70c4af9fa4effc57fd1b1eda8269",
          "linkedWithoutMetadata": "c074c452246daff649100edfaa44abec0bdd70c4af9fa4effc57fd1b1eda8269"
        },
        "inherit": [
          "contracts/admin/SANN.sol:SANN",
          "contracts/admin/ISANN.sol:ISANN",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "chainId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:14"
            },
            {
              "label": "currentTldFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:17"
            },
            {
              "label": "currentTldController",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:20"
            },
            {
              "label": "platformAdmin",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:23"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:26"
            },
            {
              "label": "minTldLength",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:29"
            },
            {
              "label": "maxTldLength",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:32"
            },
            {
              "label": "tldInfos",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_uint256,t_struct(TldInfo)6944_storage)",
              "contract": "SANN",
              "src": "contracts/admin/SANN.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(TldInfo)6944_storage)": {
              "label": "mapping(uint256 => struct SANN.TldInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TldInfo)6944_storage": {
              "label": "struct SANN.TldInfo",
              "members": [
                {
                  "label": "tld",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "base",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/common/mocks/Dummy.sol:Dummy": {
        "src": "test/common/mocks/Dummy.sol:6",
        "version": {
          "withMetadata": "96a6be76eb2aa769aef1c8090fcf5d4a3ea512a5a353eb3c1c1f16ef98777943",
          "withoutMetadata": "894e69035c0fc52fc85e71c3feb606b50c756afb3c18c2c2590e5f72371967e8",
          "linkedWithoutMetadata": "894e69035c0fc52fc85e71c3feb606b50c756afb3c18c2c2590e5f72371967e8"
        },
        "inherit": [],
        "libraries": [
          "contracts/common/StringUtils.sol:StringUtils"
        ],
        "methods": [
          "()",
          "containsZeroWidthChar(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/controller/mocks/DummyUpgradeableRegistrar.sol:DummyUpgradeableRegistrar": {
        "src": "test/controller/mocks/DummyUpgradeableRegistrar.sol:6",
        "version": {
          "withMetadata": "1bf0916b0868cef25e064aa293284d63868a37a0c3869116f278f3fa53169243",
          "withoutMetadata": "ef83e50134b194d5f689c0058d64f9b9369f0434f5e17308bbfb7595101904d6",
          "linkedWithoutMetadata": "ef83e50134b194d5f689c0058d64f9b9369f0434f5e17308bbfb7595101904d6"
        },
        "inherit": [
          "contracts/controller/RegistrarController.sol:RegistrarController",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "contracts/access/TreasuryAccessableUpgradeable.sol:TreasuryAccessableUpgradeable",
          "contracts/access/TldAccessableUpgradeable.sol:TldAccessableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "contracts/controller/IRegistrarController.sol:IRegistrarController"
        ],
        "libraries": [],
        "methods": [
          "dummyString()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "sann",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ISANN)6378",
              "contract": "TldAccessableUpgradeable",
              "src": "contracts/access/TldAccessableUpgradeable.sol:16"
            },
            {
              "label": "platformConfig",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IPlatformConfig)6194",
              "contract": "TreasuryAccessableUpgradeable",
              "src": "contracts/access/TreasuryAccessableUpgradeable.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "tldConfigs",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_uint256,t_struct(TldConfig)9455_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:46"
            },
            {
              "label": "tldHooks",
              "offset": 0,
              "slot": "53",
              "type": "t_mapping(t_uint256,t_struct(TldHook)9477_storage)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:47"
            },
            {
              "label": "tldPriceOracles",
              "offset": 0,
              "slot": "54",
              "type": "t_mapping(t_uint256,t_contract(IPriceOracle)18644)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:50"
            },
            {
              "label": "prepaidPlatformFee",
              "offset": 0,
              "slot": "55",
              "type": "t_contract(IPrepaidPlatformFee)6228",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:53"
            },
            {
              "label": "tldRevenues",
              "offset": 0,
              "slot": "56",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:56"
            },
            {
              "label": "platformFeeBalance",
              "offset": 0,
              "slot": "57",
              "type": "t_uint256",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:59"
            },
            {
              "label": "defaultPriceOracle",
              "offset": 0,
              "slot": "58",
              "type": "t_contract(IPriceOracle)18644",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:62"
            },
            {
              "label": "reverseRegistrar",
              "offset": 0,
              "slot": "59",
              "type": "t_contract(IReverseRegistrar)20967",
              "contract": "RegistrarController",
              "src": "contracts/controller/RegistrarController.sol:65"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPlatformConfig)6194": {
              "label": "contract IPlatformConfig",
              "numberOfBytes": "20"
            },
            "t_contract(IPointHook)16420": {
              "label": "contract IPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPrepaidPlatformFee)6228": {
              "label": "contract IPrepaidPlatformFee",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceHook)16459": {
              "label": "contract IPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IPriceOracle)18644": {
              "label": "contract IPriceOracle",
              "numberOfBytes": "20"
            },
            "t_contract(IQualificationHook)16494": {
              "label": "contract IQualificationHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPointHook)16541": {
              "label": "contract IRenewPointHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewPriceHook)16580": {
              "label": "contract IRenewPriceHook",
              "numberOfBytes": "20"
            },
            "t_contract(IRenewRewardHook)16631": {
              "label": "contract IRenewRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(IReverseRegistrar)20967": {
              "label": "contract IReverseRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(IRewardHook)16682": {
              "label": "contract IRewardHook",
              "numberOfBytes": "20"
            },
            "t_contract(ISANN)6378": {
              "label": "contract ISANN",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_contract(IPriceOracle)18644)": {
              "label": "mapping(uint256 => contract IPriceOracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldConfig)9455_storage)": {
              "label": "mapping(uint256 => struct TldConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TldHook)9477_storage)": {
              "label": "mapping(uint256 => struct TldHook)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(TldConfig)9455_storage": {
              "label": "struct TldConfig",
              "members": [
                {
                  "label": "minDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxDomainLength",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minRegistrationDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "minRenewDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "mintCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(TldHook)9477_storage": {
              "label": "struct TldHook",
              "members": [
                {
                  "label": "qualificationHook",
                  "type": "t_contract(IQualificationHook)16494",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "priceHook",
                  "type": "t_contract(IPriceHook)16459",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pointHook",
                  "type": "t_contract(IPointHook)16420",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rewardHook",
                  "type": "t_contract(IRewardHook)16682",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "renewPriceHook",
                  "type": "t_contract(IRenewPriceHook)16580",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "renewPointHook",
                  "type": "t_contract(IRenewPointHook)16541",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "renewRewardHook",
                  "type": "t_contract(IRenewRewardHook)16631",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "test/preregistration/mocks/DummyOracle.sol:DummyOracle": {
        "src": "test/preregistration/mocks/DummyOracle.sol:4",
        "version": {
          "withMetadata": "39d04113f4562b3834cad8508b1372692a074450b01fc111c738128f04044cb2",
          "withoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a",
          "linkedWithoutMetadata": "26ea520bc4f047c80dc39ea7a4c744b8941c1157cc86e27c13b9d1369f67812a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(int256)",
          "set(int256)",
          "latestAnswer()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyOracle",
            "src": "test/preregistration/mocks/DummyOracle.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "value",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "DummyOracle",
              "src": "test/preregistration/mocks/DummyOracle.sol:5"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    }
  ]
}